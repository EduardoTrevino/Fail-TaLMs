### api.py
```python
import requests

def get_boards(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches the list of all boards and their attributes.
    """
    url = "https://a.4cdn.org/boards.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_threads(board: str = 'po', toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a summarized list of all threads on a board including thread numbers,
    their modification time, and reply count.
    
    Parameters:
    board [Optional]: string [Description: The board name. Default is 'po'.]
    """
    url = f"https://a.4cdn.org/{board}/threads.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_catalog(board: str = 'po', toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a JSON representation of a board catalog including all OPs and their preview replies.

    Parameters:
    board [Optional]: string [Description: The board name. Default is 'po'.]
    """
    url = f"https://a.4cdn.org/{board}/catalog.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_archive(board: str = 'po', toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a list of all closed threads in a board archive. Archived threads no longer receive posts.

    Parameters:
    board [Optional]: string [Description: The board name. Default is 'po'.]
    """
    url = f"https://a.4cdn.org/{board}/archive.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_thread(board: str = 'po', thread_id: int = 570368, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a full list of posts in a single thread.

    Parameters:
    board [Optional]: string [Description: The board name. Default is 'po'.]
    thread_id [Optional]: integer [Description: The OP ID of the thread. Default is 570368.]
    """
    url = f"https://a.4cdn.org/{board}/thread/{thread_id}.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_page(board: str = 'po', page_number: int = 1, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a list of threads and their preview replies from a specified index page.

    Parameters:
    board [Optional]: string [Description: The board name. Default is 'po'.]
    page_number [Optional]: integer [Description: The index page number. Default is 1.]
    """
    url = f"https://a.4cdn.org/{board}/{page_number}.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

### api_test.py
```python
import unittest
from api import get_boards, get_threads, get_catalog, get_archive, get_thread, get_page

class Test4ChanAPI(unittest.TestCase):

    def test_get_boards(self):
        response = get_boards()
        self.assertIn('boards', response)

    def test_get_threads(self):
        response = get_threads('po')
        self.assertIsInstance(response, list)

    def test_get_catalog(self):
        response = get_catalog('po')
        self.assertIsInstance(response, list)

    def test_get_archive(self):
        response = get_archive('po')
        self.assertIsInstance(response, list)

    def test_get_thread(self):
        response = get_thread('po', 570368)
        self.assertIn('posts', response)

    def test_get_page(self):
        response = get_page('po', 1)
        self.assertIn('threads', response)

if __name__ == '__main__':
    unittest.main()
```

### 4chan.json
```json
{
    "tool_name": "4chan",
    "tool_description": "Read-only JSON API for accessing posts made at 4chan.org and 4channel.org boards.",
    "title": "4chan API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 95,
        "avgLatency": 200,
        "avgSuccessRate": 98,
        "popularityScore": 9.2,
        "__typename": "Score"
    },
    "home_url": "https://github.com/4chan/4chan-API",
    "host": "a.4cdn.org",
    "api_list": [
        {
            "name": "get_boards",
            "url": "https://a.4cdn.org/boards.json",
            "description": "Fetches the list of all boards and their attributes.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "boards": {
                        "type": "array"
                    }
                }
            }
        },
        {
            "name": "get_threads",
            "url": "https://a.4cdn.org/{board}/threads.json",
            "description": "Fetches a summarized list of all threads on a board.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "board",
                    "type": "STRING",
                    "description": "The board name.",
                    "default": "po"
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "schema": {
                "type": "array"
            }
        },
        {
            "name": "get_catalog",
            "url": "https://a.4cdn.org/{board}/catalog.json",
            "description": "Fetches a JSON representation of a board catalog.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "board",
                    "type": "STRING",
                    "description": "The board name.",
                    "default": "po"
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "schema": {
                "type": "array"
            }
        },
        {
            "name": "get_archive",
            "url": "https://a.4cdn.org/{board}/archive.json",
            "description": "Fetches a list of all closed threads in a board archive.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "board",
                    "type": "STRING",
                    "description": "The board name.",
                    "default": "po"
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "schema": {
                "type": "array"
            }
        },
        {
            "name": "get_thread",
            "url": "https://a.4cdn.org/{board}/thread/{thread_id}.json",
            "description": "Fetches a full list of posts in a single thread.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "board",
                    "type": "STRING",
                    "description": "The board name.",
                    "default": "po"
                },
                {
                    "name": "thread_id",
                    "type": "INTEGER",
                    "description": "The OP ID of the thread.",
                    "default": 570368
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "posts": {
                        "type": "array"
                    }
                }
            }
        },
        {
            "name": "get_page",
            "url": "https://a.4cdn.org/{board}/{page_number}.json",
            "description": "Fetches a list of threads and their preview replies from a specified index page.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "board",
                    "type": "STRING",
                    "description": "The board name.",
                    "default": "po"
                },
                {
                    "name": "page_number",
                    "type": "INTEGER",
                    "description": "The index page number.",
                    "default": 1
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "schema": {
                "type": "object",
                "properties": {
                    "threads": {
                        "type": "array"
                    }
                }
            }
        }
    ]
}
```