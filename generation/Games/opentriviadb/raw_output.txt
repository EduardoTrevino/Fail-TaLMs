**api.py**
```python
import requests
from typing import Optional

def get_random_joke(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a random joke
    """
    url = "https://official-joke-api.appspot.com/random_joke"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_joke_types(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Retrieves the types of jokes available
    """
    url = "https://official-joke-api.appspot.com/types"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_ten_random_jokes(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches ten random jokes
    """
    url = "https://official-joke-api.appspot.com/random_ten"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_random_jokes(number: int = 1, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches a specified number of random jokes
    """
    url = f"https://official-joke-api.appspot.com/jokes/random/{number}"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_jokes_by_type(joke_type: str, quantity: Optional[str] = 'random', toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetches jokes by type with specified quantity, either 'random' or 'ten'
    """
    url = f"https://official-joke-api.appspot.com/jokes/{joke_type}/{quantity}"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_joke_by_id(joke_id: int, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetch a joke by its ID
    """
    url = f"https://official-joke-api.appspot.com/jokes/{joke_id}"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

**api_test.py**
```python
import api

def test_get_random_joke():
    result = api.get_random_joke()
    assert "setup" in result and "punchline" in result, "Failed to get a random joke"

def test_get_joke_types():
    result = api.get_joke_types()
    assert isinstance(result, list) and len(result) > 0, "Failed to get joke types"

def test_get_ten_random_jokes():
    result = api.get_ten_random_jokes()
    assert isinstance(result, list) and len(result) == 10, "Failed to get ten random jokes"

def test_get_random_jokes():
    number = 5
    result = api.get_random_jokes(number)
    assert isinstance(result, list) and len(result) == number, "Failed to get the specified number of random jokes"

def test_get_jokes_by_type():
    joke_type = "programming"
    result = api.get_jokes_by_type(joke_type, "random")
    assert isinstance(result, list) and len(result) > 0, "Failed to get jokes by type"

def test_get_joke_by_id():
    joke_id = 1
    result = api.get_joke_by_id(joke_id)
    assert "setup" in result and "punchline" in result, "Failed to get a joke by ID"
```

**opentriviadb.json**
```json
{
    "tool_name": "opentriviadb",
    "tool_description": "Get random jokes, jokes by type, ten random jokes, and joke types from the Official Joke API.",
    "title": "Official Joke API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 95,
        "avgLatency": 100,
        "avgSuccessRate": 98,
        "popularityScore": 9.3,
        "__typename": "Score"
    },
    "home_url": "https://official-joke-api.appspot.com/",
    "host": "official-joke-api.appspot.com",
    "api_list": [
        {
            "name": "get_random_joke",
            "url": "https://official-joke-api.appspot.com/random_joke",
            "description": "Fetches a random joke",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "statuscode": 200,
            "body": {
                "type": "str",
                "setup": "str",
                "punchline": "str"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "setup": {
                        "type": "string"
                    },
                    "punchline": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "get_joke_types",
            "url": "https://official-joke-api.appspot.com/types",
            "description": "Retrieves the types of jokes available",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "statuscode": 200,
            "body": [
                "str"
            ],
            "headers": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        {
            "name": "get_ten_random_jokes",
            "url": "https://official-joke-api.appspot.com/random_ten",
            "description": "Fetches ten random jokes",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "statuscode": 200,
            "body": [
                {
                    "type": "str",
                    "setup": "str",
                    "punchline": "str"
                }
            ],
            "headers": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "setup": {
                            "type": "string"
                        },
                        "punchline": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "get_random_jokes",
            "url": "https://official-joke-api.appspot.com/jokes/random/<number>",
            "description": "Fetches a specified number of random jokes",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "number",
                    "type": "INTEGER",
                    "description": "The number of random jokes to fetch."
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "body": [
                {
                    "type": "str",
                    "setup": "str",
                    "punchline": "str"
                }
            ],
            "headers": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "setup": {
                            "type": "string"
                        },
                        "punchline": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "get_jokes_by_type",
            "url": "https://official-joke-api.appspot.com/jokes/:type/random",
            "description": "Fetches jokes by type with specified quantity, either 'random' or 'ten'",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "joke_type",
                    "type": "STRING",
                    "description": "The type of jokes to fetch."
                }
            ],
            "optional_parameters": [
                {
                    "name": "quantity",
                    "type": "STRING",
                    "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                }
            ],
            "statuscode": 200,
            "body": [
                {
                    "type": "str",
                    "setup": "str",
                    "punchline": "str"
                }
            ],
            "headers": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "setup": {
                            "type": "string"
                        },
                        "punchline": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        {
            "name": "get_joke_by_id",
            "url": "https://official-joke-api.appspot.com/jokes/:id",
            "description": "Fetch a joke by its ID",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "joke_id",
                    "type": "INTEGER",
                    "description": "The ID of the joke to fetch."
                }
            ],
            "optional_parameters": [],
            "statuscode": 200,
            "body": {
                "type": "str",
                "setup": "str",
                "punchline": "str"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "setup": {
                        "type": "string"
                    },
                    "punchline": {
                        "type": "string"
                    }
                }
            }
        }
    ]
}
```