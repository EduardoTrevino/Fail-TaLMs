{
    "tool_name": "chinesecharacterweb",
    "tool_description": "The Chinese Character Web API provides a programmatic way to get information about Chinese characters from the Unihan Database.",
    "title": "Chinese Character Web API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 90,
        "avgLatency": 100,
        "avgSuccessRate": 95,
        "popularityScore": 8.5,
        "__typename": "Score"
    },
    "home_url": "http://ccdb.hemiola.com",
    "host": "ccdb.hemiola.com",
    "api_list": [
        {
            "name": "get_version",
            "url": "http://ccdb.hemiola.com/version",
            "description": "Returns date information about the CCDB service, the Unicode version, and the PHP/MySQL versions.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\nurl = 'http://ccdb.hemiola.com/version'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "date": "str",
                "unicodeVersion": "str",
                "phpVersion": "str",
                "mysqlVersion": "str"
            },
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "get_fields",
            "url": "http://ccdb.hemiola.com/fields",
            "description": "Returns a list of all field names in the database.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\nurl = 'http://ccdb.hemiola.com/fields'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "fields": ["str"]
            },
            "headers": {},
            "schema": {
                "type": "array"
            }
        },
        {
            "name": "get_all_characters",
            "url": "http://ccdb.hemiola.com/characters",
            "description": "Returns all characters, optionally filtered, or the count of characters.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "Filter for the characters."
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "Specify fields for the characters."
                },
                {
                    "name": "count",
                    "type": "BOOLEAN",
                    "description": "Return count instead of characters."
                }
            ],
            "code": "import requests\nurl = 'http://ccdb.hemiola.com/characters'\nparams = {'filter': filter, 'fields': fields, 'count': count}\nresponse = requests.get(url, params=params)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "characters": ["str"],
                "count": "int"
            },
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "get_characters_by_radical",
            "url": "http://ccdb.hemiola.com/characters/radicals/{radical}",
            "description": "Returns characters that use a specific Kangxi radical.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "radical",
                    "type": "INTEGER",
                    "description": "Kangxi radical number."
                }
            ],
            "optional_parameters": [
                {
                    "name": "strokes",
                    "type": "INTEGER",
                    "description": "Filter by number of additional strokes."
                }
            ],
            "code": "import requests\nurl = f'http://ccdb.hemiola.com/characters/radicals/{radical}'\nparams = {'strokes': strokes}\nresponse = requests.get(url, params=params)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "characters": ["str"]
            },
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "get_strokes",
            "url": "http://ccdb.hemiola.com/strokes",
            "description": "Returns a list of total strokes and a count of characters with each stroke count.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\nurl = 'http://ccdb.hemiola.com/strokes'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "strokes": ["int", "int"],
                "count": ["int", "int"]
            },
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "get_sounds_mandarin",
            "url": "http://ccdb.hemiola.com/sounds/mandarin",
            "description": "Returns a list of Mandarin sounds, optionally with pitch.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "with_pitch",
                    "type": "BOOLEAN",
                    "description": "Include pitch in sounds."
                }
            ],
            "code": "import requests\nurl = 'http://ccdb.hemiola.com/sounds/mandarin'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "mandarin": ["str"]
            },
            "headers": {},
            "schema": {
                "type": "object"
            }
        }
    ]
}