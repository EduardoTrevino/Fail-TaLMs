{
  "tool_name": "datamuse",
  "tool_description": "The Datamuse API is a word-finding query engine for developers, offering a variety of constraints on meaning, spelling, sound, and vocabulary.",
  "title": "Datamuse API",
  "pricing": "FREE for up to 100,000 requests per day",
  "score": {
    "avgServiceLevel": 95,
    "avgLatency": 0.5,
    "avgSuccessRate": 98,
    "popularityScore": 9.4,
    "__typename": "Score"
  },
  "home_url": "https://www.datamuse.com/api/",
  "host": "api.datamuse.com",
  "api_list": [
    {
      "name": "words",
      "url": "https://api.datamuse.com/words",
      "description": "Returns a list of words matching given constraints.",
      "method": "GET",
      "required_parameters": [],
      "optional_parameters": [
        {
          "name": "ml",
          "type": "STRING",
          "description": "Means like constraint."
        },
        {
          "name": "sl",
          "type": "STRING",
          "description": "Sounds like constraint."
        },
        {
          "name": "sp",
          "type": "STRING",
          "description": "Spelled like constraint."
        },
        {
          "name": "rel_code",
          "type": "STRING",
          "description": "Related word constraint codes like 'syn', 'trg'."
        },
        {
          "name": "v",
          "type": "STRING",
          "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
        },
        {
          "name": "topics",
          "type": "STRING",
          "description": "Hints about the context or topic."
        },
        {
          "name": "lc",
          "type": "STRING",
          "description": "Left context hint."
        },
        {
          "name": "rc",
          "type": "STRING",
          "description": "Right context hint."
        },
        {
          "name": "max",
          "type": "INTEGER",
          "description": "Max number of results (default is 100).",
          "default": "100"
        },
        {
          "name": "md",
          "type": "STRING",
          "description": "Metadata flags like 'd' for definitions."
        },
        {
          "name": "qe",
          "type": "STRING",
          "description": "Query echo."
        }
      ],
      "code": "import requests\n\nurl = 'https://api.datamuse.com/words'\nparams = {'ml': ml, 'sl': sl, 'sp': sp, 'rel_code': rel_code, 'v': v, 'topics': topics, 'lc': lc, 'rc': rc, 'max': max, 'md': md, 'qe': qe}\nresponse = requests.get(url, params=params)\nprint(response.json())",
      "statuscode": 200,
      "body": [
        {
          "word": "string",
          "score": "integer"
        }
      ],
      "headers": {},
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "word": { "type": "string" },
            "score": { "type": "integer" }
          }
        }
      }
    },
    {
      "name": "sug",
      "url": "https://api.datamuse.com/sug",
      "description": "Provides word suggestions given a partial query for autocomplete.",
      "method": "GET",
      "required_parameters": [
        {
          "name": "s",
          "type": "STRING",
          "description": "Prefix hint string entered by user."
        }
      ],
      "optional_parameters": [
        {
          "name": "max",
          "type": "INTEGER",
          "description": "Max number of results (default is 10).",
          "default": "10"
        },
        {
          "name": "v",
          "type": "STRING",
          "description": "Vocab identifier, like in /words."
        }
      ],
      "code": "import requests\n\nurl = 'https://api.datamuse.com/sug'\nparams = {'s': s, 'max': max, 'v': v}\nresponse = requests.get(url, params=params)\nprint(response.json())",
      "statuscode": 200,
      "body": [
        {
          "word": "string",
          "score": "integer"
        }
      ],
      "headers": {},
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "word": { "type": "string" },
            "score": { "type": "integer" }
          }
        }
      }
    }
  ]
}
