**### api.py**  
```python
import requests

def get_ip_location(ip: str, format: str = 'json', toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Get complete location information for a specific IP address.
    
    Parameters:
    ip (str): The IP address to retrieve location for.
    format (str): The format of the response. Default is 'json'. Other formats include 'jsonp', 'xml', 'csv', and 'yaml'.
    
    Returns:
    dict or str: The response from the API in the specified format.
    """
    url = f"https://ipapi.co/{ip}/{format}/"
    response = requests.get(url)
    if format == 'json':
        return response.json()
    else:
        return response.text

def get_ip_location_field(ip: str, field: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Get a specific location field for a specific IP address.
    
    Parameters:
    ip (str): The IP address to retrieve the location field for.
    field (str): The specific field to retrieve.
    
    Returns:
    str: The value of the requested field.
    """
    url = f"https://ipapi.co/{ip}/{field}/"
    response = requests.get(url)
    return response.text

def get_client_ip_location(format: str = 'json', toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Get complete location information for the client's IP address.
    
    Parameters:
    format (str): The format of the response. Default is 'json'. Other formats include 'jsonp', 'xml', 'csv', and 'yaml'.
    
    Returns:
    dict or str: The response from the API in the specified format.
    """
    url = f"https://ipapi.co/{format}/"
    response = requests.get(url)
    if format == 'json':
        return response.json()
    else:
        return response.text

def get_client_ip_location_field(field: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Get a specific location field for the client's IP address.
    
    Parameters:
    field (str): The specific field to retrieve.
    
    Returns:
    str: The value of the requested field.
    """
    url = f"https://ipapi.co/{field}/"
    response = requests.get(url)
    return response.text
```

**### api_test.py**  
```python
import unittest
from api import get_ip_location, get_ip_location_field, get_client_ip_location, get_client_ip_location_field

class TestIpApi(unittest.TestCase):

    def test_get_ip_location(self):
        ip = "8.8.8.8"
        response = get_ip_location(ip)
        self.assertIn("ip", response)
        self.assertEqual(response["ip"], ip)

    def test_get_ip_location_field(self):
        ip = "8.8.8.8"
        field = "country"
        response = get_ip_location_field(ip, field)
        self.assertEqual(response, "US")

    def test_get_client_ip_location(self):
        response = get_client_ip_location()
        self.assertIn("ip", response)

    def test_get_client_ip_location_field(self):
        field = "ip"
        response = get_client_ip_location_field(field)
        self.assertTrue(response)  # should return a valid IP address string

if __name__ == "__main__":
    unittest.main()
```

**### ipapi.json**  
```json
{
    "tool_name": "ipapi",
    "tool_description": "A REST API to find the location of an IP address, providing various details about city, region, country, continent, and more.",
    "title": "IPAPI",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 98,
        "avgLatency": 50,
        "avgSuccessRate": 99.5,
        "popularityScore": 9.8
    },
    "home_url": "https://ipapi.co/docs/",
    "host": "ipapi.co",
    "api_list": [
        {
            "name": "get_ip_location",
            "url": "https://ipapi.co/{ip}/{format}/",
            "description": "Retrieve complete location information for a specific IP address.",
            "method": "GET",
            "required_parameters": [
                {"name": "ip", "type": "STRING", "description": "The IP address to retrieve location for."}
            ],
            "optional_parameters": [
                {"name": "format", "type": "STRING", "description": "Response format: json, jsonp, xml, csv, yaml", "default": "json"}
            ],
            "statuscode": 200
        },
        {
            "name": "get_ip_location_field",
            "url": "https://ipapi.co/{ip}/{field}/",
            "description": "Retrieve a specific location field for a specific IP address.",
            "method": "GET",
            "required_parameters": [
                {"name": "ip", "type": "STRING", "description": "The IP address to retrieve the location field for."},
                {"name": "field", "type": "STRING", "description": "The specific field to retrieve."}
            ],
            "statuscode": 200
        },
        {
            "name": "get_client_ip_location",
            "url": "https://ipapi.co/{format}/",
            "description": "Retrieve complete location information for the client's IP address.",
            "method": "GET",
            "optional_parameters": [
                {"name": "format", "type": "STRING", "description": "Response format: json, jsonp, xml, csv, yaml", "default": "json"}
            ],
            "statuscode": 200
        },
        {
            "name": "get_client_ip_location_field",
            "url": "https://ipapi.co/{field}/",
            "description": "Retrieve a specific location field for the client's IP address.",
            "method": "GET",
            "required_parameters": [
                {"name": "field", "type": "STRING", "description": "The specific field to retrieve."}
            ],
            "statuscode": 200
        }
    ]
}
```