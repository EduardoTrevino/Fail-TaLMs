### api.py
```python
import requests
from typing import Optional, List


def search_address(q: str, limit: Optional[int] = 10, autocomplete: Optional[int] = 1, lat: Optional[float] = None, lon: Optional[float] = None, type_filter: Optional[str] = None, postcode: Optional[str] = None, citycode: Optional[str] = None, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Perform a full-text address search with optional parameters.
    Parameters:
    q [Required]: string - The query string.
    limit [Optional]: integer - Maximum number of results to return.
    autocomplete [Optional]: integer - Enable or disable autocomplete processing.
    lat [Optional]: float - Latitude for geographic priority.
    lon [Optional]: float - Longitude for geographic priority.
    type_filter [Optional]: string - Filter by type (e.g., 'street').
    postcode [Optional]: string - Filter by postal code.
    citycode [Optional]: string - Filter by INSEE city code.
    """
    url = "https://api-adresse.data.gouv.fr/search/"
    params = {
        'q': q,
        'limit': limit,
        'autocomplete': autocomplete
    }
    if lat and lon:
        params.update({'lat': lat, 'lon': lon})
    if type_filter:
        params['type'] = type_filter
    if postcode:
        params['postcode'] = postcode
    if citycode:
        params['citycode'] = citycode

    response = requests.get(url, params=params)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}


def reverse_geocode(lat: float, lon: float, type_filter: Optional[str] = None, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Perform reverse geocoding to get address from coordinates.
    Parameters:
    lat [Required]: float - Latitude of the point to reverse geocode.
    lon [Required]: float - Longitude of the point to reverse geocode.
    type_filter [Optional]: string - Type filter for the result.
    """
    url = "https://api-adresse.data.gouv.fr/reverse/"
    params = {
        'lat': lat,
        'lon': lon
    }
    if type_filter:
        params['type'] = type_filter

    response = requests.get(url, params=params)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}


def mass_geocode_csv(file_path: str, columns: Optional[List[str]] = None, citycode: Optional[str] = None, postcode: Optional[str] = None, result_columns: Optional[List[str]] = None, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Perform mass geocoding from a CSV file.
    Parameters:
    file_path [Required]: string - Path to the CSV file.
    columns [Optional]: list of strings - Columns to use for forming the address.
    citycode [Optional]: string - Column containing INSEE city code.
    postcode [Optional]: string - Column containing postal code.
    result_columns [Optional]: list of strings - Fields expected in the response.
    """
    url = "https://api-adresse.data.gouv.fr/search/csv/"
    files = {'data': open(file_path, 'rb')}
    data = {}

    if columns:
        for column in columns:
            data['columns'] = column

    if citycode:
        data['citycode'] = citycode

    if postcode:
        data['postcode'] = postcode

    if result_columns:
        for result_column in result_columns:
            data['result_columns'] = result_column

    response = requests.post(url, files=files, data=data)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}


def mass_reverse_geocode_csv(file_path: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Perform mass reverse geocoding from a CSV file.
    Parameters:
    file_path [Required]: string - Path to the CSV file.
    """
    url = "https://api-adresse.data.gouv.fr/reverse/csv/"
    files = {'data': open(file_path, 'rb')}
    
    response = requests.post(url, files=files)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

### api_test.py
```python
import unittest
from api import search_address, reverse_geocode, mass_geocode_csv, mass_reverse_geocode_csv


class TestAdresseAPI(unittest.TestCase):

    def test_search_address(self):
        response = search_address(q="8 bd du port", limit=1)
        self.assertIn("features", response)
        self.assertIsInstance(response["features"], list)

    def test_reverse_geocode(self):
        response = reverse_geocode(lat=48.357, lon=2.37)
        self.assertIn("features", response)
        self.assertIsInstance(response["features"], list)

    def test_mass_geocode_csv(self):
        response = mass_geocode_csv(file_path="test_files/search.csv", columns=['adresse', 'postcode'])
        self.assertIn("error", response)

    def test_mass_reverse_geocode_csv(self):
        response = mass_reverse_geocode_csv(file_path="test_files/reverse.csv")
        self.assertIn("error", response)


if __name__ == '__main__':
    unittest.main()
```

### adresse.json
```json
{
    "tool_name": "adresse",
    "tool_description": "API to perform address and reverse geocoding, including mass geocoding from CSV files.",
    "title": "Adresse API",
    "pricing": "FREE with a limit of 50 calls/second/IP",
    "score": {
        "avgServiceLevel": 95,
        "avgLatency": 150,
        "avgSuccessRate": 98,
        "popularityScore": 9.0,
        "__typename": "Score"
    },
    "home_url": "https://api-adresse.data.gouv.fr/",
    "host": "api-adresse.data.gouv.fr",
    "api_list": [
        {
            "name": "search_address",
            "url": "https://api-adresse.data.gouv.fr/search/",
            "description": "Perform a full-text address search with optional filters.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The query string.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "INTEGER",
                    "description": "The maximum number of results to return.",
                    "default": "10"
                },
                {
                    "name": "autocomplete",
                    "type": "INTEGER",
                    "description": "Enable or disable autocomplete.",
                    "default": "1"
                },
                {
                    "name": "lat",
                    "type": "FLOAT",
                    "description": "Latitude for geographic priority.",
                    "default": ""
                },
                {
                    "name": "lon",
                    "type": "FLOAT",
                    "description": "Longitude for geographic priority.",
                    "default": ""
                },
                {
                    "name": "type_filter",
                    "type": "STRING",
                    "description": "Filter by type.",
                    "default": ""
                },
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "Filter by postal code.",
                    "default": ""
                },
                {
                    "name": "citycode",
                    "type": "STRING",
                    "description": "Filter by INSEE city code.",
                    "default": ""
                }
            ],
            "statuscode": 200,
            "body": {
                "type": "FeatureCollection",
                "features": "ARRAY"
            },
            "headers": {},
            "schema": {
                "type": "object"
            }
        },
        {
            "name": "reverse_geocode",
            "url": "https://api-adresse.data.gouv.fr/reverse/",
            "description": "Perform reverse geocoding to get address from coordinates.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "lat",
                    "type": "FLOAT",
                    "description": "Latitude of the point to reverse geocode.",
                    "default": ""
                },
                {
                    "name": "lon",
                    "type": "FLOAT",
                    "description": "Longitude of the point to reverse geocode.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "type_filter",
                    "type": "STRING",
                    "description": "Filter the type of result.",
                    "default": ""
                }
            ],
            "statuscode": 200,
            "body": {
                "type": "FeatureCollection",
                "features": "ARRAY"
            }
        },
        {
            "name": "mass_geocode_csv",
            "url": "https://api-adresse.data.gouv.fr/search/csv/",
            "description": "Perform mass geocoding from a provided CSV file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file_path",
                    "type": "STRING",
                    "description": "Path to the CSV file.",
                    "default": ""
                }
            ],
            "optional_parameters": [
                {
                    "name": "columns",
                    "type": "ARRAY",
                    "description": "Columns to use for forming the address.",
                    "default": "[]"
                },
                {
                    "name": "citycode",
                    "type": "STRING",
                    "description": "Column for INSEE city code.",
                    "default": ""
                },
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "Column for postal code.",
                    "default": ""
                },
                {
                    "name": "result_columns",
                    "type": "ARRAY",
                    "description": "Fields expected in the response.",
                    "default": "[]"
                }
            ],
            "statuscode": 200,
            "body": {
                "type": "object",
                "features": "ARRAY"
            }
        },
        {
            "name": "mass_reverse_geocode_csv",
            "url": "https://api-adresse.data.gouv.fr/reverse/csv/",
            "description": "Perform mass reverse geocoding from a provided CSV file.",
            "method": "POST",
            "required_parameters": [
                {
                    "name": "file_path",
                    "type": "STRING",
                    "description": "Path to the CSV file.",
                    "default": ""
                }
            ],
            "statuscode": 200,
            "body": {
                "type": "object",
                "features": "ARRAY"
            }
        }
    ]
}
```