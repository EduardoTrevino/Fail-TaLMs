Sure, here's how you might construct a sample `api_list-question` JSON file based on the provided tools "ipapi" and "opentopodata":

```json
[
  {
    "api_list": [
      {
        "category_name": "Geo",
        "tool_name": "ipapi",
        "api_name": "get_ip_location",
        "api_description": "Retrieve complete location information for a specific IP address.",
        "required_parameters": [
          {
            "name": "ip",
            "type": "STRING",
            "description": "The IP address to retrieve location for."
          }
        ],
        "optional_parameters": [
          {
            "name": "format",
            "type": "STRING",
            "description": "Response format: json, jsonp, xml, csv, yaml",
            "default": "json"
          }
        ],
        "method": "GET",
        "template_response": {
          "ip": "string",
          "city": "string",
          "region": "string",
          "country": "string",
          "latitude": "float",
          "longitude": "float"
        }
      },
      {
        "category_name": "Geo",
        "tool_name": "opentopodata",
        "api_name": "get_elevation",
        "api_description": "Reads the elevation from a given dataset based on specified locations.",
        "required_parameters": [
          {
            "name": "dataset_name",
            "type": "STRING",
            "description": "The name of the dataset."
          },
          {
            "name": "locations",
            "type": "STRING",
            "description": "Coordinates in latitude,longitude format or Google polyline."
          }
        ],
        "optional_parameters": [
          {
            "name": "samples",
            "type": "INTEGER",
            "description": "Query elevation for sample equally-spaced points."
          },
          {
            "name": "interpolation",
            "type": "STRING",
            "description": "Interpolation method (nearest, bilinear, cubic).",
            "default": "bilinear"
          },
          {
            "name": "nodata_value",
            "type": "STRING",
            "description": "Value to return for NODATA.",
            "default": "null"
          },
          {
            "name": "format",
            "type": "STRING",
            "description": "Response format (json or geojson).",
            "default": "json"
          }
        ],
        "method": "GET",
        "template_response": {
          "results": [
            {
              "elevation": "float",
              "location": {
                "lat": "float",
                "lng": "float"
              },
              "dataset": "string"
            }
          ],
          "status": "string"
        }
      }
    ],
    "query": "Can you find out the location information for the IP address 8.8.8.8 and get the elevation for this location using SRTM dataset?",
    "relevant APIs": [],
    "query_id": 1
  }
]
```

### Explanation:
- **Query**: The question asks for both the location information using the IP `8.8.8.8` (using `ipapi`) and the elevation at that location via `opentopodata`.
- **api_list**:
  - **get_ip_location** from `ipapi`: To determine the geographical location given an IP address, including latitude and longitude.
  - **get_elevation** from `opentopodata`: To retrieve elevation data given the latitude and longitude from the previous API.
- **query_id**: This is simply a unique identifier for the query.