**### api.py**

```python
import requests
from typing import Optional

def get_content_object(post_title: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Retrieves a specific content object by its post title.
    Parameters:
    - post_title: str - The title of the post without trailing slashes.
    """
    url = f"https://www.healthcare.gov/{post_title}.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_content_collection(content_type: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Retrieves a specific content collection by its content type.
    Parameters:
    - content_type: str - The type of the content (e.g., articles, blog, glossary).
    """
    url = f"https://www.healthcare.gov/api/{content_type}.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_content_index(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Retrieves the site-wide index of all posts and their metadata.
    """
    url = "https://www.healthcare.gov/api/index.json"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

**### api_test.py**

```python
import unittest
from api import get_content_object, get_content_collection, get_content_index

class TestHealthCareAPI(unittest.TestCase):

    def test_get_content_object(self):
        result = get_content_object("accessibility")
        self.assertIn("url", result)

    def test_get_content_collection(self):
        result = get_content_collection("glossary")
        self.assertIn("glossary", result)

    def test_get_content_index(self):
        result = get_content_index()
        self.assertIsInstance(result, list)
        self.assertIsInstance(result[0], dict)
        self.assertIn("tags", result[0])

if __name__ == "__main__":
    unittest.main()
```

**### healthcare.json**

```json
{
    "tool_name": "healthcare",
    "tool_description": "API to access a wealth of data about healthcare content from the Health Insurance Marketplace.",
    "title": "HealthCare.gov API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 98,
        "avgLatency": 200,
        "avgSuccessRate": 99,
        "popularityScore": 9.0,
        "__typename": "Score"
    },
    "home_url": "https://www.healthcare.gov/developers/",
    "host": "www.healthcare.gov",
    "api_list": [
        {
            "name": "get_content_object",
            "url": "https://www.healthcare.gov/:post-title.json",
            "description": "Retrieves a specific content object by its post title.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "post_title",
                    "type": "STRING",
                    "description": "The title of the post without trailing slashes."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\nurl = 'https://www.healthcare.gov/'+post_title+'.json'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "url": "string",
                "title": "string",
                "content": "string",
                "author": "string",
                "date": "string",
                "lang": "string",
                "categories": [],
                "tags": [],
                "topics": [],
                "layout": "string",
                "order": 0
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "url": {"type": "string"},
                    "title": {"type": "string"},
                    "content": {"type": "string"}
                }
            }
        },
        {
            "name": "get_content_collection",
            "url": "https://www.healthcare.gov/api/:content-type.json",
            "description": "Retrieves a specific content collection by its content type.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "content_type",
                    "type": "STRING",
                    "description": "The type of the content (e.g., articles, blog, glossary)."
                }
            ],
            "optional_parameters": [],
            "code": "import requests\nurl = 'https://www.healthcare.gov/api/'+content_type+'.json'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "content-type": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "content-type": {"type": "array"}
                }
            }
        },
        {
            "name": "get_content_index",
            "url": "https://www.healthcare.gov/api/index.json",
            "description": "Retrieves the site-wide index of all posts and their metadata.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\nurl = 'https://www.healthcare.gov/api/index.json'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": [
                {
                    "tags": [],
                    "categories": [],
                    "topics": [],
                    "title": "string",
                    "es-title": "string",
                    "url": "string",
                    "bite": "string",
                    "es-bite": "string",
                    "state": []
                }
            ],
            "headers": {},
            "schema": {
                "type": "array",
                "items": {
                    "type": "object"
                }
            }
        }
    ]
}
```