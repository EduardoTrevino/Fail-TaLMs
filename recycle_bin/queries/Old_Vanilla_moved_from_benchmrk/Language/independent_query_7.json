[
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What is the basic data of the Chinese character '‰ªÅ'? Also, does this sentence 'This is a clean sentence' contain any profanity?",
        "relevant APIs": [],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you retrieve the text content for the chapter with URN 'ctp:analects/xue-er' and check if it contains any profanities? If it does, return the clean text as JSON.",
        "relevant APIs": [],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_plain",
                "api_description": "Filter profanity from text and return result as plain text.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Provide a list of dynasties from Chinese history. Additionally, filter out any profanities from the statement 'This dynasty is freaking amazing!' and return the cleaned text in plain format.",
        "relevant APIs": [],
        "query_id": 3
    }
]