[
    {
        "api_list": [
            {
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {"name": "ml", "type": "STRING", "description": "Means like constraint."},
                    {"name": "sl", "type": "STRING", "description": "Sounds like constraint."},
                    {"name": "sp", "type": "STRING", "description": "Spelled like constraint."},
                    {"name": "rel_code", "type": "STRING", "description": "Related word constraint codes like 'syn', 'trg'."},
                    {"name": "v", "type": "STRING", "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."},
                    {"name": "topics", "type": "STRING", "description": "Hints about the context or topic."},
                    {"name": "lc", "type": "STRING", "description": "Left context hint."},
                    {"name": "rc", "type": "STRING", "description": "Right context hint."},
                    {"name": "max", "type": "INTEGER", "description": "Max number of results (default is 100).", "default": "100"},
                    {"name": "md", "type": "STRING", "description": "Metadata flags like 'd' for definitions."},
                    {"name": "qe", "type": "STRING", "description": "Query echo."}
                ],
                "method": "GET",
                "template_response": [
                    {"word": "str", "score": "int"}
                ]
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {"name": "text", "type": "STRING", "description": "Input text to be processed."}
                ],
                "optional_parameters": [
                    {"name": "add", "type": "STRING", "description": "Comma separated words to add to the profanity list."},
                    {"name": "fill_text", "type": "STRING", "description": "Text for replacing profane words."},
                    {"name": "fill_char", "type": "STRING", "description": "Character to replace profane words."}
                ],
                "method": "GET",
                "template_response": {"result": "str"}
            }
        ],
        "query": "I need to find words related to happiness that don't contain any profanity. Can you provide a list of such words?",
        "relevant APIs": [],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {"name": "s", "type": "STRING", "description": "Prefix hint string entered by user."}
                ],
                "optional_parameters": [
                    {"name": "max", "type": "INTEGER", "description": "Max number of results (default is 10).", "default": "10"},
                    {"name": "v", "type": "STRING", "description": "Vocab identifier, like in /words."}
                ],
                "method": "GET",
                "template_response": [
                    {"word": "str", "score": "int"}
                ]
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {"name": "text", "type": "STRING", "description": "Input text to be checked for profanity."}
                ],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "I'm typing part of an unfamiliar word and need suggestions to complete it. However, I want to ensure none of the suggested words are profane. Can you provide some suggestions?",
        "relevant APIs": [],
        "query_id": 2
    }
]