[
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "character",
                "api_description": "Get all characters or a single character by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INT",
                        "description": "The ID of the character",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INT",
                        "description": "The page number of the characters list",
                        "default": 1
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the character",
                        "default": null
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "The status of the character (alive, dead, unknown)",
                        "default": null
                    },
                    {
                        "name": "species",
                        "type": "STRING",
                        "description": "The species of the character",
                        "default": null
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type or subspecies of the character",
                        "default": null
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "The gender of the character (female, male, genderless, unknown)",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "info": {
                        "count": "int",
                        "pages": "int",
                        "next": "string (url)",
                        "prev": "string (url)"
                    },
                    "results": [
                        {
                            "id": "int",
                            "name": "string",
                            "status": "string",
                            "species": "string",
                            "type": "string",
                            "gender": "string",
                            "origin": {
                                "name": "string",
                                "url": "string (url)"
                            },
                            "location": {
                                "name": "string",
                                "url": "string (url)"
                            },
                            "image": "string (url)",
                            "episode": [
                                "list of strings (urls)"
                            ],
                            "url": "string (url)",
                            "created": "string (datetime)"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "location",
                "api_description": "Get all locations or a single location by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INT",
                        "description": "The ID of the location",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the location",
                        "default": null
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type of the location",
                        "default": null
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "The dimension of the location",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "info": {
                        "count": "int",
                        "pages": "int",
                        "next": "string (url)",
                        "prev": "string (url)"
                    },
                    "results": [
                        {
                            "id": "int",
                            "name": "string",
                            "type": "string",
                            "dimension": "string",
                            "residents": [
                                "list of strings (urls)"
                            ],
                            "url": "string (url)",
                            "created": "string (datetime)"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "episode",
                "api_description": "Get all episodes or a single episode by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INT",
                        "description": "The ID of the episode",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the episode",
                        "default": null
                    },
                    {
                        "name": "episode",
                        "type": "STRING",
                        "description": "The code of the episode",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "info": {
                        "count": "int",
                        "pages": "int",
                        "next": "string (url)",
                        "prev": "string (url)"
                    },
                    "results": [
                        {
                            "id": "int",
                            "name": "string",
                            "air_date": "string",
                            "episode": "string",
                            "characters": [
                                "list of strings (urls)"
                            ],
                            "url": "string (url)",
                            "created": "string (datetime)"
                        }
                    ]
                }
            }
        ],
        "query": "I want to know about the episodes where Rick Sanchez appears and also the details of the locations he visits.",
        "relevant APIs": [],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "tvmaze",
                "api_name": "showsearch",
                "api_description": "Search through all the shows in the database by the show's name. A fuzzy algorithm is used to find shows even if the query contains small typos. Results are returned in order of relevancy and contain each show's full information.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "int",
                            "name": "str",
                            "language": "str",
                            "genres": [
                                "list of str"
                            ],
                            "status": "str",
                            "runtime": "int",
                            "premiered": "str",
                            "officialSite": "str",
                            "schedule": {
                                "time": "str",
                                "days": [
                                    "list of str"
                                ]
                            },
                            "rating": {
                                "average": "float"
                            },
                            "weight": "int",
                            "network": {
                                "id": "int",
                                "name": "str",
                                "country": {
                                    "name": "str",
                                    "code": "str",
                                    "timezone": "str"
                                }
                            },
                            "webChannel": "NoneType",
                            "externals": {
                                "tvrage": "int",
                                "thetvdb": "int",
                                "imdb": "str"
                            },
                            "image": {
                                "medium": "str",
                                "original": "str"
                            },
                            "summary": "str",
                            "updated": "int",
                            "_links": {
                                "self": {
                                    "href": "str"
                                },
                                "previousepisode": {
                                    "href": "str"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "tvmaze",
                "api_name": "showepisodes",
                "api_description": "A complete list of episodes for the given show. Episodes are returned in their airing order, and include full episode information. By default, specials are not included in the list.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INT",
                        "description": "The TVmaze ID of the show.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "id": "int",
                            "url": "str",
                            "name": "str",
                            "season": "int",
                            "number": "int",
                            "type": "str",
                            "airdate": "str",
                            "airtime": "str",
                            "airstamp": "str",
                            "runtime": "int",
                            "image": {
                                "medium": "str",
                                "original": "str"
                            },
                            "summary": "str",
                            "_links": {
                                "self": {
                                    "href": "str"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the show 'Breaking Bad' and list all its episodes.",
        "relevant APIs": [],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works based on a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of rows to return.",
                        "default": 20
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "string",
                    "message-type": "work-list",
                    "message-version": "string",
                    "message": {
                        "items": [
                            {
                                "DOI": "string",
                                "title": [
                                    "string"
                                ],
                                "author": [
                                    {
                                        "given": "string",
                                        "family": "string"
                                    }
                                ],
                                "container-title": [
                                    "string"
                                ],
                                "published": {
                                    "date-parts": [
                                        [
                                            0
                                        ]
                                    ]
                                },
                                "abstract": "string",
                                "URL": "string"
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "crossref",
                "api_name": "get_work_metadata",
                "api_description": "Retrieve metadata for a specific work identified by DOI.",
                "required_parameters": [
                    {
                        "name": "doi",
                        "type": "STRING",
                        "description": "The DOI of the work.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "string",
                    "message-type": "work",
                    "message-version": "string",
                    "message": {
                        "DOI": "string",
                        "title": [
                            "string"
                        ],
                        "author": [
                            {
                                "given": "string",
                                "family": "string"
                            }
                        ],
                        "container-title": [
                            "string"
                        ],
                        "published": {
                            "date-parts": [
                                [
                                    0
                                ]
                            ]
                        },
                        "abstract": "string",
                        "URL": "string"
                    }
                }
            }
        ],
        "query": "Find works related to 'quantum computing' and provide detailed metadata for the first result.",
        "relevant APIs": [],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_person_details",
                "api_description": "Get details of a specific person by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the person.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "height": "str",
                    "mass": "str",
                    "hair_color": "str",
                    "skin_color": "str",
                    "eye_color": "str",
                    "birth_year": "str",
                    "gender": "str",
                    "homeworld": "str",
                    "films": [
                        "str"
                    ],
                    "species": [
                        "str"
                    ],
                    "vehicles": [
                        "str"
                    ],
                    "starships": [
                        "str"
                    ],
                    "created": "str",
                    "edited": "str",
                    "url": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_film_details",
                "api_description": "Get details of a specific film by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the film.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "episode_id": "int",
                    "opening_crawl": "str",
                    "director": "str",
                    "producer": "str",
                    "release_date": "str",
                    "characters": [
                        "str"
                    ],
                    "planets": [
                        "str"
                    ],
                    "starships": [
                        "str"
                    ],
                    "vehicles": [
                        "str"
                    ],
                    "species": [
                        "str"
                    ],
                    "created": "str",
                    "edited": "str",
                    "url": "str"
                }
            }
        ],
        "query": "Tell me about Luke Skywalker and list all the films he appears in.",
        "relevant APIs": [],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_single_character",
                "api_description": "Get details of a single character by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "ID of the character",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "id": "int",
                        "name": "string",
                        "status": "string",
                        "species": "string",
                        "gender": "string",
                        "hair": "string",
                        "origin": "string",
                        "abilities": [
                            "array of strings"
                        ],
                        "alias": [
                            "array of strings"
                        ],
                        "img_url": "string (url)"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "Final Space API",
                "api_name": "get_all_episodes",
                "api_description": "Get all episodes from Final Space.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "ENUM",
                        "description": "Sort the episodes by ID",
                        "default": "asc",
                        "values": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of episodes returned",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "int",
                            "name": "string",
                            "air_date": "string",
                            "director": "string",
                            "writer": "string",
                            "characters": [
                                "array of strings"
                            ],
                            "img_url": "string (url)"
                        }
                    ]
                }
            }
        ],
        "query": "Show me the details of the character Gary Goodspeed and list all episodes.",
        "relevant_APIs": [],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "today",
                "api_description": "Will return today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "218",
                    "day": "Monday",
                    "mystery": "Joyful",
                    "season": "Ordinary Time",
                    "currentDate": "August 5, 2024",
                    "mp3Link": "audio-rosary-joyful-mysteries.mp3"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "joyful",
                "api_description": "Will return joyful rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prayer": "Joyful Mysteries",
                    "description": "Includes Annunciation, Visitation, Nativity, Presentation, and Finding in the Temple."
                }
            }
        ],
        "query": "What is today's rosary prayer and can you give details about the Joyful Mysteries?",
        "relevant APIs": [],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "iceandfire",
                "api_name": "get_character",
                "api_description": "Retrieve information about a specific character from the Ice and Fire universe",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The unique ID of the character",
                        "default": 823
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "str",
                    "name": "str",
                    "gender": "str",
                    "culture": "str",
                    "born": "str",
                    "died": "str",
                    "titles": [
                        "list of str"
                    ],
                    "aliases": [
                        "list of str"
                    ],
                    "father": "str",
                    "mother": "str",
                    "spouse": "str",
                    "allegiances": [
                        "list of str"
                    ],
                    "books": [
                        "list of str"
                    ],
                    "povBooks": [
                        "list of str"
                    ],
                    "tvSeries": [
                        "list of str"
                    ],
                    "playedBy": [
                        "list of str"
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "IceAndFire",
                "api_name": "get_house",
                "api_description": "Retrieve information about a specific house from the Ice and Fire universe",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The unique ID of the house",
                        "default": 10
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "str",
                    "name": "str",
                    "region": "str",
                    "coatOfArms": "str",
                    "words": "str",
                    "titles": [
                        "list of str"
                    ],
                    "seats": [
                        "list of str"
                    ],
                    "currentLord": "str",
                    "heir": "str",
                    "overlord": "str",
                    "founded": "str",
                    "founder": "str",
                    "diedOut": "str",
                    "ancestralWeapons": [
                        "list of str"
                    ],
                    "cadetBranches": [
                        "list of str"
                    ],
                    "swornMembers": [
                        "list of str"
                    ]
                }
            }
        ],
        "query": "Tell me about Petyr Baelish and his house.",
        "relevant APIs": [],
        "query_id": 7
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_story_by_id",
                "api_description": "Fetch a Hacker News story by its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the story.",
                        "default": 8863
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "by": "str",
                    "descendants": "int",
                    "id": "int",
                    "kids": [
                        "list of int"
                    ],
                    "score": "int",
                    "time": "int",
                    "title": "str",
                    "type": "str",
                    "url": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_comment_by_id",
                "api_description": "Fetch a Hacker News comment by its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the comment.",
                        "default": 2921983
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "by": "str",
                    "id": "int",
                    "kids": [
                        "list of int"
                    ],
                    "parent": "int",
                    "text": "str",
                    "time": "int",
                    "type": "str"
                }
            }
        ],
        "query": "Get details of the Hacker News story with ID 8863 and fetch the top-level comments for this story.",
        "relevant APIs": [],
        "query_id": 8
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "query",
                "api_description": "Fetch data from and about MediaWiki.",
                "required_parameters": [
                    {
                        "name": "titles",
                        "type": "STRING",
                        "description": "Titles of the pages to query.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "prop",
                        "type": "STRING",
                        "description": "Which pieces of information to get (e.g., revisions, categories).",
                        "default": "revisions|categories"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "query": {
                        "pages": {
                            "pageid": {
                                "pageid": "int",
                                "title": "str",
                                "revisions": [
                                    {
                                        "revid": "int",
                                        "parentid": "int",
                                        "user": "str",
                                        "timestamp": "str",
                                        "comment": "str",
                                        "size": "int"
                                    }
                                ],
                                "categories": [
                                    {
                                        "ns": "int",
                                        "title": "str"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse",
                "api_description": "Get the contents of a page in HTML format.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "prop",
                        "type": "STRING",
                        "description": "Which pieces of information to get (e.g., text, categories).",
                        "default": "text"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "parse": {
                        "title": "str",
                        "pageid": "int",
                        "text": {
                            "*": "str"
                        }
                    }
                }
            }
        ],
        "query": "I want to get the HTML content of the Wikipedia page for 'Pet door' and also retrieve its revision history and categories.",
        "relevant_apis": [],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Retrieve information about a specific anime by its MyAnimeList ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The MyAnimeList ID of the anime.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "mal_id": 0,
                        "url": "string",
                        "images": {},
                        "trailer": {},
                        "approved": true,
                        "titles": [],
                        "title": "string",
                        "title_english": "string",
                        "title_japanese": "string",
                        "title_synonyms": [],
                        "type": "TV",
                        "source": "string",
                        "episodes": 0,
                        "status": "Finished Airing",
                        "airing": true,
                        "aired": {},
                        "duration": "string",
                        "rating": "G - All Ages",
                        "score": 0,
                        "scored_by": 0,
                        "rank": 0,
                        "popularity": 0,
                        "members": 0,
                        "favorites": 0,
                        "synopsis": "string",
                        "background": "string",
                        "season": "summer",
                        "year": 0,
                        "broadcast": {},
                        "producers": [],
                        "licensors": [],
                        "studios": [],
                        "genres": [],
                        "explicit_genres": [],
                        "themes": [],
                        "demographics": []
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_characters",
                "api_description": "Retrieve the characters of a specific anime by its MyAnimeList ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The MyAnimeList ID of the anime.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "mal_id": 0,
                            "url": "string",
                            "images": {},
                            "name": "string",
                            "name_kanji": "string",
                            "nicknames": [],
                            "favorites": 0,
                            "about": "string",
                            "anime": [],
                            "manga": [],
                            "voices": []
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_staff",
                "api_description": "Retrieve the staff of a specific anime by its MyAnimeList ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The MyAnimeList ID of the anime.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "mal_id": 0,
                            "url": "string",
                            "images": {},
                            "name": "string",
                            "name_kanji": "string",
                            "nicknames": [],
                            "favorites": 0,
                            "about": "string",
                            "positions": []
                        }
                    ]
                }
            }
        ],
        "query": "Give me detailed information about the anime with ID 1, including its characters and staff.",
        "relevant APIs": [],
        "query_id": 10
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevize",
                "api_name": "get_schedule",
                "api_description": "Fetches the TV schedule for a given date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "User login",
                        "default": "test"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in dd.mm.yyyy format",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "Channel identifier",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "BOOLEAN",
                        "description": "Include regional broadcasts",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "program": {
                        "datum_vysilani": "str",
                        "kanal": "str",
                        "generovano": "str",
                        "porad": [
                            {
                                "link": "str",
                                "ivysilani": "str",
                                "vps": "str",
                                "datum": "str",
                                "cas": "str",
                                "nazvy": {
                                    "nadtitul": "str",
                                    "nazev": "str",
                                    "original": "str",
                                    "nazev_casti": "str"
                                },
                                "dil": "str",
                                "zanr": "str",
                                "stopaz": "str",
                                "noticka": "str",
                                "regionalni": "str",
                                "alternativa": "str",
                                "ikony": {
                                    "zvuk": "str",
                                    "ad": "int",
                                    "skryte_titulky": "int",
                                    "neslysici": "int",
                                    "live": "int",
                                    "premiera": "int",
                                    "cb": "int",
                                    "hvezdicka": "int",
                                    "labeling": "str",
                                    "puvodni_zneni": "int",
                                    "pomer": "str"
                                },
                                "obrazky": {
                                    "tv_program": "str",
                                    "nahled": "str"
                                },
                                "dostupnost": {
                                    "stav": "str",
                                    "od": "str",
                                    "do": "str"
                                }
                            }
                        ]
                    }
                }
            }
        ],
        "query": "What are the schedules for \u010cT1 and \u010cT2 on 04.08.2024, including regional broadcasts for \u010cT1?",
        "relevant APIs": [],
        "query_id": 11
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_recently_added_anime",
                "api_description": "Fetch a list of recently added anime",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INT",
                        "description": "Number of records to skip",
                        "default": 0
                    },
                    {
                        "name": "nlist",
                        "type": "INT",
                        "description": "Number of records to list",
                        "default": 50
                    }
                ],
                "method": "GET",
                "template_response": {
                    "anime_list": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information about an anime using its ID",
                "required_parameters": [
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "The ID of the anime",
                        "default": "4658"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "anime": {
                        "id": "str",
                        "type": "str",
                        "name": "str",
                        "genres": [
                            "str"
                        ],
                        "themes": [
                            "str"
                        ],
                        "plot_summary": "str",
                        "number_of_episodes": "int",
                        "vintage": "str",
                        "ratings": {
                            "weighted_score": "float",
                            "bayesian_score": "float"
                        },
                        "staff": [
                            {
                                "task": "str",
                                "person": "str"
                            }
                        ],
                        "cast": [
                            {
                                "role": "str",
                                "person": "str"
                            }
                        ]
                    }
                }
            }
        ],
        "query": "Get a list of recently added anime and detailed information about each anime in the list.",
        "relevant APIs": [],
        "query_id": 12
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search results for books, authors, and more",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The solr query",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "The fields to get back from solr. Use '*' to get all fields",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort results by various facets such as 'new', 'old', 'random', etc.",
                        "default": ""
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The user's language as a two-letter (ISO 639-1) language code",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Pagination page number",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page",
                        "default": 10
                    }
                ],
                "method": "GET",
                "template_response": {
                    "start": "INTEGER",
                    "num_found": "INTEGER",
                    "docs": [
                        {
                            "cover_i": "INTEGER",
                            "has_fulltext": "BOOLEAN",
                            "edition_count": "INTEGER",
                            "title": "STRING",
                            "author_name": [
                                "STRING"
                            ],
                            "first_publish_year": "INTEGER",
                            "key": "STRING",
                            "ia": [
                                "STRING"
                            ],
                            "author_key": [
                                "STRING"
                            ],
                            "public_scan_b": "BOOLEAN"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "openlibrary",
                "api_name": "get_author_details",
                "api_description": "Retrieve an author and their works by author identifier",
                "required_parameters": [
                    {
                        "name": "author_id",
                        "type": "STRING",
                        "description": "The author's Open Library identifier",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "key": "STRING",
                    "name": "STRING",
                    "birth_date": "STRING",
                    "death_date": "STRING",
                    "work_count": "INTEGER",
                    "top_work": "STRING",
                    "top_subjects": [
                        "STRING"
                    ],
                    "works": [
                        {
                            "key": "STRING",
                            "title": "STRING"
                        }
                    ]
                }
            }
        ],
        "query": "Find all books related to 'artificial intelligence' and provide details of the author of the most relevant book.",
        "relevant APIs": [],
        "query_id": 13
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mcucountdown",
                "api_name": "nextmcuproduction",
                "api_description": "Get details of the next MCU production including days until release, overview, poster URL, release date, title, and type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "ISO formatted date to get MCU production details as of this date.",
                        "default": "today's date"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "days_until": "int",
                    "overview": "str",
                    "poster_url": "str",
                    "release_date": "str",
                    "title": "str",
                    "type": "str",
                    "following_production": {
                        "days_until": "int",
                        "id": "int",
                        "overview": "str",
                        "poster_url": "str",
                        "release_date": "str",
                        "title": "str",
                        "type": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "mcucountdown",
                "api_name": "followingproduction",
                "api_description": "Get details of the MCU production following the next one including days until release, overview, poster URL, release date, title, and type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "ISO formatted date to get MCU production details as of this date.",
                        "default": "today's date"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "days_until": "int",
                    "id": "int",
                    "overview": "str",
                    "poster_url": "str",
                    "release_date": "str",
                    "title": "str",
                    "type": "str"
                }
            }
        ],
        "query": "What are the details of the next MCU film and the one following it?",
        "relevant APIs": [],
        "query_id": 14
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "wordpress",
                "api_name": "retrieve_post",
                "api_description": "Retrieve a specific post record",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "Unique identifier for the post.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "id": "integer",
                        "title": "string",
                        "content": "string",
                        "author": "integer",
                        "date": "datetime",
                        "link": "string"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "wordpress",
                "api_name": "list_comments",
                "api_description": "Retrieve a collection of comments",
                "required_parameters": [
                    {
                        "name": "post",
                        "type": "INTEGER",
                        "description": "The ID of the associated post object.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "context",
                        "type": "ENUM",
                        "description": "Scope under which the request is made; determines fields present in response.",
                        "default": "view"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Current page of the collection.",
                        "default": 1
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Maximum number of items to be returned in result set.",
                        "default": 10
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "integer",
                            "author": "integer",
                            "content": "string",
                            "date": "datetime"
                        }
                    ]
                }
            }
        ],
        "query": "Can you show me the details of post with ID 10 and its comments?",
        "relevant APIs": [],
        "query_id": 15
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the directory of newspaper titles using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "The search query",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "ENUM",
                        "description": "The format of the response (html, json, atom)",
                        "default": "json"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "description": "Page number for paginated results",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "lccn": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_pages",
                "api_description": "Search digitized newspaper pages using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "andtext",
                        "type": "STRING",
                        "description": "The search query",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "ENUM",
                        "description": "The format of the response (html, json, atom)",
                        "default": "json"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "description": "Page number for paginated results",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "url": "str",
                            "date": "str",
                            "snippet": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Find all newspaper titles and their first pages mentioning 'Thomas' from Michigan.",
        "relevant APIs": [],
        "query_id": 16
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "redditstocks",
                "api_name": "topstocks",
                "api_description": "Retrieve the top stocks discussed on Wallstreetbets.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of top stocks to retrieve.",
                        "default": 10
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeframe",
                        "type": "STRING",
                        "description": "The timeframe for the data (e.g., 'day', 'week', 'month').",
                        "default": "day"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "stocks": [
                        {
                            "ticker": "str",
                            "mentions": "int",
                            "sentiment_score": "float",
                            "price": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "redditstocks",
                "api_name": "stockdetails",
                "api_description": "Retrieve detailed information about a specific stock.",
                "required_parameters": [
                    {
                        "name": "ticker",
                        "type": "STRING",
                        "description": "The ticker symbol of the stock.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ticker": "str",
                    "company_name": "str",
                    "sector": "str",
                    "industry": "str",
                    "price": "float",
                    "market_cap": "float",
                    "volume": "int",
                    "average_volume": "int",
                    "pe_ratio": "float",
                    "dividend_yield": "float"
                }
            }
        ],
        "query": "Can you provide the top 5 stocks discussed on Wallstreetbets this week and detailed information about each stock?",
        "relevant APIs": [],
        "query_id": 17
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "4chan",
                "api_name": "get_thread_list",
                "api_description": "List of all threads on a board with their attributes.",
                "required_parameters": [
                    {
                        "name": "board",
                        "type": "STRING",
                        "description": "The board to retrieve threads from",
                        "default": "po"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "page": "integer",
                    "threads": [
                        {
                            "no": "integer",
                            "last_modified": "integer",
                            "replies": "integer"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "4chan",
                "api_name": "get_thread",
                "api_description": "Retrieve the full content of a specific thread.",
                "required_parameters": [
                    {
                        "name": "board",
                        "type": "STRING",
                        "description": "The board the thread is located on",
                        "default": "po"
                    },
                    {
                        "name": "thread_id",
                        "type": "INTEGER",
                        "description": "The ID of the thread",
                        "default": 570368
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "posts": [
                        {
                            "no": "integer",
                            "resto": "integer",
                            "sticky": "integer",
                            "closed": "integer",
                            "now": "string",
                            "time": "integer",
                            "name": "string",
                            "trip": "string",
                            "id": "string",
                            "capcode": "string",
                            "country": "string",
                            "country_name": "string",
                            "sub": "string",
                            "com": "string",
                            "tim": "integer",
                            "filename": "string",
                            "ext": "string",
                            "fsize": "integer",
                            "md5": "string",
                            "w": "integer",
                            "h": "integer",
                            "tn_w": "integer",
                            "tn_h": "integer",
                            "filedeleted": "integer",
                            "spoiler": "integer",
                            "custom_spoiler": "integer",
                            "replies": "integer",
                            "images": "integer",
                            "bumplimit": "integer",
                            "imagelimit": "integer",
                            "tag": "string",
                            "semantic_url": "string",
                            "since4pass": "integer",
                            "unique_ips": "integer",
                            "m_img": "integer",
                            "archived": "integer",
                            "archived_on": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Get a list of all threads on the 'po' board and retrieve the full content of the most recent thread.",
        "relevant APIs": [],
        "query_id": 18
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_astro_forecast",
                "api_description": "Get the 3-day astronomical weather forecast",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location",
                        "default": 113.17
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location",
                        "default": 23.09
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "output",
                        "type": "ENUM",
                        "description": "Output format (xml or json)",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "product": "astro",
                    "init": "str",
                    "dataseries": [
                        {
                            "timepoint": "int",
                            "cloudcover": "int",
                            "seeing": "int",
                            "transparency": "int",
                            "lifted_index": "int",
                            "rh2m": "int",
                            "wind10m": {
                                "direction": "str",
                                "speed": "int"
                            },
                            "temp2m": "int",
                            "prec_type": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the 3-day astronomical weather forecast for the location with longitude 113.17 and latitude 23.09?",
        "relevant APIs": [],
        "query_id": 19
    },
    {
        "api_list": [
            {
                "category_name": "Colors",
                "tool_name": "Colourlovers API",
                "api_name": "top_colors",
                "api_description": "Fetch top colors based on specific parameters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lover",
                        "type": "STRING",
                        "description": "Filter by lover's username"
                    },
                    {
                        "name": "hueRange",
                        "type": "STRING",
                        "description": "Range of hues (e.g., '12,68')"
                    },
                    {
                        "name": "briRange",
                        "type": "STRING",
                        "description": "Range of brightness (e.g., '2,88')"
                    },
                    {
                        "name": "keywords",
                        "type": "STRING",
                        "description": "Search term"
                    },
                    {
                        "name": "keywordExact",
                        "type": "BOOLEAN",
                        "description": "Exact keyword search (0 or 1)"
                    },
                    {
                        "name": "orderCol",
                        "type": "STRING",
                        "description": "Order by column (e.g., 'dateCreated')"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Sort order ('ASC' or 'DESC')"
                    },
                    {
                        "name": "numResults",
                        "type": "INTEGER",
                        "description": "Number of results (max 100)"
                    },
                    {
                        "name": "resultOffset",
                        "type": "INTEGER",
                        "description": "Result offset for paging"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Result format ('json' or 'xml')"
                    },
                    {
                        "name": "jsonCallback",
                        "type": "STRING",
                        "description": "Callback function for JSON format"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "colors": [
                        {
                            "id": "int",
                            "title": "string",
                            "userName": "string",
                            "numViews": "int",
                            "numVotes": "int",
                            "numComments": "int",
                            "numHearts": "int",
                            "rank": "int",
                            "dateCreated": "string",
                            "hex": "string",
                            "rgb": {
                                "red": "int",
                                "green": "int",
                                "blue": "int"
                            },
                            "hsv": {
                                "hue": "int",
                                "saturation": "int",
                                "value": "int"
                            },
                            "description": "string",
                            "url": "string",
                            "imageUrl": "string",
                            "badgeUrl": "string",
                            "apiUrl": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Patterns",
                "tool_name": "Colourlovers API",
                "api_name": "top_patterns",
                "api_description": "Fetch top patterns based on specific parameters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lover",
                        "type": "STRING",
                        "description": "Filter by lover's username"
                    },
                    {
                        "name": "hueOption",
                        "type": "STRING",
                        "description": "Hue options (e.g., 'yellow,orange,red')"
                    },
                    {
                        "name": "hex",
                        "type": "STRING",
                        "description": "Hex values (e.g., '00FF33')"
                    },
                    {
                        "name": "hex_logic",
                        "type": "STRING",
                        "description": "Hex logic ('AND' or 'OR')"
                    },
                    {
                        "name": "keywords",
                        "type": "STRING",
                        "description": "Search term"
                    },
                    {
                        "name": "keywordExact",
                        "type": "BOOLEAN",
                        "description": "Exact keyword search (0 or 1)"
                    },
                    {
                        "name": "orderCol",
                        "type": "STRING",
                        "description": "Order by column (e.g., 'dateCreated')"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Sort order ('ASC' or 'DESC')"
                    },
                    {
                        "name": "numResults",
                        "type": "INTEGER",
                        "description": "Number of results (max 100)"
                    },
                    {
                        "name": "resultOffset",
                        "type": "INTEGER",
                        "description": "Result offset for paging"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Result format ('json' or 'xml')"
                    },
                    {
                        "name": "jsonCallback",
                        "type": "STRING",
                        "description": "Callback function for JSON format"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "patterns": [
                        {
                            "id": "int",
                            "title": "string",
                            "userName": "string",
                            "numViews": "int",
                            "numVotes": "int",
                            "numComments": "int",
                            "numHearts": "int",
                            "rank": "int",
                            "dateCreated": "string",
                            "colors": [
                                "string"
                            ],
                            "description": "string",
                            "url": "string",
                            "imageUrl": "string",
                            "badgeUrl": "string",
                            "apiUrl": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I want to see the top colors and patterns created by the user 'COLOURlover' with a hue range between 12 and 68 and keywords related to 'nature'.",
        "relevant APIs": [],
        "query_id": 20
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image",
                "api_description": "Compress an image using resmush.it API",
                "required_parameters": [
                    {
                        "name": "img",
                        "type": "STRING",
                        "description": "URL of the image to compress",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "Quality level for JPG compression (0-100)",
                        "default": 92
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain EXIF data during compression",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "src": "str",
                    "dest": "str",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "str",
                    "error": "int",
                    "error_log": "str"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "check_error",
                "api_description": "Check the error log of the compressed image",
                "required_parameters": [
                    {
                        "name": "img",
                        "type": "STRING",
                        "description": "URL of the image to check",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "error": "int",
                    "error_log": "str"
                }
            }
        ],
        "query": "How can I compress an image and check for any errors using resmush.it API?",
        "relevant APIs": [],
        "query_id": 21
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search term",
                        "default": "Impressionist paintings"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "ID of the department",
                        "default": "11"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_object",
                "api_description": "Get detailed information about an object",
                "required_parameters": [
                    {
                        "name": "objectID",
                        "type": "INTEGER",
                        "description": "The unique Object ID for an object",
                        "default": "437329"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "objectID": "int",
                    "isHighlight": "boolean",
                    "accessionNumber": "string",
                    "accessionYear": "string",
                    "isPublicDomain": "boolean",
                    "primaryImage": "string",
                    "primaryImageSmall": "string",
                    "additionalImages": [
                        "string"
                    ],
                    "constituents": [
                        {
                            "constituentID": "int",
                            "role": "string",
                            "name": "string",
                            "constituentULAN_URL": "string",
                            "constituentWikidata_URL": "string",
                            "gender": "string"
                        }
                    ],
                    "department": "string",
                    "objectName": "string",
                    "title": "string",
                    "culture": "string",
                    "period": "string",
                    "dynasty": "string",
                    "reign": "string",
                    "portfolio": "string",
                    "artistRole": "string",
                    "artistPrefix": "string",
                    "artistDisplayName": "string",
                    "artistDisplayBio": "string",
                    "artistSuffix": "string",
                    "artistAlphaSort": "string",
                    "artistNationality": "string",
                    "artistBeginDate": "string",
                    "artistEndDate": "string",
                    "artistGender": "string",
                    "artistWikidata_URL": "string",
                    "artistULAN_URL": "string",
                    "objectDate": "string",
                    "objectBeginDate": "int",
                    "objectEndDate": "int",
                    "medium": "string",
                    "dimensions": "string",
                    "measurements": [
                        {
                            "elementName": "string",
                            "elementDescription": "string",
                            "elementMeasurements": {
                                "Height": "float",
                                "Width": "float"
                            }
                        }
                    ],
                    "creditLine": "string",
                    "geographyType": "string",
                    "city": "string",
                    "state": "string",
                    "county": "string",
                    "country": "string",
                    "region": "string",
                    "subregion": "string",
                    "locale": "string",
                    "locus": "string",
                    "excavation": "string",
                    "river": "string",
                    "classification": "string",
                    "rightsAndReproduction": "string",
                    "linkResource": "string",
                    "metadataDate": "string",
                    "repository": "string",
                    "objectURL": "string",
                    "tags": [
                        {
                            "term": "string",
                            "AAT_URL": "string",
                            "Wikidata_URL": "string"
                        }
                    ],
                    "objectWikidata_URL": "string",
                    "isTimelineWork": "boolean",
                    "GalleryNumber": "string"
                }
            }
        ],
        "query": "I want to find Impressionist paintings in the European Paintings department and get detailed information about the first result.",
        "relevant APIs": [],
        "query_id": 22
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks data in the aggregator. Artworks in the groups of essentials are boosted so they'll show up higher in results.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Your search query.",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of results to return. Pagination via Elasticsearch conventions.",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Used in conjunction with query to sort results.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents",
                "api_description": "A list of all agents sorted by last updated date in descending order.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of resources to return per page.",
                        "default": "2"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "description": "str",
                            "birth_date": "int",
                            "death_date": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Find artworks related to Monet and provide details of the artists.",
        "relevant APIs": [],
        "query_id": 23
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Fetches a single random dog image from the entire collection.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "endpoint": "https://dog.ceo/api/breeds/image/random",
                "template_response": {
                    "message": "str",
                    "status": "str"
                }
            }
        ],
        "query": "Show me a random dog image.",
        "relevant APIs": [],
        "query_id": 24
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "irail",
                "api_name": "connections",
                "api_description": "Get routes between two stations, including real-time data on delays.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "The name or id of the station of departure.",
                        "default": "Antwerp-Central"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "The name or id of the destination.",
                        "default": "Brussels"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timesel",
                        "type": "ENUM",
                        "description": "Whether the results should show arrivals or departures.",
                        "default": "departure",
                        "choices": [
                            "departure",
                            "arrival"
                        ]
                    },
                    {
                        "name": "typeOfTransport",
                        "type": "ENUM",
                        "description": "The types of transport to include in the search.",
                        "default": "automatic",
                        "choices": [
                            "automatic",
                            "trains",
                            "nointernationaltrains",
                            "all"
                        ]
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Whether or not to include alerts about the route.",
                        "default": "false"
                    },
                    {
                        "name": "results",
                        "type": "NUMBER",
                        "description": "The number of results to return.",
                        "default": 6
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "The time to query.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date to query.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "ENUM",
                        "description": "The response format.",
                        "default": "json",
                        "choices": [
                            "xml",
                            "json",
                            "jsonp"
                        ]
                    },
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "The language of the response.",
                        "default": "en",
                        "choices": [
                            "nl",
                            "fr",
                            "en",
                            "de"
                        ]
                    }
                ],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "timestamp": "int",
                    "connection": [
                        {
                            "id": "int",
                            "departure": {
                                "delay": "int",
                                "station": "str",
                                "stationinfo": {
                                    "id": "str",
                                    "@id": "str",
                                    "locationX": "float",
                                    "locationY": "float",
                                    "standardname": "str",
                                    "name": "str"
                                },
                                "time": "int",
                                "vehicle": "str",
                                "vehicleinfo": {
                                    "name": "str",
                                    "shortname": "str",
                                    "@id": "str"
                                },
                                "platform": "str",
                                "platforminfo": {
                                    "name": "str",
                                    "normal": "str"
                                },
                                "left": "int",
                                "canceled": "int",
                                "direction": {
                                    "name": "str"
                                },
                                "stops": {
                                    "number": "int",
                                    "stop": [
                                        {
                                            "id": "int",
                                            "station": "str",
                                            "stationinfo": {
                                                "id": "str",
                                                "@id": "str",
                                                "locationX": "float",
                                                "locationY": "float",
                                                "standardname": "str",
                                                "name": "str"
                                            },
                                            "time": "int",
                                            "delay": "int",
                                            "canceled": "int",
                                            "departureDelay": "int",
                                            "departureCanceled": "int",
                                            "scheduledDepartureTime": "int",
                                            "arrivalDelay": "int",
                                            "arrivalCanceled": "int",
                                            "isExtraStop": "int",
                                            "scheduledArrivalTime": "int",
                                            "departureConnection": "str"
                                        }
                                    ]
                                },
                                "alerts": {
                                    "number": "int",
                                    "alert": [
                                        {
                                            "id": "int",
                                            "header": "str",
                                            "lead": "str",
                                            "link": "str",
                                            "startTime": "int",
                                            "endTime": "int"
                                        }
                                    ]
                                },
                                "walking": "int",
                                "departureConnection": "str"
                            },
                            "arrival": {
                                "delay": "int",
                                "station": "str",
                                "stationinfo": {
                                    "id": "str",
                                    "@id": "str",
                                    "locationX": "float",
                                    "locationY": "float",
                                    "standardname": "str",
                                    "name": "str"
                                },
                                "time": "int",
                                "vehicle": "str",
                                "vehicleinfo": {
                                    "name": "str",
                                    "shortname": "str",
                                    "@id": "str"
                                },
                                "platform": "str",
                                "platforminfo": {
                                    "name": "str",
                                    "normal": "str"
                                },
                                "arrived": "int",
                                "canceled": "int",
                                "walking": "int",
                                "direction": {
                                    "name": "str"
                                }
                            },
                            "duration": "int",
                            "vias": {
                                "number": "int",
                                "via": [
                                    {
                                        "id": "str",
                                        "arrival": {
                                            "time": "int",
                                            "platform": "str",
                                            "platforminfo": {
                                                "name": "str",
                                                "normal": "str"
                                            },
                                            "arrived": "int",
                                            "delay": "int",
                                            "canceled": "int",
                                            "vehicle": "str",
                                            "walking": "int",
                                            "direction": {
                                                "name": "str"
                                            }
                                        },
                                        "departure": {
                                            "time": "int",
                                            "platform": "str",
                                            "platforminfo": {
                                                "name": "str",
                                                "normal": "str"
                                            },
                                            "left": "int",
                                            "delay": "int",
                                            "canceled": "int",
                                            "departureConnection": "str",
                                            "vehicle": "str",
                                            "walking": "int",
                                            "alerts": {
                                                "number": "int",
                                                "alert": [
                                                    {
                                                        "id": "int",
                                                        "header": "str",
                                                        "lead": "str",
                                                        "link": "str",
                                                        "startTime": "int",
                                                        "endTime": "int"
                                                    }
                                                ]
                                            },
                                            "direction": {
                                                "name": "str"
                                            },
                                            "stops": {
                                                "number": "int",
                                                "stop": [
                                                    {
                                                        "id": "int",
                                                        "station": "str",
                                                        "stationinfo": {
                                                            "id": "str",
                                                            "@id": "str",
                                                            "locationX": "float",
                                                            "locationY": "float",
                                                            "standardname": "str",
                                                            "name": "str"
                                                        },
                                                        "time": "int",
                                                        "delay": "int",
                                                        "canceled": "int",
                                                        "departureDelay": "int",
                                                        "departureCanceled": "int",
                                                        "scheduledDepartureTime": "int",
                                                        "arrivalDelay": "int",
                                                        "arrivalCanceled": "int",
                                                        "isExtraStop": "int",
                                                        "scheduledArrivalTime": "int",
                                                        "departureConnection": "str"
                                                    }
                                                ]
                                            }
                                        },
                                        "timeBetween": "int",
                                        "station": "str",
                                        "stationinfo": {
                                            "id": "str",
                                            "@id": "str",
                                            "locationX": "float",
                                            "locationY": "float",
                                            "standardname": "str",
                                            "name": "str"
                                        },
                                        "vehicle": "str",
                                        "direction": {
                                            "name": "str"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Transportation",
                "tool_name": "irail",
                "api_name": "vehicle",
                "api_description": "Retrieve information about a vehicle, including stops, occupancy, current location and delays.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The id of the vehicle (train).",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date to query.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "ENUM",
                        "description": "The response format.",
                        "default": "json",
                        "choices": [
                            "xml",
                            "json",
                            "jsonp"
                        ]
                    },
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "The language of the response.",
                        "default": "en",
                        "choices": [
                            "nl",
                            "fr",
                            "en",
                            "de"
                        ]
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Whether or not to include alerts about the train.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "timestamp": "int",
                    "vehicle": "str",
                    "vehicleinfo": {
                        "name": "str",
                        "locationX": "float",
                        "locationY": "float",
                        "shortname": "str",
                        "@id": "str"
                    },
                    "stops": {
                        "number": "int",
                        "stop": [
                            {
                                "id": "int",
                                "station": "str",
                                "stationinfo": {
                                    "id": "str",
                                    "@id": "str",
                                    "locationX": "float",
                                    "locationY": "float",
                                    "standardname": "str",
                                    "name": "str"
                                },
                                "time": "int",
                                "delay": "int",
                                "platform": "str",
                                "platforminfo": {
                                    "name": "str",
                                    "normal": "str"
                                },
                                "canceled": "int",
                                "departureDelay": "int",
                                "departureCanceled": "int",
                                "scheduledDepartureTime": "int",
                                "arrivalDelay": "int",
                                "arrivalCanceled": "int",
                                "isExtraStop": "int",
                                "scheduledArrivalTime": "int",
                                "departureConnection": "str",
                                "occupancy": {
                                    "@id": "str",
                                    "name": "str"
                                }
                            }
                        ]
                    }
                }
            }
        ],
        "query": "Find the next train connection from Antwerp Central to Brussels, including intermediate stops and real-time delays.",
        "relevant APIs": [],
        "query_id": 25
    },
    {
        "api_list": [
            {
                "category_name": "FakeData",
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v1",
                "api_description": "Generate Version-1 UUIDs",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of UUIDs to generate (up to 100)",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        "uuid_string"
                    ]
                }
            }
        ],
        "query": "Generate 5 version-1 UUIDs for me.",
        "relevant APIs": [],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "category_name": "FakeData",
                "tool_name": "randomuser",
                "api_name": "get_user",
                "api_description": "Generate a random user",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INT",
                        "description": "Number of users to generate",
                        "default": 1
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender",
                        "default": ""
                    },
                    {
                        "name": "nat",
                        "type": "STRING",
                        "description": "Filter results by nationality",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "gender": "str",
                            "name": {
                                "title": "str",
                                "first": "str",
                                "last": "str"
                            },
                            "location": {
                                "street": {
                                    "number": "int",
                                    "name": "str"
                                },
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "postcode": "str",
                                "coordinates": {
                                    "latitude": "str",
                                    "longitude": "str"
                                },
                                "timezone": {
                                    "offset": "str",
                                    "description": "str"
                                }
                            },
                            "email": "str",
                            "login": {
                                "uuid": "str",
                                "username": "str",
                                "password": "str",
                                "salt": "str",
                                "md5": "str",
                                "sha1": "str",
                                "sha256": "str"
                            },
                            "dob": {
                                "date": "str",
                                "age": "int"
                            },
                            "registered": {
                                "date": "str",
                                "age": "int"
                            },
                            "phone": "str",
                            "cell": "str",
                            "id": {
                                "name": "str",
                                "value": "str"
                            },
                            "picture": {
                                "large": "str",
                                "medium": "str",
                                "thumbnail": "str"
                            },
                            "nat": "str"
                        }
                    ],
                    "info": {
                        "seed": "str",
                        "results": "int",
                        "page": "int",
                        "version": "str"
                    }
                }
            },
            {
                "category_name": "FakeData",
                "tool_name": "randomuser",
                "api_name": "get_multiple_users",
                "api_description": "Generate multiple random users",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INT",
                        "description": "Number of users to generate",
                        "default": 10
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender",
                        "default": ""
                    },
                    {
                        "name": "nat",
                        "type": "STRING",
                        "description": "Filter results by nationality",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "gender": "str",
                            "name": {
                                "title": "str",
                                "first": "str",
                                "last": "str"
                            },
                            "location": {
                                "street": {
                                    "number": "int",
                                    "name": "str"
                                },
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "postcode": "str",
                                "coordinates": {
                                    "latitude": "str",
                                    "longitude": "str"
                                },
                                "timezone": {
                                    "offset": "str",
                                    "description": "str"
                                }
                            },
                            "email": "str",
                            "login": {
                                "uuid": "str",
                                "username": "str",
                                "password": "str",
                                "salt": "str",
                                "md5": "str",
                                "sha1": "str",
                                "sha256": "str"
                            },
                            "dob": {
                                "date": "str",
                                "age": "int"
                            },
                            "registered": {
                                "date": "str",
                                "age": "int"
                            },
                            "phone": "str",
                            "cell": "str",
                            "id": {
                                "name": "str",
                                "value": "str"
                            },
                            "picture": {
                                "large": "str",
                                "medium": "str",
                                "thumbnail": "str"
                            },
                            "nat": "str"
                        }
                    ],
                    "info": {
                        "seed": "str",
                        "results": "int",
                        "page": "int",
                        "version": "str"
                    }
                }
            }
        ],
        "query": "Generate a random user and also provide a list of 5 other random users from the same nationality as the generated user.",
        "relevant APIs": [],
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "get_public_holidays",
                "api_description": "Get the public holidays for a specific year and country.",
                "required_parameters": [
                    {
                        "name": "Year",
                        "type": "INTEGER",
                        "description": "The year for which to retrieve public holidays.",
                        "default": 2024
                    },
                    {
                        "name": "CountryCode",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code.",
                        "default": "AT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "date": "string",
                            "localName": "string",
                            "name": "string",
                            "countryCode": "string",
                            "fixed": "boolean",
                            "global": "boolean",
                            "counties": "array of strings",
                            "launchYear": "integer",
                            "types": [
                                "array of strings"
                            ]
                        }
                    ]
                }
            },
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "get_long_weekends",
                "api_description": "Get the long weekends for a specific year and country.",
                "required_parameters": [
                    {
                        "name": "Year",
                        "type": "INTEGER",
                        "description": "The year for which to retrieve long weekends.",
                        "default": 2024
                    },
                    {
                        "name": "CountryCode",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code.",
                        "default": "AT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "startDate": "string",
                            "endDate": "string",
                            "dayCount": "integer",
                            "needBridgeDay": "boolean"
                        }
                    ]
                }
            }
        ],
        "query": "What are the public holidays and long weekends in Austria for the year 2024?",
        "relevant APIs": [],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Get all bank holidays in the UK",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "description": "str",
                    "divisions": {
                        "division_name": {
                            "title": "str",
                            "years": {
                                "year": [
                                    {
                                        "title": "str",
                                        "date": "str",
                                        "notes": "str"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_past_bank_holidays",
                "api_description": "Get past bank holidays in the UK",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "description": "str",
                    "divisions": {
                        "division_name": {
                            "title": "str",
                            "years": {
                                "year": [
                                    {
                                        "title": "str",
                                        "date": "str",
                                        "notes": "str"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        ],
        "query": "Can you provide a comparison of upcoming and past bank holidays in the UK for the current year?",
        "relevant APIs": [],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "category_name": "Contnet",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Retrieve information about a specific anime by its MyAnimeList ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The MyAnimeList ID of the anime.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "mal_id": 0,
                        "url": "string",
                        "images": {},
                        "trailer": {},
                        "approved": true,
                        "titles": [],
                        "title": "string",
                        "title_english": "string",
                        "title_japanese": "string",
                        "title_synonyms": [],
                        "type": "TV",
                        "source": "string",
                        "episodes": 0,
                        "status": "Finished Airing",
                        "airing": true,
                        "aired": {},
                        "duration": "string",
                        "rating": "G - All Ages",
                        "score": 0,
                        "scored_by": 0,
                        "rank": 0,
                        "popularity": 0,
                        "members": 0,
                        "favorites": 0,
                        "synopsis": "string",
                        "background": "string",
                        "season": "summer",
                        "year": 0,
                        "broadcast": {},
                        "producers": [],
                        "licensors": [],
                        "studios": [],
                        "genres": [],
                        "explicit_genres": [],
                        "themes": [],
                        "demographics": []
                    }
                }
            }
        ],
        "query": "Tell me about the anime with ID 1.",
        "relevant APIs": [],
        "query_id": 30
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_story_by_id",
                "api_description": "Fetch a Hacker News story by its ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the story.",
                        "default": 8863
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "by": "str",
                    "descendants": "int",
                    "id": "int",
                    "kids": [
                        "list of int"
                    ],
                    "score": "int",
                    "time": "int",
                    "title": "str",
                    "type": "str",
                    "url": "str"
                }
            }
        ],
        "query": "Get details of the Hacker News story with ID 8863.",
        "relevant APIs": [],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "iceandfire",
                "api_name": "get_character",
                "api_description": "Retrieve information about a specific character from the Ice and Fire universe",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The unique ID of the character",
                        "default": 583
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "str",
                    "name": "str",
                    "gender": "str",
                    "culture": "str",
                    "born": "str",
                    "died": "str",
                    "titles": [
                        "list of str"
                    ],
                    "aliases": [
                        "list of str"
                    ],
                    "father": "str",
                    "mother": "str",
                    "spouse": "str",
                    "allegiances": [
                        "list of str"
                    ],
                    "books": [
                        "list of str"
                    ],
                    "povBooks": [
                        "list of str"
                    ],
                    "tvSeries": [
                        "list of str"
                    ],
                    "playedBy": [
                        "list of str"
                    ]
                }
            }
        ],
        "query": "Who is Jon Snow?",
        "relevant APIs": [],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevize",
                "api_name": "get_schedule",
                "api_description": "Fetches the TV schedule for a given date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "User login",
                        "default": "test"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in dd.mm.yyyy format",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "Channel identifier",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "BOOLEAN",
                        "description": "Include regional broadcasts",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "program": {
                        "datum_vysilani": "str",
                        "kanal": "str",
                        "generovano": "str",
                        "porad": [
                            {
                                "link": "str",
                                "ivysilani": "str",
                                "vps": "str",
                                "datum": "str",
                                "cas": "str",
                                "nazvy": {
                                    "nadtitul": "str",
                                    "nazev": "str",
                                    "original": "str",
                                    "nazev_casti": "str"
                                },
                                "dil": "str",
                                "zanr": "str",
                                "stopaz": "str",
                                "noticka": "str",
                                "regionalni": "str",
                                "alternativa": "str",
                                "ikony": {
                                    "zvuk": "str",
                                    "ad": "int",
                                    "skryte_titulky": "int",
                                    "neslysici": "int",
                                    "live": "int",
                                    "premiera": "int",
                                    "cb": "int",
                                    "hvezdicka": "int",
                                    "labeling": "str",
                                    "puvodni_zneni": "int",
                                    "pomer": "str"
                                },
                                "obrazky": {
                                    "tv_program": "str",
                                    "nahled": "str"
                                },
                                "dostupnost": {
                                    "stav": "str",
                                    "od": "str",
                                    "do": "str"
                                }
                            }
                        ]
                    }
                }
            }
        ],
        "query": "What is the schedule for \u010cT1 on 04.08.2024?",
        "relevant APIs": [],
        "query_id": 33
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_all_planets",
                "api_description": "Get all planets.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "name": "str",
                            "rotation_period": "str",
                            "orbital_period": "str",
                            "diameter": "str",
                            "climate": "str",
                            "gravity": "str",
                            "terrain": "str",
                            "surface_water": "str",
                            "population": "str",
                            "residents": [
                                "str"
                            ],
                            "films": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Show me all planets in the Star Wars universe.",
        "relevant APIs": [],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search results for books, authors, and more",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The solr query",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "The fields to get back from solr. Use '*' to get all fields",
                        "default": ""
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort results by various facets such as 'new', 'old', 'random', etc.",
                        "default": ""
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The user's language as a two-letter (ISO 639-1) language code",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Pagination page number",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page",
                        "default": 10
                    }
                ],
                "method": "GET",
                "template_response": {
                    "start": "INTEGER",
                    "num_found": "INTEGER",
                    "docs": [
                        {
                            "cover_i": "INTEGER",
                            "has_fulltext": "BOOLEAN",
                            "edition_count": "INTEGER",
                            "title": "STRING",
                            "author_name": [
                                "STRING"
                            ],
                            "first_publish_year": "INTEGER",
                            "key": "STRING",
                            "ia": [
                                "STRING"
                            ],
                            "author_key": [
                                "STRING"
                            ],
                            "public_scan_b": "BOOLEAN"
                        }
                    ]
                }
            }
        ],
        "query": "Find all books related to 'artificial intelligence'.",
        "relevant APIs": [],
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "redditstocks",
                "api_name": "topstocks",
                "api_description": "Retrieve the top stocks discussed on Wallstreetbets.",
                "required_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of top stocks to retrieve.",
                        "default": 10
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timeframe",
                        "type": "STRING",
                        "description": "The timeframe for the data (e.g., 'day', 'week', 'month').",
                        "default": "day"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "stocks": [
                        {
                            "ticker": "str",
                            "mentions": "int",
                            "sentiment_score": "float",
                            "price": "float"
                        }
                    ]
                }
            }
        ],
        "query": "What are the top 10 stocks discussed on Wallstreetbets today?",
        "relevant APIs": [],
        "query_id": 36
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the directory of newspaper titles using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "The search query",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "ENUM",
                        "description": "The format of the response (html, json, atom)",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "description": "Page number for paginated results",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "lccn": "str",
                            "url": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Find newspapers that mention 'Michigan'.",
        "relevant APIs": [],
        "query_id": 37
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Get all characters from Final Space.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "ENUM",
                        "description": "Sort the characters by ID",
                        "default": "asc",
                        "values": [
                            "asc",
                            "desc"
                        ]
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of characters returned",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "int",
                            "name": "string",
                            "status": "string",
                            "species": "string",
                            "gender": "string",
                            "hair": "string",
                            "origin": "string",
                            "abilities": [
                                "array of strings"
                            ],
                            "alias": [
                                "array of strings"
                            ],
                            "img_url": "string (url)"
                        }
                    ]
                }
            }
        ],
        "query": "Show me all the characters from Final Space.",
        "relevant_APIs": [],
        "query_id": 38
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "crossref",
                "api_name": "get_work_metadata",
                "api_description": "Retrieve metadata for a specific work identified by DOI.",
                "required_parameters": [
                    {
                        "name": "doi",
                        "type": "STRING",
                        "description": "The DOI of the work.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "string",
                    "message-type": "work",
                    "message-version": "string",
                    "message": {
                        "DOI": "string",
                        "title": [
                            "string"
                        ],
                        "author": [
                            {
                                "given": "string",
                                "family": "string"
                            }
                        ],
                        "container-title": [
                            "string"
                        ],
                        "published": {
                            "date-parts": [
                                [
                                    0
                                ]
                            ]
                        },
                        "abstract": "string",
                        "URL": "string"
                    }
                }
            }
        ],
        "query": "What is the metadata for the work with DOI 10.1038/nphys1170?",
        "relevant APIs": [],
        "query_id": 39
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "tvmaze",
                "api_name": "showsearch",
                "api_description": "Search through all the shows in the database by the show's name. A fuzzy algorithm is used to find shows even if the query contains small typos. Results are returned in order of relevancy and contain each show's full information.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "int",
                            "name": "str",
                            "language": "str",
                            "genres": [
                                "list of str"
                            ],
                            "status": "str",
                            "runtime": "int",
                            "premiered": "str",
                            "officialSite": "str",
                            "schedule": {
                                "time": "str",
                                "days": [
                                    "list of str"
                                ]
                            },
                            "rating": {
                                "average": "float"
                            },
                            "weight": "int",
                            "network": {
                                "id": "int",
                                "name": "str",
                                "country": {
                                    "name": "str",
                                    "code": "str",
                                    "timezone": "str"
                                }
                            },
                            "webChannel": "NoneType",
                            "externals": {
                                "tvrage": "int",
                                "thetvdb": "int",
                                "imdb": "str"
                            },
                            "image": {
                                "medium": "str",
                                "original": "str"
                            },
                            "summary": "str",
                            "updated": "int",
                            "_links": {
                                "self": {
                                    "href": "str"
                                },
                                "previousepisode": {
                                    "href": "str"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the show 'Breaking Bad'.",
        "relevant APIs": [],
        "query_id": 40
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "today",
                "api_description": "Will return today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "218",
                    "day": "Monday",
                    "mystery": "Joyful",
                    "season": "Ordinary Time",
                    "currentDate": "August 5, 2024",
                    "mp3Link": "audio-rosary-joyful-mysteries.mp3"
                }
            }
        ],
        "query": "What is today's rosary prayer?",
        "relevant APIs": [],
        "query_id": 41
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mcucountdown",
                "api_name": "nextmcuproduction",
                "api_description": "Get details of the next MCU production including days until release, overview, poster URL, release date, title, and type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "ISO formatted date to get MCU production details as of this date.",
                        "default": "today's date"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "days_until": "int",
                    "overview": "str",
                    "poster_url": "str",
                    "release_date": "str",
                    "title": "str",
                    "type": "str",
                    "following_production": {
                        "days_until": "int",
                        "id": "int",
                        "overview": "str",
                        "poster_url": "str",
                        "release_date": "str",
                        "title": "str",
                        "type": "str"
                    }
                }
            }
        ],
        "query": "When is the next MCU film releasing?",
        "relevant APIs": [],
        "query_id": 42
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "wordpress",
                "api_name": "list_posts",
                "api_description": "Retrieve a collection of posts",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "context",
                        "type": "ENUM",
                        "description": "Scope under which the request is made; determines fields present in response.",
                        "default": "view"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Current page of the collection.",
                        "default": 1
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Maximum number of items to be returned in result set.",
                        "default": 10
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Limit results to those matching a string.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "integer",
                            "title": "string",
                            "content": "string",
                            "author": "integer",
                            "date": "datetime",
                            "link": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you show me the latest posts?",
        "relevant APIs": [],
        "query_id": 43
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "character",
                "api_description": "Get all characters or a single character by ID",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INT",
                        "description": "The ID of the character",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INT",
                        "description": "The page number of the characters list",
                        "default": 1
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the character",
                        "default": null
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "The status of the character (alive, dead, unknown)",
                        "default": null
                    },
                    {
                        "name": "species",
                        "type": "STRING",
                        "description": "The species of the character",
                        "default": null
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The type or subspecies of the character",
                        "default": null
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "The gender of the character (female, male, genderless, unknown)",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "info": {
                        "count": "int",
                        "pages": "int",
                        "next": "string (url)",
                        "prev": "string (url)"
                    },
                    "results": [
                        {
                            "id": "int",
                            "name": "string",
                            "status": "string",
                            "species": "string",
                            "type": "string",
                            "gender": "string",
                            "origin": {
                                "name": "string",
                                "url": "string (url)"
                            },
                            "location": {
                                "name": "string",
                                "url": "string (url)"
                            },
                            "image": "string (url)",
                            "episode": [
                                "list of strings (urls)"
                            ],
                            "url": "string (url)",
                            "created": "string (datetime)"
                        }
                    ]
                }
            }
        ],
        "query": "I want to know the details of Rick Sanchez from the Rick and Morty series.",
        "relevant APIs": [],
        "query_id": 44
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "4chan",
                "api_name": "get_boards",
                "api_description": "List of all boards and their attributes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "boards": [
                        {
                            "board": "string",
                            "title": "string",
                            "ws_board": "integer",
                            "per_page": "integer",
                            "pages": "integer",
                            "max_filesize": "integer",
                            "max_webm_filesize": "integer",
                            "max_comment_chars": "integer",
                            "max_webm_duration": "integer",
                            "bump_limit": "integer",
                            "image_limit": "integer",
                            "cooldowns": {
                                "threads": "integer",
                                "replies": "integer",
                                "images": "integer"
                            },
                            "meta_description": "string",
                            "spoilers": "integer",
                            "custom_spoilers": "integer",
                            "is_archived": "integer",
                            "board_flags": "array",
                            "country_flags": "integer",
                            "user_ids": "integer",
                            "oekaki": "integer",
                            "sjis_tags": "integer",
                            "code_tags": "integer",
                            "math_tags": "integer",
                            "text_only": "integer",
                            "forced_anon": "integer",
                            "webm_audio": "integer",
                            "require_subject": "integer",
                            "min_image_width": "integer",
                            "min_image_height": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "List all boards and their attributes.",
        "relevant APIs": [],
        "query_id": 45
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse",
                "api_description": "Get the contents of a page in HTML format.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "prop",
                        "type": "STRING",
                        "description": "Which pieces of information to get (e.g., text, categories).",
                        "default": "text"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "parse": {
                        "title": "str",
                        "pageid": "int",
                        "text": {
                            "*": "str"
                        }
                    }
                }
            }
        ],
        "query": "I want to get the HTML content of the Wikipedia page for 'Pet door'.",
        "relevant_apis": [],
        "query_id": 46
    },
    {
        "api_list": [
            {
                "category_name": "Contnet",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information about an anime using its ID",
                "required_parameters": [
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "The ID of the anime",
                        "default": "4658"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "anime": {
                        "id": "str",
                        "type": "str",
                        "name": "str",
                        "genres": [
                            "str"
                        ],
                        "themes": [
                            "str"
                        ],
                        "plot_summary": "str",
                        "number_of_episodes": "int",
                        "vintage": "str",
                        "ratings": {
                            "weighted_score": "float",
                            "bayesian_score": "float"
                        },
                        "staff": [
                            {
                                "task": "str",
                                "person": "str"
                            }
                        ],
                        "cast": [
                            {
                                "role": "str",
                                "person": "str"
                            }
                        ]
                    }
                }
            }
        ],
        "query": "Get the details of an anime by its ID.",
        "relevant APIs": [],
        "query_id": 47
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_astro_forecast",
                "api_description": "Get the 3-day astronomical weather forecast",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location",
                        "default": 113.17
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location",
                        "default": 23.09
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "output",
                        "type": "ENUM",
                        "description": "Output format (xml or json)",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "product": "astro",
                    "init": "str",
                    "dataseries": [
                        {
                            "timepoint": "int",
                            "cloudcover": "int",
                            "seeing": "int",
                            "transparency": "int",
                            "lifted_index": "int",
                            "rh2m": "int",
                            "wind10m": {
                                "direction": "str",
                                "speed": "int"
                            },
                            "temp2m": "int",
                            "prec_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_civil_forecast",
                "api_description": "Get the 8-day civil weather forecast",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location",
                        "default": 113.17
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location",
                        "default": 23.09
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "output",
                        "type": "ENUM",
                        "description": "Output format (xml or json)",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "product": "civil",
                    "init": "str",
                    "dataseries": [
                        {
                            "timepoint": "int",
                            "cloudcover": "int",
                            "lifted_index": "int",
                            "rh2m": "int",
                            "wind10m": {
                                "direction": "str",
                                "speed": "int"
                            },
                            "temp2m": "int",
                            "prec_type": "str",
                            "prec_amount": "int"
                        }
                    ]
                }
            }
        ],
        "query": "I need the 3-day astronomical weather forecast and the 8-day civil weather forecast for the location with longitude 113.17 and latitude 23.09. Please provide detailed information about cloud cover, temperature, wind, and precipitation.",
        "relevant APIs": [],
        "query_id": 48
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Search term",
                        "default": "sunflowers"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Return objects that have images",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            }
        ],
        "query": "I want to see artworks related to sunflowers that have images.",
        "relevant APIs": [],
        "query_id": 49
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks",
                "api_description": "A list of all artworks sorted by last updated date in descending order.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of resources to return per page.",
                        "default": "2"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Show me the latest updated artworks from the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 50
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image",
                "api_description": "Compress an image using resmush.it API",
                "required_parameters": [
                    {
                        "name": "img",
                        "type": "STRING",
                        "description": "URL of the image to compress",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "Quality level for JPG compression (0-100)",
                        "default": 92
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain EXIF data during compression",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "src": "str",
                    "dest": "str",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "str",
                    "error": "int",
                    "error_log": "str"
                }
            }
        ],
        "query": "How can I compress an image using resmush.it API?",
        "relevant APIs": [],
        "query_id": 51
    },
    {
        "api_list": [
            {
                "category_name": "Colors",
                "tool_name": "Colourlovers API",
                "api_name": "top_colors",
                "api_description": "Fetch top colors based on specific parameters",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lover",
                        "type": "STRING",
                        "description": "Filter by lover's username"
                    },
                    {
                        "name": "hueRange",
                        "type": "STRING",
                        "description": "Range of hues (e.g., '12,68')"
                    },
                    {
                        "name": "briRange",
                        "type": "STRING",
                        "description": "Range of brightness (e.g., '2,88')"
                    },
                    {
                        "name": "keywords",
                        "type": "STRING",
                        "description": "Search term"
                    },
                    {
                        "name": "keywordExact",
                        "type": "BOOLEAN",
                        "description": "Exact keyword search (0 or 1)"
                    },
                    {
                        "name": "orderCol",
                        "type": "STRING",
                        "description": "Order by column (e.g., 'dateCreated')"
                    },
                    {
                        "name": "sortBy",
                        "type": "STRING",
                        "description": "Sort order ('ASC' or 'DESC')"
                    },
                    {
                        "name": "numResults",
                        "type": "INTEGER",
                        "description": "Number of results (max 100)"
                    },
                    {
                        "name": "resultOffset",
                        "type": "INTEGER",
                        "description": "Result offset for paging"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Result format ('json' or 'xml')"
                    },
                    {
                        "name": "jsonCallback",
                        "type": "STRING",
                        "description": "Callback function for JSON format"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "colors": [
                        {
                            "id": "int",
                            "title": "string",
                            "userName": "string",
                            "numViews": "int",
                            "numVotes": "int",
                            "numComments": "int",
                            "numHearts": "int",
                            "rank": "int",
                            "dateCreated": "string",
                            "hex": "string",
                            "rgb": {
                                "red": "int",
                                "green": "int",
                                "blue": "int"
                            },
                            "hsv": {
                                "hue": "int",
                                "saturation": "int",
                                "value": "int"
                            },
                            "description": "string",
                            "url": "string",
                            "imageUrl": "string",
                            "badgeUrl": "string",
                            "apiUrl": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Show me the top colors created by the user 'COLOURlover' with a brightness range between 2 and 88.",
        "relevant APIs": [
            [
                "Colours API",
                "Top Colors"
            ]
        ],
        "query_id": 52
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "Fetches a list of all dog breeds.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "endpoint": "https://dog.ceo/api/breeds/list/all",
                "template_response": {
                    "message": {
                        "affenpinscher": [],
                        "african": [],
                        "airedale": [],
                        "akita": [],
                        "appenzeller": [],
                        "australian": [
                            "kelpie",
                            "shepherd"
                        ],
                        "bakharwal": [
                            "indian"
                        ],
                        "basenji": [],
                        "beagle": [],
                        "bluetick": [],
                        "borzoi": [],
                        "bouvier": [],
                        "boxer": [],
                        "brabancon": [],
                        "briard": [],
                        "buhund": [
                            "norwegian"
                        ],
                        "bulldog": [
                            "boston",
                            "english",
                            "french"
                        ],
                        "bullterrier": [
                            "staffordshire"
                        ],
                        "cattledog": [
                            "australian"
                        ],
                        "cavapoo": [],
                        "chihuahua": [],
                        "chippiparai": [
                            "indian"
                        ],
                        "chow": [],
                        "clumber": [],
                        "cockapoo": [],
                        "collie": [
                            "border"
                        ],
                        "coonhound": [],
                        "corgi": [
                            "cardigan"
                        ],
                        "cotondetulear": [],
                        "dachshund": [],
                        "dalmatian": [],
                        "dane": [
                            "great"
                        ],
                        "danish": [
                            "swedish"
                        ],
                        "deerhound": [
                            "scottish"
                        ],
                        "dhole": [],
                        "dingo": [],
                        "doberman": [],
                        "elkhound": [
                            "norwegian"
                        ],
                        "entlebucher": [],
                        "eskimo": [],
                        "finnish": [
                            "lapphund"
                        ],
                        "frise": [
                            "bichon"
                        ],
                        "gaddi": [
                            "indian"
                        ],
                        "germanshepherd": [],
                        "greyhound": [
                            "indian",
                            "italian"
                        ],
                        "groenendael": [],
                        "havanese": [],
                        "hound": [
                            "afghan",
                            "basset",
                            "blood",
                            "english",
                            "ibizan",
                            "plott",
                            "walker"
                        ],
                        "husky": [],
                        "keeshond": [],
                        "kelpie": [],
                        "kombai": [],
                        "komondor": [],
                        "kuvasz": [],
                        "labradoodle": [],
                        "labrador": [],
                        "leonberg": [],
                        "lhasa": [],
                        "malamute": [],
                        "malinois": [],
                        "maltese": [],
                        "mastiff": [
                            "bull",
                            "english",
                            "indian",
                            "tibetan"
                        ],
                        "mexicanhairless": [],
                        "mix": [],
                        "mountain": [
                            "bernese",
                            "swiss"
                        ],
                        "mudhol": [
                            "indian"
                        ],
                        "newfoundland": [],
                        "otterhound": [],
                        "ovcharka": [
                            "caucasian"
                        ],
                        "papillon": [],
                        "pariah": [
                            "indian"
                        ],
                        "pekinese": [],
                        "pembroke": [],
                        "pinscher": [
                            "miniature"
                        ],
                        "pitbull": [],
                        "pointer": [
                            "german",
                            "germanlonghair"
                        ],
                        "pomeranian": [],
                        "poodle": [
                            "medium",
                            "miniature",
                            "standard",
                            "toy"
                        ],
                        "pug": [],
                        "puggle": [],
                        "pyrenees": [],
                        "rajapalayam": [
                            "indian"
                        ],
                        "redbone": [],
                        "retriever": [
                            "chesapeake",
                            "curly",
                            "flatcoated",
                            "golden"
                        ],
                        "ridgeback": [
                            "rhodesian"
                        ],
                        "rottweiler": [],
                        "saluki": [],
                        "samoyed": [],
                        "schipperke": [],
                        "schnauzer": [
                            "giant",
                            "miniature"
                        ],
                        "segugio": [
                            "italian"
                        ],
                        "setter": [
                            "english",
                            "gordon",
                            "irish"
                        ],
                        "sharpei": [],
                        "sheepdog": [
                            "english",
                            "indian",
                            "shetland"
                        ],
                        "shiba": [],
                        "shihtzu": [],
                        "spaniel": [
                            "blenheim",
                            "brittany",
                            "cocker",
                            "irish",
                            "japanese",
                            "sussex",
                            "welsh"
                        ],
                        "spitz": [
                            "indian",
                            "japanese"
                        ],
                        "springer": [
                            "english"
                        ],
                        "stbernard": [],
                        "terrier": [
                            "american",
                            "australian",
                            "bedlington",
                            "border",
                            "cairn",
                            "dandie",
                            "fox",
                            "irish",
                            "kerryblue",
                            "lakeland",
                            "norfolk",
                            "norwich",
                            "patterdale",
                            "russell",
                            "scottish",
                            "sealyham",
                            "silky",
                            "tibetan",
                            "toy",
                            "welsh",
                            "westhighland",
                            "wheaten",
                            "yorkshire"
                        ],
                        "tervuren": [],
                        "vizsla": [],
                        "waterdog": [
                            "spanish"
                        ],
                        "weimaraner": [],
                        "whippet": [],
                        "wolfhound": [
                            "irish"
                        ]
                    },
                    "status": "str"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image_from_breed",
                "api_description": "Fetches multiple random dog images from a specified breed collection.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed to fetch images for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of images to fetch.",
                        "default": 3
                    }
                ],
                "method": "GET",
                "endpoint": "https://dog.ceo/api/breed/{breed}/images/random/{count}",
                "template_response": {
                    "message": [
                        "str"
                    ],
                    "status": "str"
                }
            }
        ],
        "query": "List all dog breeds and show me three random images of the Akita breed.",
        "relevant APIs": [],
        "query_id": 53
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve real-time information on arriving and departing trains for a specific station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "The name of the station to query.",
                        "default": "Antwerp-Central"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The id of the station, used as an alternative to the station name.",
                        "default": ""
                    },
                    {
                        "name": "arrdep",
                        "type": "ENUM",
                        "description": "Whether the results should show arrivals or departures.",
                        "default": "departure",
                        "choices": [
                            "departure",
                            "arrival"
                        ]
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date to query.",
                        "default": ""
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "The time to query.",
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": "ENUM",
                        "description": "The response format.",
                        "default": "json",
                        "choices": [
                            "xml",
                            "json",
                            "jsonp"
                        ]
                    },
                    {
                        "name": "lang",
                        "type": "ENUM",
                        "description": "The language of the response.",
                        "default": "en",
                        "choices": [
                            "nl",
                            "fr",
                            "en",
                            "de"
                        ]
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Whether or not to include alerts about the trains.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "version": "str",
                    "timestamp": "int",
                    "station": "str",
                    "stationinfo": {
                        "id": "str",
                        "@id": "str",
                        "locationX": "float",
                        "locationY": "float",
                        "standardname": "str",
                        "name": "str"
                    },
                    "departures": {
                        "number": "int",
                        "departure": [
                            {
                                "id": "int",
                                "delay": "int",
                                "station": "str",
                                "stationinfo": {
                                    "id": "str",
                                    "@id": "str",
                                    "locationX": "float",
                                    "locationY": "float",
                                    "standardname": "str",
                                    "name": "str"
                                },
                                "time": "int",
                                "vehicle": "str",
                                "vehicleinfo": {
                                    "name": "str",
                                    "shortname": "str",
                                    "@id": "str"
                                },
                                "platform": "int",
                                "platforminfo": {
                                    "name": "str",
                                    "normal": "str"
                                },
                                "canceled": "int",
                                "left": "int",
                                "departureConnection": "str",
                                "occupancy": {
                                    "@id": "str",
                                    "name": "str"
                                }
                            }
                        ]
                    }
                }
            }
        ],
        "query": "I need the liveboard details for Antwerp Central station.",
        "relevant APIs": [],
        "query_id": 54
    },
    {
        "api_list": [
            {
                "category_name": "FakeData",
                "tool_name": "randomuser",
                "api_name": "get_user",
                "api_description": "Generate a random user",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INT",
                        "description": "Number of users to generate",
                        "default": 1
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender",
                        "default": ""
                    },
                    {
                        "name": "nat",
                        "type": "STRING",
                        "description": "Filter results by nationality",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "gender": "str",
                            "name": {
                                "title": "str",
                                "first": "str",
                                "last": "str"
                            },
                            "location": {
                                "street": {
                                    "number": "int",
                                    "name": "str"
                                },
                                "city": "str",
                                "state": "str",
                                "country": "str",
                                "postcode": "str",
                                "coordinates": {
                                    "latitude": "str",
                                    "longitude": "str"
                                },
                                "timezone": {
                                    "offset": "str",
                                    "description": "str"
                                }
                            },
                            "email": "str",
                            "login": {
                                "uuid": "str",
                                "username": "str",
                                "password": "str",
                                "salt": "str",
                                "md5": "str",
                                "sha1": "str",
                                "sha256": "str"
                            },
                            "dob": {
                                "date": "str",
                                "age": "int"
                            },
                            "registered": {
                                "date": "str",
                                "age": "int"
                            },
                            "phone": "str",
                            "cell": "str",
                            "id": {
                                "name": "str",
                                "value": "str"
                            },
                            "picture": {
                                "large": "str",
                                "medium": "str",
                                "thumbnail": "str"
                            },
                            "nat": "str"
                        }
                    ],
                    "info": {
                        "seed": "str",
                        "results": "int",
                        "page": "int",
                        "version": "str"
                    }
                }
            }
        ],
        "query": "Generate a random user with details like name, email, and phone number.",
        "relevant APIs": [],
        "query_id": 55
    },
    {
        "api_list": [
            {
                "category_name": "FakeData",
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v3",
                "api_description": "Generate Version-3 UUIDs",
                "required_parameters": [
                    {
                        "name": "namespace",
                        "type": "STRING",
                        "description": "Namespace for the UUID (e.g., ns:url, ns:dns, ns:OID, ns:X500, or UUID)",
                        "default": "ns:url"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name for the UUID generation",
                        "default": "https://www.google.com"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        "uuid_string"
                    ]
                }
            },
            {
                "category_name": "FakeData",
                "tool_name": "uuidandguidgen",
                "api_name": "decode",
                "api_description": "Decode a UUID to get its details",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "UUID to decode",
                        "default": "b01eb720-171a-11ea-b949-73c91bba743d"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "encode": {
                        "STR": "uuid_string",
                        "SIV": "numeric_string"
                    },
                    "decode": {
                        "variant": "string",
                        "version": "string",
                        "content": {
                            "time": "timestamp",
                            "clock": "numeric_string",
                            "node": "string"
                        }
                    }
                }
            }
        ],
        "query": "Generate a version-3 UUID using the URL 'https://www.example.com' as the namespace and then decode the generated UUID to get its details.",
        "relevant APIs": [],
        "query_id": 56
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "get_public_holidays",
                "api_description": "Get the public holidays for a specific year and country.",
                "required_parameters": [
                    {
                        "name": "Year",
                        "type": "INTEGER",
                        "description": "The year for which to retrieve public holidays.",
                        "default": 2024
                    },
                    {
                        "name": "CountryCode",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code.",
                        "default": "AT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "date": "string",
                            "localName": "string",
                            "name": "string",
                            "countryCode": "string",
                            "fixed": "boolean",
                            "global": "boolean",
                            "counties": "array of strings",
                            "launchYear": "integer",
                            "types": [
                                "array of strings"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "What are the public holidays in Austria for the year 2024?",
        "relevant APIs": [],
        "query_id": 57
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Get all bank holidays in the UK",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "description": "str",
                    "divisions": {
                        "division_name": {
                            "title": "str",
                            "years": {
                                "year": [
                                    {
                                        "title": "str",
                                        "date": "str",
                                        "notes": "str"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        ],
        "query": "What are the upcoming bank holidays in the UK?",
        "relevant APIs": [],
        "query_id": 58
    }
]