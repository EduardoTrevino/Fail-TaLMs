[
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_order_book",
                "api_description": "Retrieve the order book for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which the order book is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I want to see the current exchange rate from the NBP service and also check the order book on OKX.",
        "relevant APIs": [],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies ranked by their market cap and also give me the current exchange rates for the US dollar?",
        "relevant APIs": [],
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    },
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "Comma-separated list of token addresses."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "attributes": {
                            "price": "string",
                            "price24h_change": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "wazirx",
                "api_name": "ticker_24hr",
                "api_description": "24-hour rolling window price change statistics for a single symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "The trading pair symbol",
                        "default": "btcinr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "string",
                    "baseAsset": "string",
                    "quoteAsset": "string",
                    "openPrice": "string",
                    "lowPrice": "string",
                    "highPrice": "string",
                    "lastPrice": "string",
                    "volume": "string"
                }
            }
        ],
        "query": "Can you tell me the current price of the Ethereum token on its network? Also, how has the price changed in the last 24 hours for a certain trading pair?",
        "relevant APIs": [],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "List of Venues with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": [
                        "object"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "string",
                    "base_code": "string",
                    "rates": {
                        "type": "object",
                        "additionalProperties": "number"
                    }
                }
            }
        ],
        "query": "Can you find some venues that accept cryptocurrency globally, and also provide me the latest exchange rates?",
        "relevant APIs": [],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    },
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "Comma-separated list of token addresses."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "attributes": {
                            "price": "string",
                            "price24h_change": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "wazirx",
                "api_name": "ticker_24hr",
                "api_description": "24-hour rolling window price change statistics for a single symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "The trading pair symbol",
                        "default": "btcinr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "string",
                    "baseAsset": "string",
                    "quoteAsset": "string",
                    "openPrice": "string",
                    "lowPrice": "string",
                    "highPrice": "string",
                    "lastPrice": "string",
                    "volume": "string"
                }
            }
        ],
        "query": "What is the current price of the Ethereum token on its network, and how has the price changed in the last 24 hours for the BTC to INR trading pair?",
        "relevant APIs": [],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What is the current price of Bitcoin and can you provide the details of a bank branch by IFSC code?",
        "relevant APIs": [],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_candles",
                "api_description": "Retrieves time-intervaled data for the provided symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time_frame",
                        "type": "STRING",
                        "description": "Time range for each candle",
                        "default": "15m"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide the current market ticker information for BTC-USDT on OKX?",
        "relevant APIs": [],
        "query_id": 33
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve price data for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma-separated list of quotes to return.",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of Bitcoin in USD and also give the exchange rate of USD?",
        "relevant APIs": [],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieve all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What are all the available trading symbols on Gemini, and what is the current market ticker information for certain cryptocurrencies on OKX?",
        "relevant APIs": [],
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What is the current price of a cryptocurrency and can you provide the details of Delhi Nagrik Sehkari Bank using IFSC code YESB0DNB002?",
        "relevant APIs": [],
        "query_id": 36
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies ranked by their market cap and also give me the current exchange rates?",
        "relevant APIs": [],
        "query_id": 37
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What are the current exchange rates available in table type 'A' from the National Bank of Poland? Additionally, can you provide the details of the bank branch associated with the IFSC code 'HDFC0000123'?",
        "relevant APIs": [],
        "query_id": 38
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_global_market_overview",
                "api_description": "Returns global market overview metrics.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "url": "https://api.coinpaprika.com/v1/global",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/tables/{table}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "What is the current overview of the global cryptocurrency market? Also, provide the latest exchange.",
        "relevant APIs": [],
        "query_id": 39
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_markets_for_coin",
                "api_description": "Retrieve top 50 exchanges and markets for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "markets": [
                        {
                            "name": "string",
                            "pair": "string",
                            "price_usd": "float",
                            "volume_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_supported_dexes",
                "api_description": "Get list of supported dexes on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "name": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the top markets and exchanges for a specific cryptocurrency and also list all decentralized exchanges supported on the Binance Smart Chain network.",
        "relevant APIs": [],
        "query_id": 40
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "rates": {
                            "string": "string"
                        }
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_fiat_price",
                "api_description": "Get the fiat price of the currencies for the available trading pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base",
                        "type": "STRING",
                        "description": "Base currency ticker symbol (default is 'USD')."
                    },
                    {
                        "name": "currencies",
                        "type": "STRING",
                        "description": "Comma-separated list of cryptocurrencies to be converted into fiat (e.g., 'BTC,ETH')."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "BTC": "string",
                        "ETH": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What are the current cryptocurrency exchange rates against USD on Coinbase, and can you also get the fiat prices of the cryptocurrencies I like from Kucoin?",
        "relevant APIs": [],
        "query_id": 41
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    },
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "Comma-separated list of token addresses."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "symbol": "str",
                            "name": "str",
                            "price_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CITY": "str",
                    "IFSC": "str",
                    "CONTACT": "str or null",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "Can you check the current USD price of a token on the Ethereum network? Additionally, I'd like to find the details of a bank branch using its IFSC code.",
        "relevant APIs": [],
        "query_id": 42
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies and also give me the current exchange rates for the US dollar?",
        "relevant APIs": [],
        "query_id": 43
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_fiat_currencies",
                "api_description": "Lists known fiat currencies.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "min_size": "string"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_assets",
                "api_description": "A list of all assets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of assets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "rank": "str",
                            "symbol": "str",
                            "name": "str",
                            "supply": "str",
                            "maxSupply": "str",
                            "marketCapUsd": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "changePercent24Hr": "str",
                            "vwap24Hr": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of known currencies and information on there assets?",
        "relevant APIs": [],
        "query_id": 44
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve price data for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma-separated list of quotes to return.",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of Bitcoin in USD and also give the exchange rate from table 'A'?",
        "relevant APIs": [],
        "query_id": 45
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve price data for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma-separated list of quotes to return.",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of a cryptocurrency in USD and also give the exchange rate of USD from table 'A'?",
        "relevant APIs": [],
        "query_id": 46
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What are the current exchange rates available from the National Bank of Poland? Additionally, can you provide the details of a bank branch associated with a specific IFSC code?",
        "relevant APIs": [],
        "query_id": 47
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character I saw in an artile earlier? Also, give me words that mean the same as 'love' using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 48
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character '\u4ec1'? Also, does the sentence my friend just said contain any profanity?",
        "relevant APIs": [],
        "query_id": 49
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character I saw in an artile earlier? Also, give me words that mean the same as the one my mom always talks about using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 50
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number mentioned in class and provide the definition of the English word 'radical'?",
        "relevant APIs": [],
        "query_id": 51
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word discussed between my friends earlier and also filter profanity from the sentence 'This is a damn beautiful day'?",
        "relevant APIs": [],
        "query_id": 52
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the 'gb' filter and also find words that mean the same as that famous phrase",
        "relevant APIs": [],
        "query_id": 54
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character on state media earlier? Also, does this sentence 'This is a clean sentence' contain any profanity?",
        "relevant APIs": [],
        "query_id": 55
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word my mother told me earlier and does the sentence I heard in the movie earlier contain any profanity?",
        "relevant APIs": [],
        "query_id": 56
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN 'ctp:analects/xue-er'. Also, I would like to know the definition of the English word I keep hearing about in history class.",
        "query_id": 57
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the character filter I saw recently and also find words that mean the same as 'ringing in the ears'?",
        "relevant APIs": [],
        "query_id": 58
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character '\u7231'? Also, give me words that mean the same as the one my mom always talks about using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 59
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Could you list the Chinese dynasties available in the Chinese Text Project? Additionally, what is the definition of the word discussed in Chinese class earlier in English?",
        "query_id": 60
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word my mother told me earlier and does the sentence 'You're such a fool!' contain any profanity?",
        "relevant APIs": [],
        "query_id": 61
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word discussed between my friends earlier and also filter profanity from the sentence some stranger said to me earlier?",
        "relevant APIs": [],
        "query_id": 62
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "What are some words related to my favorite utensil and can you provide the definition of one of these words?",
        "relevant APIs": [],
        "query_id": 63
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character on state media earlier? Also, does the sentence my friend just said contain any profanity?",
        "relevant APIs": [],
        "query_id": 64
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number mentioned in class and provide the definition of the English word I learned in class earlier?",
        "query_id": 65
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the character filter I saw recently and also find words that mean the same as that famous phrase",
        "relevant APIs": [],
        "query_id": 66
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_version",
                "api_description": "Returns date information about the CCDB service, the Unicode version, and the PHP/MySQL versions.",
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "unicodeVersion": "str",
                    "phpVersion": "str",
                    "mysqlVersion": "str"
                },
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "template_response": "true or false",
                "optional_parameters": []
            }
        ],
        "query": "What is the current version information of the Chinese Character Web API, and can you check if the phrase my teacher commonly says contains any profanity?",
        "relevant APIs": [],
        "query_id": 67
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character '\u597d'? Also, what does the English word I need to learn for my vocab quiz means?",
        "query_id": 68
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN on the powerpoint slide right now. Also, I would like to know the definition of the English word I keep hearing about in history class.",
        "query_id": 69
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character in my WeChat conversation? Also, what does the English word 'benevolent' mean?",
        "query_id": 70
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number 85 and provide the definition of the English word I learned in class earlier?",
        "relevant APIs": [],
        "query_id": 71
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word 'serendipity' and also filter profanity from the sentence some stranger said to me earlier?",
        "relevant APIs": [],
        "query_id": 72
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN on the powerpoint slide right now. Also, I would like to know the definition of the English word 'philosophy'.",
        "query_id": 73
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word 'quixotic' and does the sentence I heard in the movie earlier contain any profanity?",
        "relevant APIs": [],
        "query_id": 74
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character in my WeChat conversation? Also, what does the English word I need to learn for my vocab quiz means?",
        "query_id": 75
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "str": "str"
                },
                "category_name": "Content"
            }
        ],
        "query": "Could you look up specific information about the rosary online and share a prayer with me?",
        "query_id": 76
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_staff",
                "api_description": "Get staff information for a specific anime.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_main_information",
                "api_description": "Retrieve all primary information for a specific show by its TVmaze ID.",
                "required_parameters": [
                    {
                        "name": "show_id",
                        "type": "INTEGER",
                        "description": "The TVmaze ID of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Tell me about the staff involved in anime ID 23 and get the main information about the show with the TVmaze ID 1.",
        "relevant APIs": [],
        "query_id": 79
    },
    {
        "api_list": [
            {
                "tool_name": "rickandmorty",
                "api_name": "get_locations",
                "api_description": "Fetches all locations, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of locations to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter by type."
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "Filter by dimension."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you list all locations the universe that are a type of planet?",
        "relevant APIs": [
            "get_locations"
        ],
        "query_id": 80
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule in JSON format on the 4th of August, 2024 using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 81
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule for channel ct1 on the 4th of August, 2024 using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles related to 'historical news' using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 82
    },
    {
        "api_list": [
            {
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": {
                    "type": "list of integers",
                    "description": "List of top story IDs."
                },
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "openlibrary_search",
                "api_description": "Search for books by title, author, and other criteria.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term for the search.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to include in the response, use '*' to include all.",
                        "default": "*"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting order (e.g., 'new', 'old', 'random').",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results pagination.",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 10
                    }
                ],
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "Content"
            }
        ],
        "query": "Can you tell me about the current trending top stories on Hacker News and search for books in the Open Library?",
        "relevant APIs": [],
        "query_id": 83
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of anime reports available on Anime News Network? Also, can you retrieve details about a specific Star Trek character using its unique ID from STAPI?",
        "relevant APIs": [],
        "query_id": 85
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "get_sitematrix",
                "api_description": "Retrieve the list of Wikimedia sites and related information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sitematrix": {
                        "count": "int",
                        "specials": [
                            {
                                "code": "str",
                                "name": "str",
                                "url": "str"
                            }
                        ]
                    }
                },
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you help with some information on Wikimedia sites and rosary prayers for the year?",
        "query_id": 86
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name using a fuzzy search.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search on Wikipedia and find some shows with a similar name?",
        "relevant APIs": [],
        "query_id": 87
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str"
                },
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Can you find some articles on Wikipedia and tell me about a specific work from Open Library?",
        "relevant APIs": [],
        "query_id": 88
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed info for anime/manga by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "text/xml"
                }
            }
        ],
        "query": "I am looking for detailed information about an anime. Also, can you get the TV schedule for channel ct1 on August 5, 2024, including regional broadcasts if available?",
        "relevant APIs": [],
        "query_id": 89
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_full_by_id",
                "api_description": "Get complete anime resource data by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you retrieve information on an anime and search for a TV show by name?",
        "relevant APIs": [],
        "query_id": 90
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list characters and give details about a specific character?",
        "relevant APIs": [],
        "query_id": 91
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you list the episodes and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 92
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_book",
                "api_description": "Retrieval of a single book from Star Trek universe.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Book unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "book": {}
                }
            }
        ],
        "query": "I want detailed information about a specific title. Additionally, can you fetch details of a specific Star Trek book using its unique ID?",
        "relevant APIs": [],
        "query_id": 93
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of anime reports available? Also, can you retrieve details about a specific character using its unique ID from STAPI?",
        "relevant APIs": [],
        "query_id": 94
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list characters and give information on a character from Star Trek?",
        "relevant APIs": [],
        "query_id": 95
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters, including anime and manga.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "reports": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person from the Star Wars universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you get a list of all reports and find information about people in the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 96
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule for channel ct1 in JSON format using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles related to 'historical news' using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 97
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles starting with 'The New York'? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 98
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about a character from Star Wars and also provide rosary information?",
        "relevant APIs": [],
        "query_id": 99
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query string."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the TV schedule for channel CT1 on August 4, 2024, and also find scholarly works related to machine learning?",
        "relevant APIs": [
            "get_tv_schedule",
            "search_works"
        ],
        "query_id": 100
    }
]