Microlink API: Overview â€” Microlink DocsThis app works best with JavaScript enabled.ProductsDevelopersPricingCompanyChangelogCommunitydocsRecipesUser AgentsSDKMQLCardsAPIGetting StartedOverviewData fieldsCLIAPI BasicsAuthenticationCacheCompressionEndpointError codesFormatRate limitAPI ParametersadblockanimationsaudioclickcolorSchemedatadeviceembedfilenamefilterforcefunctionheadersiframeinsightslighthousetechnologiesjavascriptmediaTypemetamodulespalettepdfformatheightlandscapemarginpageRangesscalewidthpingprerenderproxyretryscreenshotcodeSchemeelementfullPageoverlayomitBackgroundtypescriptsscrollstylesstaleTtltimeoutttlurlvideoviewportwaitForSelectorwaitForTimeoutwaitUntilOverviewMicrolink API provides a powerful API for automating any browser action.CLIJavaScriptShellPythonRubyconst mql = require('@microlink/mql')

const { status, data } = await mql('https://github.com/microlinkhq')

mql.render(data)You can hit the API directly from your browser or any environment that allows you to perform a simple HTTP GET request.The Microlink CLI is helpful to explore the API under local development.Giving a url as input, you get structured data as output.{
  "status": "success",
  "data": {
    "title": "microlink.io",
    "description": "Turn websites into data. microlink.io has 34 repositories available. Follow their code on GitHub.",
    "lang": "en",
    "author": null,
    "publisher": "GitHub",
    "image": {
      "url": "https://avatars0.githubusercontent.com/u/29799436?s=280&v=4",
      "type": "png",
      "size": 4118,
      "height": 280,
      "width": 280,
      "size_pretty": "4.12 kB"
    },
    "date": "2020-09-22T09:33:36.000Z",
    "url": "https://github.com/microlinkhq",
    "logo": {
      "url": "https://logo.clearbit.com/github.com",
      "type": "png",
      "size": 6313,
      "height": 128,
      "width": 128,
      "size_pretty": "6.31 kB"
    }
  }
}There are some of the most common workflow you can do with Microlink API:Retrieve meta data from any link.Take a screenshot or generate a pdf of the target website.Get a predominant color palette per each image detected.Make easy embed content directly in your HTML markup.Identify technologies behind a target URL.prerender mode, useful for getting more information from websites that use client-side frameworks.The following documentation is going to teach you all these things and more.Last edited on May 20, 2024Edit on GitHub

