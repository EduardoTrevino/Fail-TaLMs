This is the openSenseMap API running on https://api.opensensemap.org
Version: v11.3.0
You can find a detailed reference at https://docs.opensensemap.org

Routes requiring no authentication:
GET    /                                     Reference: https://docs.opensensemap.org/#api-Misc-printRoutes
GET    /stats                                Reference: https://docs.opensensemap.org/#api-Misc-getStatistics
GET    /tags                                 Reference: https://docs.opensensemap.org/#api-Boxes-getAllTags
GET    /statistics/idw                       Reference: https://docs.opensensemap.org/#api-Interpolation-calculateIdw
GET    /statistics/descriptive               Reference: https://docs.opensensemap.org/#api-Statistics-descriptive
GET    /boxes                                Reference: https://docs.opensensemap.org/#api-Boxes-getBoxes
GET    /boxes/data                           Reference: https://docs.opensensemap.org/#api-Measurements-getDataMulti
GET    /boxes/data/bytag                     Reference: https://docs.opensensemap.org/#api-Measurements-getDataByGroupTag
GET    /boxes/:boxId                         Reference: https://docs.opensensemap.org/#api-Boxes-getBox
GET    /boxes/:boxId/sensors                 Reference: https://docs.opensensemap.org/#api-Measurements-getLatestMeasurements
GET    /boxes/:boxId/sensors/:sensorId       Reference: https://docs.opensensemap.org/#api-Measurements-getLatestMeasurementOfSensor
GET    /boxes/:boxId/data/:sensorId          Reference: https://docs.opensensemap.org/#api-Measurements-getData
GET    /boxes/:boxId/locations               Reference: https://docs.opensensemap.org/#api-Measurements-getLocations
               Reference: https://docs.opensensemap.org/#api-Measurements-postNewMeasurement
Documentation of the routes and methods to manage users, stations (also called boxes or senseBoxes), and measurements in the openSenseMap API. You can find the API running at https://api.opensensemap.org/.

Timestamps
Please note that the API handles every timestamp in Coordinated universal time (UTC) time zone. Timestamps in parameters should be in RFC 3339 notation.

Timestamp without Milliseconds:

2018-02-01T23:18:02Z
Timestamp with Milliseconds:

2018-02-01T23:18:02.412Z
IDs
All stations and sensors of stations receive a unique public identifier. These identifiers are exactly 24 character long and only contain digits and characters a to f.

Example:

5a8d1c25bc2d41001927a265
Parameters
Only if noted otherwise, all requests assume the payload encoded as JSON with Content-type: application/json header. Parameters prepended with a colon (:) are parameters which should be specified through the URL.

Source code and Licenses
You can find the whole source code of the API at GitHub in the sensebox/openSenseMap-API repository. You can obtain the code under the MIT License.

The data obtainable through the openSenseMap API at https://api.opensensemap.org/ is licensed under the Public Domain Dedication and License 1.0.

If you there is something unclear or there is a mistake in this documentation please open an issue in the GitHub repository.

Boxes
Boxes - Get one senseBox
get
https://api.opensensemap.org/boxes/:senseBoxId?format=:format
Parameter
Field	Type	Description
formatoptional	String	
The format the sensor data is returned in. If geojson, a GeoJSON Point Feature is returned.

Default value: json

Allowed values: json, geojson

senseBoxId	String	
the ID of the senseBox you are referring to.

Success 200
Field	Type	Description
_id	String	
unique identifier of this senseBox

name	String	
the name of this senseBox

exposure	String	
the exposure of this senseBox

model	String	
the model of this senseBox

lastMeasurementAt	RFC3339Date	
timestamp of the lastest measurement of one of the sensors of this senseBox

weblinkoptional	String	
external weblink

descriptionoptional	String	
detailed description of the senseBox

createdAt	RFC3339Date	
timestamp of the creation date of the senseBox

updatedAt	RFC3339Date	
timestamp of last update of the senseBox

grouptag	String[]	
the grouptags of this senseBox

currentLocation	Object	
the coordinates of this senseBox

  coordinates	Coordinates[]	
of the latest location of the senseBox

    type	String	
type of the coordinates

  timestamp	RFC3339Date	
timestamp of the location

imageoptional	String	
image showing the senseBox

sensors	Sensor[]	
Array containing sensor objects

  _id	String	
unique identifier of the sensor

  title	String	
the title of the phenomenon the sensor observes.

  sensorType	String	
sensorType the type of the sensor.

  unit	String	
the unit of the phenomenon the sensor observes.

  iconoptional	String	
the visual representation for the openSenseMap of this sensor.

  lastMeasurement	Object	
Object representing the latest measurement

    value	String	
the measured value of the sensor

    createdAt	RFC3339Date	
the timestamp of the measurement

Example data on success:
{
    "_id": "57000b8745fd40c8196ad04c",
    "createdAt": "2016-06-02T11:22:51.817Z",
    "exposure": "outdoor",
    "grouptag": "",
    "image": "57000b8745fd40c8196ad04c.png?1466435154159",
    "currentLocation": {
        "coordinates": [
            7.64568,
            51.962372
        ],
        "timestamp": "2016-06-02T11:22:51.817Z",
        "type": "Point"
    },
    "name": "Oststr/Mauritzsteinpfad",
    "sensors": [
        {
            "_id": "57000b8745fd40c8196ad04e",
            "lastMeasurement": {
                "value": "0",
                "createdAt": "2016-11-11T21:22:01.675Z"
            },
            "sensorType": "VEML6070",
            "title": "UV-Intensität",
            "unit": "μW/cm²"
        },
        {
            "_id": "57000b8745fd40c8196ad04f",
            "lastMeasurement": {
                "value": "0",
                "createdAt": "2016-11-11T21:22:01.675Z"
            },
            "sensorType": "TSL45315",
            "title": "Beleuchtungsstärke",
            "unit": "lx"
        },
        {
            "_id": "57000b8745fd40c8196ad050",
            "lastMeasurement": {
                "value": "1019.21",
                "createdAt": "2016-11-11T21:22:01.675Z"
            },
            "sensorType": "BMP280",
            "title": "Luftdruck",
            "unit": "hPa"
        },
        {
            "_id": "57000b8745fd40c8196ad051",
            "lastMeasurement": {
                "value": "99.38",
                "createdAt": "2016-11-11T21:22:01.675Z"
            },
            "sensorType": "HDC1008",
            "title": "rel. Luftfeuchte",
            "unit": "%"
        },
        {
            "_id": "57000b8745fd40c8196ad052",
            "lastMeasurement": {
                "value": "0.21",
                "createdAt": "2016-11-11T21:22:01.675Z"
            },
            "sensorType": "HDC1008",
            "title": "Temperatur",
            "unit": "°C"
        },
        {
            "_id": "576996be6c521810002479dd",
            "sensorType": "WiFi",
            "unit": "dBm",
            "title": "Wifi-Stärke",
            "lastMeasurement": {
                "value": "-66",
                "createdAt": "2016-11-11T21:22:01.675Z"
            }
        },
        {
            "_id": "579f9eae68b4a2120069edc8",
            "sensorType": "VCC",
            "unit": "V",
            "title": "Eingangsspannung",
            "lastMeasurement": {
                "value": "2.73",
                "createdAt": "2016-11-11T21:22:01.675Z"
            },
            "icon": "osem-shock"
        }
    ],
    "updatedAt": "2016-11-11T21:22:01.686Z"
}
Boxes - Get all senseBoxes
With the optional date and phenomenon parameters you can find senseBoxes that have submitted data around that time, +/- 4 hours, or specify two dates separated by a comma.

get
https://api.opensensemap.org/boxes?date=:date&phenomenon=:phenomenon&format=:format
Parameter
Field	Type	Description
nameoptional	String	
Search string to find boxes by name, if specified all other parameters are ignored.

limitoptional	Number	
Limit the search results.

Default value: 5

dateoptional	RFC3339Date	
One or two RFC 3339 timestamps at which boxes should provide measurements. Use in combination with phenomenon.

phenomenonoptional	String	
A sensor phenomenon (determined by sensor name) such as temperature, humidity or UV intensity. Use in combination with date.

formatoptional	String	
the format the sensor data is returned in.

Default value: json

Allowed values: json, geojson

grouptagoptional	String	
only return boxes with this grouptag, allows to specify multiple separated with a comma

modeloptional	String	
only return boxes with this model, allows to specify multiple separated with a comma

Allowed values: "homeEthernet", "homeWifi", "homeEthernetFeinstaub", "homeWifiFeinstaub", "luftdaten_sds011", "luftdaten_sds011_dht11", "luftdaten_sds011_dht22", "luftdaten_sds011_bmp180", "luftdaten_sds011_bme280"

classifyoptional	Boolean	
if specified, the api will classify the boxes accordingly to their last measurements.

Default value: false

Allowed values: "true", "false"

minimaloptional	Boolean	
if specified, the api will only return a minimal set of box metadata consisting of [_id, updatedAt, currentLocation, exposure, name] for a fast response.

Default value: false

Allowed values: "true", "false"

fulloptional	Boolean	
if true the API will return populated lastMeasurements (use this with caution for now, expensive on the database)

Default value: false

Allowed values: "true", "false"

nearoptional	Number	
A comma separated coordinate, if specified, the api will only return senseBoxes within maxDistance (in m) of this location

maxDistanceoptional	Number	
the amount of meters around the near Parameter that the api will search for senseBoxes

Default value: 1000

exposureoptional	String	
only include boxes with this exposure. Allows to specify multiple exposures separated by comma (Example: indoor,mobile)

Allowed values: "indoor", "outdoor", "mobile", "unknown"

bbox	String	
A bounding box containing 4 WGS84 coordinates separated by comata (,). Order is: longitude southwest, latitude southwest, longitude northeast, latitude northeast. Minimal and maximal values are: -180, 180 for longitude and -90, 90 for latitude.

Example response for :minimal=true
Example response for :minimal=true and :classify=true
[
 {
      "_id": "5ee91626dc1438001b473b52",
      "name": "Lucht sensor",
      "currentLocation": {
        "timestamp": "2020-06-16T18:57:42.322Z",
        "coordinates": [
          5.38517,
          51.426135
        ],
        "type": "Point"
      },
      "exposure": "outdoor",
      "lastMeasurementAt": "2020-06-16T20:51:23.414Z"
    },
    {
      "_id": "5ee92557dc1438001b4d3eee",
      "name": "BabCity",
      "currentLocation": {
        "timestamp": "2020-06-16T20:02:31.083Z",
        "coordinates": [
          4.78833,
          51.936062
        ],
        "type": "Point"
      },
      "exposure": "outdoor",
      "lastMeasurementAt": "2022-01-23T20:14:48.808Z"
    }
]
Boxes - Get locations of a senseBox
Get all locations of the specified senseBox ordered by date as an array of GeoJSON Points. If format=geojson, a GeoJSON linestring will be returned, with properties.timestamps being an array with the timestamp for each coordinate.

get
https://api.opensensemap.org/boxes/:senseBoxId/locations
Parameter
Field	Type	Description
format	String	
Default value: json

Allowed values: json, geojson

from-dateoptional	RFC3339Date	
Beginning date of location timestamps (default: 48 hours ago from now)

to-dateoptional	RFC3339Date	
End date of location timstamps (default: now)

senseBoxId	String	
the ID of the senseBox you are referring to.

Example response for :format=json
[
  { "coordinates": [7.68123, 51.9123], "type": "Point", "timestamp": "2017-07-27T12:00:00Z"},
  { "coordinates": [7.68223, 51.9433, 66.6], "type": "Point", "timestamp": "2017-07-27T12:01:00Z"},
  { "coordinates": [7.68323, 51.9423], "type": "Point", "timestamp": "2017-07-27T12:02:00Z"}
]

Interpolation
Interpolation - Get a Inverse Distance Weighting Interpolation as FeatureCollection
Retrieve a JSON object containing

breaks: an array containing equal distance breaks. Use numClasses parameter to control how many breaks to return.
featureCollection: a GeoJSON FeatureCollection with a computed Inverse Distance Interpolation for a certain region of interest and phenomenon.
timesteps: an array of RFC 3339 formatted timesteps. Use numTimeSteps parameter to control how many timesteps between from-date and to-date should be returned.
The properties of each feature in the featureCollection is an object with RFC 3339 timestamps which are the timeSteps. The number of the timesteps can be controlled using the numTimeSteps parameter. Values falling inside each timestep are first averaged. Please be aware that requests with (areaSquareKilometers / cellWidth) > 2500 will be rejected.

get
https://api.opensensemap.org/statistics/idw?bbox=7.6,51.2,7.8,51.4&phenomenon=Temperatur
Parameter
Field	Type	Description
phenomenon	String	
the name of the phenomenon you want to download the data for.

from-dateoptional	RFC3339Date	
Beginning date of measurement data (default: 2 days ago from now)

to-dateoptional	RFC3339Date	
End date of measurement data (default: now)

gridTypeoptional	String	
The type of the grid for IDW calculation

Default value: hex

Allowed values: hex, square, triangle

cellWidthoptional	Number	
The width of the grid cells in kilometers. Must be positive

Default value: 50

poweroptional	Number	
The power of the IDW calculation

Default value: 1

Allowed values: 1-9

numTimeStepsoptional	Number	
Return this many timesteps between from-date and to-date

Default value: 6

Allowed values: 1-10

numClassesoptional	Number	
Number of classes in the breaks array. Must be positive

Default value: 6

bbox	String	
A bounding box containing 4 WGS84 coordinates separated by comata (,). Order is: longitude southwest, latitude southwest, longitude northeast, latitude northeast. Minimal and maximal values are: -180, 180 for longitude and -90, 90 for latitude.

exposureoptional	String	
only include boxes with this exposure. Allows to specify multiple exposures separated by comma (Example: indoor,mobile)

Allowed values: "indoor", "outdoor", "mobile", "unknown"

Measurements - Get the 10000 latest measurements for a sensor
Get up to 10000 measurements from a sensor for a specific time frame, parameters from-date and to-date are optional. If not set, the last 48 hours are used. The maximum time frame is 1 month. If download=true Content-disposition headers will be set. Allows for JSON or CSV format.

get
https://api.opensensemap.org/boxes/:senseBoxId/data/:sensorId?from-date=fromDate&to-date=toDate&download=true&format=json
Parameter
Field	Type	Description
from-dateoptional	RFC3339Date	
Beginning date of measurement data (default: 48 hours ago from now)

to-dateoptional	RFC3339Date	
End date of measurement data (default: now)

formatoptional	String	
Can be 'json' (default) or 'csv' (default: json)

Default value: json

Allowed values: "json", "csv"

downloadoptional	Boolean	
if specified, the api will set the content-disposition header thus forcing browsers to download instead of displaying. Is always true for format csv.

Allowed values: "true", "false"

senseBoxId	String	
the ID of the senseBox you are referring to.

sensorId	String	
the ID of the sensor you are referring to.

outliersoptional	String	
Specifying this parameter enables outlier calculation which adds a new field called isOutlier to the data. Possible values are "mark" and "replace".

Allowed values: "replace", "mark"

outlier-windowoptional	Number	
Size of moving window used as base to calculate the outliers.

Default value: 15

Allowed values: 1-50

delimiteroptional	String	
Only for csv: the delimiter for csv. Possible values: semicolon, comma. Per default a comma is used. Alternatively you can use separator as parameter name.

Default value: comma

Allowed values: comma, semicolon

Success 200
Field	Type	Description
measurement	Measurement[]	
Array containing queried measurements

  location	String[]	
  value	String	
the measured value of the sensor

  createdAt	RFC3339Date	
timestamp of the measurement

Example data for :format=json
Example data for :format=csv
[
    {
        "location": [
            7,
            52
        ],
        "createdAt": "2023-09-29T08:06:13.254Z",
        "value": "6.38"
    },
    {
        "location": [
            7,
            52
        ],
        "createdAt": "2023-09-29T08:06:12.312Z",
        "value": "6.38"
    }
]

Measurements - Get latest measurements for a phenomenon as CSV
Download data of a given phenomenon from multiple selected senseBoxes as CSV

get,post
https://api.opensensemap.org/boxes/data?boxId=:senseBoxIds&from-date=:fromDate&to-date:toDate&phenomenon=:phenomenon
Parameter
Field	Type	Description
boxId	String	
Comma separated list of senseBox IDs.

phenomenon	String	
the name of the phenomenon you want to download the data for.

from-dateoptional	RFC3339Date	
Beginning date of measurement data (default: 2 days ago from now)

to-dateoptional	RFC3339Date	
End date of measurement data (default: now)

formatoptional	String	
Can be 'csv' (default) or 'json' (default: csv)

Default value: csv

Allowed values: "csv", "json"

columnsoptional	String	
Comma separated list of columns to export.

Default value: sensorId,createdAt,value,lat,lon

Allowed values: createdAt, value, lat, lon, height, boxId, boxName, exposure, sensorId, phenomenon, unit, sensorType

downloadoptional	Boolean	
Set the content-disposition header to force browsers to download instead of displaying.

Default value: true

Allowed values: true, false

delimiteroptional	String	
Only for csv: the delimiter for csv. Possible values: semicolon, comma. Per default a comma is used. Alternatively you can use separator as parameter name.

Default value: comma

Allowed values: comma, semicolon

bbox	String	
A bounding box containing 4 WGS84 coordinates separated by comata (,). Order is: longitude southwest, latitude southwest, longitude northeast, latitude northeast. Minimal and maximal values are: -180, 180 for longitude and -90, 90 for latitude.

exposureoptional	String	
only include boxes with this exposure. Allows to specify multiple exposures separated by comma (Example: indoor,mobile)

Allowed values: "indoor", "outdoor", "mobile", "unknown"

Measurements - Get latest measurements of a senseBox
Get the latest measurements of all sensors of the specified senseBox.

get
https://api.opensensemap.org/boxes/:senseBoxId/sensors
Parameter
Field	Type	Description
countoptional	NumberNumber	
Number of measurements to be retrieved for every sensor.

Allowed values: 1-100

senseBoxId	String	
the ID of the senseBox you are referring to.

Success 200
Field	Type	Description
_id	String	
unique identifier of this senseBox

sensors	Sensor[]	
Array containing sensor objects

  _id	String	
unique identifier of the sensor

  title	String	
the title of the phenomenon the sensor observes.

  sensorType	String	
sensorType the type of the sensor.

  unit	String	
the unit of the phenomenon the sensor observes.

  iconoptional	String	
the visual representation for the openSenseMap of this sensor.

  lastMeasurement	Object	
Object representing the latest measurement

    value	String	
the measured value of the sensor

    createdAt	RFC3339Date	
the timestamp of the measurement

Measurements - Get latest measurements of a sensor
Get the latest measurements of a sensor.

get
https://api.opensensemap.org/boxes/:senseBoxId/sensors/:sensorId
Parameter
Field	Type	Description
onlyValueoptional	Boolean	
If set to true only returns the measured value without information about the sensor. Requires a sensorId.

Allowed values: "true", "false"

senseBoxId	String	
the ID of the senseBox you are referring to.

sensorId	String	
the ID of the sensor you are referring to.

Success 200
Field	Type	Description
  _id	String	
unique identifier of the sensor

  title	String	
the title of the phenomenon the sensor observes.

  sensorType	String	
sensorType the type of the sensor.

  unit	String	
the unit of the phenomenon the sensor observes.

  iconoptional	String	
the visual representation for the openSenseMap of this sensor.

  lastMeasurement	Object	
Object representing the latest measurement

    value	String	
the measured value of the sensor

    createdAt	RFC3339Date	
the timestamp of the measurement

Misc
Misc - Get some statistics about the database
returns an array with three numbers which denominates the count of senseBoxes, the count of measurements and the count of measurements in the last minute.

get
https://api.opensensemap.org/stats
Parameter
Field	Type	Description
humanoptional	Boolean	
if true, make numbers easier human readable.

Default value: false

Allowed values: true, false

[human=false]
[human=true]
[
    318,
    118241889,
    393
]

Misc - print all routes
Returns all routes of this API in human readable format

get
https://api.opensensemap.org/

Statistics
Statistics - Compute basic descriptive statistics over specified time windows
Allows to compute basic descriptive statistical methods over multiple sensors and multiple time windows. The supported methods are: arithmetic mean, geometric mean, harmonic mean, maximum, median ,minimum, mode, root mean square, standard deviation, sum of values and variance. Parameters from-date and to-date are modified to fit you specified window parameter. You should either specifiy multiple station ids using the boxId parameter or a bounding box with the bbox parameter, but not both.

By default, stations with exposure mobile are excluded.

get
https://api.opensensemap.org/statistics/descriptive
Parameter
Field	Type	Description
boxId	String	
Comma separated list of senseBox IDs.

phenomenon	String	
the name of the phenomenon you want to download the data for.

from-date	RFC3339Date	
Beginning date of measurement data

to-date	RFC3339Date	
End date of measurement data

operation	String	
Statistical operation to execute

Allowed values: arithmeticMean, geometricMean, harmonicMean, max, median, min, mode, rootMeanSquare, standardDeviation, sum, variance

window	String	
Time window to apply. Either a number in Milliseconds or a zeit/ms-parseable string rounded to the nearest minute (Math.round() / 60000). At least 1 minute

downloadoptional	Boolean	
Set the content-disposition header to force browsers to download instead of displaying.

Default value: true

Allowed values: true, false

columnsoptional	String	
Comma separated list of additional columns to export.

Allowed values: boxId, boxName, exposure, height, lat, lon, phenomenon, sensorType, unit

formatoptional	String	
Controls the format of the responde. Default is csv. Specifying json returns a JSON array element for each sensor with RFC3339 timestamps key value pairs for the requested statistical operation. Specifying tidy returns a csv with rows for each window and sensor.

Default value: csv

Allowed values: csv, json, tidy

bbox	String	
A bounding box containing 4 WGS84 coordinates separated by comata (,). Order is: longitude southwest, latitude southwest, longitude northeast, latitude northeast. Minimal and maximal values are: -180, 180 for longitude and -90, 90 for latitude.

exposureoptional	String	
only include boxes with this exposure. Allows to specify multiple exposures separated by comma (Example: indoor,mobile)

Allowed values: "indoor", "outdoor", "mobile", "unknown"

delimiteroptional	String	
Only for csv: the delimiter for csv. Possible values: semicolon, comma. Per default a comma is used. Alternatively you can use separator as parameter name.

Default value: comma

Allowed values: comma, semicolon

Example CSV:
Example JSON:
Example tidy CSV:
sensorId,Temperatur_2018-01-31,Temperatur_2018-02-01Z,Temperatur_2018-02-02Z,Temperatur_2018-02-03Z,Temperatur_2018-02-04Z,Temperatur_2018-02-05Z,Temperatur_2018-02-06Z,Temperatur_2018-02-07Z
[
  {
    "sensorId": "5a787e38d55e821b639e890f",
    "2018-02-02T00:00:00.000Z": 138,
    "2018-02-03T00:00:00.000Z": 104,
    "2018-02-04T00:00:00.000Z": 56,
    "2018-02-05T00:00:00.000Z": 17
  },
  {
    "sensorId": "5a787e38d55e821b639e8915",
    "2018-02-02T00:00:00.000Z": 138,
    "2018-02-03T00:00:00.000Z": 104,
    "2018-02-04T00:00:00.000Z": 56,
    "2018-02-05T00:00:00.000Z": 17
  }
]

Example: https://api.opensensemap.org/boxes/57000b8745fd40c8196ad04c?format=json

Response: 
{"_id":"57000b8745fd40c8196ad04c","createdAt":"2022-03-30T11:25:43.219Z","exposure":"outdoor","name":"Oststr/Mauritzsteinpfad","sensors":[{"_id":"57000b8745fd40c8196ad04e","lastMeasurement":null,"sensorType":"VEML6070","title":"UV-Intensität","unit":"μW/cm²"},{"_id":"57000b8745fd40c8196ad04f","lastMeasurement":null,"sensorType":"TSL45315","title":"Beleuchtungsstärke","unit":"lx"},{"_id":"57000b8745fd40c8196ad050","lastMeasurement":null,"sensorType":"BMP280","title":"Luftdruck","unit":"hPa"},{"_id":"57000b8745fd40c8196ad051","lastMeasurement":null,"sensorType":"HDC1008","title":"rel. Luftfeuchte","unit":"%"},{"_id":"57000b8745fd40c8196ad052","lastMeasurement":null,"sensorType":"HDC1008","title":"Temperatur","unit":"°C"},{"_id":"58f0bdd0ba279000119b9c97","icon":"osem-temperature-celsius","sensorType":"Eltako FAFT60","unit":"°C","title":"Temperatur Terrasse","lastMeasurement":null},{"_id":"58f0bdd0ba279000119b9c98","icon":"osem-humidity","sensorType":"Eltako FAFT60","unit":"%","title":"rel. Luftfeuchte Terrasse","lastMeasurement":null},{"_id":"58f0cea0ba279000119c497e","icon":"osem-battery","sensorType":"Eltako FAFT60","unit":"V","title":"Akkuspannung Terrasse","lastMeasurement":null}],"updatedAt":"2022-03-30T11:25:43.219Z","description":"Experimenteller Aufbau mit ESP8266, Solarzelle und Akku. Es werden die handelsüblichen senseBox Sensoren verwendet.\nDas Gerät ist nach Südosten ausgerichtet wird jedoch im Sommer von Bäumen abgeschattet.","image":"57000b8745fd40c8196ad04c.jpg?1490540483609","model":"custom","currentLocation":{"coordinates":[7.64568,51.962372],"type":"Point","timestamp":"2016-04-02T18:12:23.000Z"},"lastMeasurementAt":"2020-07-18T14:33:22.833Z","grouptag":[""],"loc":[{"geometry":{"coordinates":[7.64568,51.962372],"type":"Point","timestamp":"2016-04-02T18:12:23.000Z"},"type":"Feature"}]}