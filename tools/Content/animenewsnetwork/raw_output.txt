### api.py
```python
import requests
from typing import Optional


def get_reports(nskip: Optional[int] = 0, nlist: Optional[str] = '50', type: Optional[str] = None, name: Optional[str] = None, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetch reports with optional filtering by type and name.
    Parameters:
        nskip [Optional]: The number of entries to skip.
        nlist [Optional]: The number of entries to list. Can be a number or 'all'.
        type [Optional]: Filter the list by 'anime' or 'manga'.
        name [Optional]: Filter by entries whose main title starts with this value.
    """
    url = "https://cdn.animenewsnetwork.com/encyclopedia/reports.xml"
    params = {
        'nskip': nskip,
        'nlist': nlist
    }
    if type:
        params['type'] = type
    if name:
        params['name'] = name
    
    response = requests.get(url, params=params)
    return response.content


def get_anime_details(id: Optional[str] = None, anime: Optional[str] = None, manga: Optional[str] = None, title: Optional[str] = None, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Fetch detailed information for anime/manga titles by ID or name.
    Parameters:
        id [Optional]: Fetch details using anime/manga/title ID.
        anime [Optional]: Fetch details when id is an anime ID.
        manga [Optional]: Fetch details when id is a manga ID.
        title [Optional]: Fetch details by name or ID (slash-separated list).
    """
    url = "https://cdn.animenewsnetwork.com/encyclopedia/api.xml"
    params = {}
    if id:
        params['id'] = id
    if anime:
        params['anime'] = anime
    if manga:
        params['manga'] = manga
    if title:
        params['title'] = title
    
    response = requests.get(url, params=params)
    return response.content
```

### api_test.py
```python
import unittest
from api import get_reports, get_anime_details

class TestAnimeNewsNetworkAPI(unittest.TestCase):

    def test_get_reports_default(self):
        result = get_reports()
        self.assertIsInstance(result, bytes)

    def test_get_reports_anime_type(self):
        result = get_reports(type="anime")
        self.assertIsInstance(result, bytes)

    def test_get_reports_name_filter(self):
        result = get_reports(name="Z")
        self.assertIsInstance(result, bytes)

    def test_get_anime_details_by_id(self):
        result = get_anime_details(anime='4658')
        self.assertIsInstance(result, bytes)

    def test_get_anime_details_by_title(self):
        result = get_anime_details(title='~jinki')
        self.assertIsInstance(result, bytes)

if __name__ == '__main__':
    unittest.main()
```

### animenewsnetwork.json
```json
{
    "tool_name": "animenewsnetwork",
    "tool_description": "Encyclopedia API for Anime News Network, providing data in XML format.",
    "title": "Anime News Network API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 90,
        "avgLatency": 100,
        "avgSuccessRate": 95,
        "popularityScore": 8.5
    },
    "home_url": "https://www.animenewsnetwork.com/",
    "host": "cdn.animenewsnetwork.com",
    "api_list": [
        {
            "name": "get_reports",
            "url": "https://cdn.animenewsnetwork.com/encyclopedia/reports.xml",
            "description": "Fetch reports with various filters.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "nskip",
                    "type": "INTEGER",
                    "description": "Number to skip."
                },
                {
                    "name": "nlist",
                    "type": "STRING",
                    "description": "Number or 'all' to list."
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "'anime' or 'manga'."
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Starts with the value."
                }
            ]
        },
        {
            "name": "get_anime_details",
            "url": "https://cdn.animenewsnetwork.com/encyclopedia/api.xml",
            "description": "Fetch detailed info for anime/manga by ID or name.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Fetch details by ID."
                },
                {
                    "name": "anime",
                    "type": "STRING",
                    "description": "Fetch by anime ID."
                },
                {
                    "name": "manga",
                    "type": "STRING",
                    "description": "Fetch by manga ID."
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Fetch by name."
                }
            ]
        }
    ]
}
```