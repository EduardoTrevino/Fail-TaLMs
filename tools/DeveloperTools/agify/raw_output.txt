**### api.py**

```python
import requests
from typing import Optional, List, Dict, Union

def estimate_age(
    name: str,
    country_id: Optional[str] = None,
    toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'
) -> Dict[str, Union[str, int]]:
    """
    Estimate the age of a person based on their first name.
    
    Parameters:
    - name (str): The first name to estimate age for.
    - country_id (str, optional): The country code to improve estimation accuracy.
    
    Returns:
    - A dictionary with the predicted age and count of data rows examined.
    """
    url = "https://api.agify.io"
    params = {
        'name': name,
    }
    if country_id:
        params['country_id'] = country_id

    response = requests.get(url, params=params)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def estimate_age_batch(
    names: List[str],
    country_id: Optional[str] = None,
    toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'
) -> List[Dict[str, Union[str, int]]]:
    """
    Estimate the age for a batch of names.
    
    Parameters:
    - names (List[str]): A list of first names (up to 10) to estimate ages for.
    - country_id (str, optional): The country code to improve estimation accuracy across all names.
    
    Returns:
    - A list of dictionaries with predicted ages and counts for each name.
    """
    url = "https://api.agify.io"
    params = [('name[]', name) for name in names]
    if country_id:
        params.append(('country_id', country_id))

    response = requests.get(url, params=params)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

**### api_test.py**

```python
import unittest
from api import estimate_age, estimate_age_batch

class TestAgifyAPI(unittest.TestCase):

    def test_estimate_age(self):
        response = estimate_age(name="michael")
        self.assertIn("age", response)
        self.assertIn("count", response)
        self.assertEqual(response["name"], "michael")

    def test_estimate_age_with_country(self):
        response = estimate_age(name="michael", country_id="US")
        self.assertIn("age", response)
        self.assertIn("count", response)
        self.assertEqual(response["name"], "michael")
        self.assertEqual(response["country_id"], "US")

    def test_estimate_age_batch(self):
        response = estimate_age_batch(names=["michael", "matthew", "jane"])
        self.assertIsInstance(response, list)
        self.assertEqual(len(response), 3)
        for item in response:
            self.assertIn("age", item)
            self.assertIn("count", item)
            self.assertIn("name", item)

    def test_estimate_age_batch_with_country(self):
        response = estimate_age_batch(names=["michael", "matthew", "jane"], country_id="US")
        self.assertIsInstance(response, list)
        self.assertEqual(len(response), 3)
        for item in response:
            self.assertIn("age", item)
            self.assertIn("count", item)
            self.assertIn("name", item)
            self.assertEqual(item.get("country_id"), "US")
```

**### agify.json**

```json
{
    "tool_name": "agify",
    "tool_description": "API to estimate the age of a person based on their first name.",
    "title": "Agify API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 90,
        "avgLatency": 100,
        "avgSuccessRate": 97,
        "popularityScore": 8.5,
        "__typename": "Score"
    },
    "home_url": "https://agify.io/",
    "host": "api.agify.io",
    "api_list": [
        {
            "name": "estimate_age",
            "url": "https://api.agify.io",
            "description": "Estimate the age of a person based on their first name.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "The first name to estimate age for."
                }
            ],
            "optional_parameters": [
                {
                    "name": "country_id",
                    "type": "STRING",
                    "description": "The country code to improve estimation accuracy."
                }
            ],
            "code": "import requests\n\nurl = 'https://api.agify.io'\nparams = {'name': name, 'country_id': country_id}\nresponse = requests.get(url, params=params)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "count": "int",
                "name": "str",
                "age": "int",
                "country_id": "str"
            },
            "schema": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "age": {
                        "type": "integer"
                    },
                    "country_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "count",
                    "name",
                    "age"
                ]
            }
        },
        {
            "name": "estimate_age_batch",
            "url": "https://api.agify.io",
            "description": "Estimate the age for a batch of names.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "names",
                    "type": "ARRAY",
                    "description": "A list of first names (up to 10) to estimate ages for."
                }
            ],
            "optional_parameters": [
                {
                    "name": "country_id",
                    "type": "STRING",
                    "description": "The country code to improve estimation accuracy across all names."
                }
            ],
            "code": "import requests\n\nurl = 'https://api.agify.io'\nparams = [('name[]', name) for name in names]\nresponse = requests.get(url, params=params)\nprint(response.json())",
            "statuscode": 200,
            "body": [
                {
                    "count": "int",
                    "name": "str",
                    "age": "int"
                }
            ],
            "schema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "count": {
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        },
                        "age": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "count",
                        "name",
                        "age"
                    ]
                }
            }
        }
    ]
}
```