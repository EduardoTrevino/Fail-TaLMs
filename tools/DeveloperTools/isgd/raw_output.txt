### api.py
```python
import requests
from urllib.parse import urlencode
from typing import Optional


def shorten_url(url: str, format: Optional[str] = 'simple', shorturl: Optional[str] = None, callback: Optional[str] = None, logstats: Optional[int] = 0, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Shortens a given URL using the is.gd service.

    Parameters:
    - url: The URL you want to shorten. (Required)
    - format: The format of the response ('web', 'simple', 'xml', 'json'). Defaults to 'simple'.
    - shorturl: Custom shortened URL you would like to use (optional).
    - callback: Used only with format 'json' to specify a callback function (optional).
    - logstats: If 1, enables logging of detailed statistics (optional).

    Returns:
    - The shortened URL or error message.
    """
    base_url = "https://is.gd/create.php?"
    params = {
        'format': format,
        'url': url
    }
    if shorturl:
        params['shorturl'] = shorturl
    if callback and format == 'json':
        params['callback'] = callback
    if logstats == 1:
        params['logstats'] = logstats

    response = requests.get(base_url + urlencode(params))
    try:
        if format in ['simple', 'json', 'xml']:
            return response.text
        else:
            return {"error": "Unsupported format", "response": response.text}
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

### api_test.py
```python
import unittest
from api import shorten_url


class TestIsGdAPI(unittest.TestCase):

    def test_shorten_url_simple_success(self):
        long_url = "https://www.example.com"
        response = shorten_url(url=long_url, format='simple')
        self.assertTrue(response.startswith("https://"))

    def test_shorten_url_json_success(self):
        long_url = "https://www.example.com"
        response = shorten_url(url=long_url, format='json')
        self.assertIn("shorturl", response)

    def test_shorten_url_custom_shorturl(self):
        long_url = "https://www.example.com"
        custom_short = "myexample"
        response = shorten_url(url=long_url, format='simple', shorturl=custom_short)
        self.assertTrue("Error:" in response or response.startswith("https://is.gd/"))

    def test_shorten_url_with_logstats(self):
        long_url = "https://www.example.com"
        response = shorten_url(url=long_url, format='simple', logstats=1)
        self.assertTrue(response.startswith("https://"))

    def test_shorten_url_with_callback(self):
        long_url = "https://www.example.com"
        response = shorten_url(url=long_url, format='json', callback='myFunction')
        self.assertTrue(response.startswith("myFunction("))


if __name__ == "__main__":
    unittest.main()
```

### isgd.json
```json
{
    "tool_name": "isgd",
    "tool_description": "An API for URL shortening service, providing multiple format outputs and optional custom short URLs.",
    "title": "is.gd URL Shortener API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 90,
        "avgLatency": 50,
        "avgSuccessRate": 99,
        "popularityScore": 8.5,
        "__typename": "Score"
    },
    "home_url": "https://is.gd/",
    "host": "is.gd",
    "api_list": [
        {
            "name": "shorten_url",
            "url": "https://is.gd/create.php",
            "description": "Shortens a given URL using the is.gd service.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The URL you want to shorten."
                }
            ],
            "optional_parameters": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                    "default": "simple"
                },
                {
                    "name": "shorturl",
                    "type": "STRING",
                    "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "Used only with format 'json' to specify a callback function."
                },
                {
                    "name": "logstats",
                    "type": "INTEGER",
                    "description": "If 1, enables logging of detailed statistics."
                }
            ],
            "code": "import requests\n\nparams = {'format': format, 'url': url, 'shorturl': shorturl, 'logstats': logstats, 'callback': callback}\nresponse = requests.get('https://is.gd/create.php?', params=params)\nprint(response.text)",
            "statuscode": 200,
            "body": {
                "shorturl": "string"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "shorturl": {
                        "type": "string"
                    }
                }
            }
        }
    ]
}
```