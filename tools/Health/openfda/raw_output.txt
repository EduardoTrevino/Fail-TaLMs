### api.py

```python
import requests
from typing import Optional, Dict, Any

def get_animal_adr(limit: Optional[int] = 10, skip: Optional[int] = 0, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict[str, Any]:
    """
    Retrieve animal and veterinary adverse event reports.
    
    Parameters:
    - limit: Optional; number of records to return.
    - skip: Optional; number of records to skip.
    """
    url = "https://api.fda.gov/animalandveterinary/event.json"
    params = {'limit': limit, 'skip': skip}
    response = requests.get(url, params=params)
    return response.json()

def get_drug_event(limit: Optional[int] = 10, skip: Optional[int] = 0, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict[str, Any]:
    """
    Retrieve drug adverse event reports.
    
    Parameters:
    - limit: Optional; number of records to return.
    - skip: Optional; number of records to skip.
    """
    url = "https://api.fda.gov/drug/event.json"
    params = {'limit': limit, 'skip': skip}
    response = requests.get(url, params=params)
    return response.json()

def get_drug_label(limit: Optional[int] = 10, skip: Optional[int] = 0, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict[str, Any]:
    """
    Retrieve drug labeling information.
    
    Parameters:
    - limit: Optional; number of records to return.
    - skip: Optional; number of records to skip.
    """
    url = "https://api.fda.gov/drug/label.json"
    params = {'limit': limit, 'skip': skip}
    response = requests.get(url, params=params)
    return response.json()

def get_device_event(limit: Optional[int] = 10, skip: Optional[int] = 0, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict[str, Any]:
    """
    Retrieve device adverse event reports.
    
    Parameters:
    - limit: Optional; number of records to return.
    - skip: Optional; number of records to skip.
    """
    url = "https://api.fda.gov/device/event.json"
    params = {'limit': limit, 'skip': skip}
    response = requests.get(url, params=params)
    return response.json()

def get_device_udi(limit: Optional[int] = 10, skip: Optional[int] = 0, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict[str, Any]:
    """
    Retrieve device unique device identifier (UDI) information.
    
    Parameters:
    - limit: Optional; number of records to return.
    - skip: Optional; number of records to skip.
    """
    url = "https://api.fda.gov/device/udi.json"
    params = {'limit': limit, 'skip': skip}
    response = requests.get(url, params=params)
    return response.json()
```

### api_test.py

```python
import unittest
from api import get_animal_adr, get_drug_event, get_drug_label, get_device_event, get_device_udi

class TestOpenFDAAPI(unittest.TestCase):

    def test_get_animal_adr(self):
        response = get_animal_adr()
        self.assertIn('meta', response)
        self.assertIn('results', response)

    def test_get_drug_event(self):
        response = get_drug_event()
        self.assertIn('meta', response)
        self.assertIn('results', response)

    def test_get_drug_label(self):
        response = get_drug_label()
        self.assertIn('meta', response)
        self.assertIn('results', response)

    def test_get_device_event(self):
        response = get_device_event()
        self.assertIn('meta', response)
        self.assertIn('results', response)
    
    def test_get_device_udi(self):
        response = get_device_udi()
        self.assertIn('meta', response)
        self.assertIn('results', response)

if __name__ == '__main__':
    unittest.main()
```

### openfda.json

```json
{
    "tool_name": "openFDA",
    "tool_description": "OpenFDA provides public access to high-value datasets by using key data standards, so that data is easier to use and understand for stakeholders across the FDA's regulated industries.",
    "title": "openFDA API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 90,
        "avgLatency": 200,
        "avgSuccessRate": 95,
        "popularityScore": 9.0
    },
    "home_url": "https://open.fda.gov/api/",
    "host": "api.fda.gov",
    "api_list": [
        {
            "name": "get_animal_adr",
            "url": "https://api.fda.gov/animalandveterinary/event.json",
            "description": "Retrieve animal and veterinary adverse event reports.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "INTEGER",
                    "description": "Number of records to return.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "INTEGER",
                    "description": "Number of records to skip.",
                    "default": "0"
                }
            ]
        },
        {
            "name": "get_drug_event",
            "url": "https://api.fda.gov/drug/event.json",
            "description": "Retrieve drug adverse event reports.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "INTEGER",
                    "description": "Number of records to return.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "INTEGER",
                    "description": "Number of records to skip.",
                    "default": "0"
                }
            ]
        },
        {
            "name": "get_drug_label",
            "url": "https://api.fda.gov/drug/label.json",
            "description": "Retrieve drug labeling information.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "INTEGER",
                    "description": "Number of records to return.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "INTEGER",
                    "description": "Number of records to skip.",
                    "default": "0"
                }
            ]
        },
        {
            "name": "get_device_event",
            "url": "https://api.fda.gov/device/event.json",
            "description": "Retrieve device adverse event reports.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "INTEGER",
                    "description": "Number of records to return.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "INTEGER",
                    "description": "Number of records to skip.",
                    "default": "0"
                }
            ]
        },
        {
            "name": "get_device_udi",
            "url": "https://api.fda.gov/device/udi.json",
            "description": "Retrieve device unique device identifier (UDI) information.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "INTEGER",
                    "description": "Number of records to return.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "INTEGER",
                    "description": "Number of records to skip.",
                    "default": "0"
                }
            ]
        }
    ]
}
```