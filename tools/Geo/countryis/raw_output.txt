### api.py
```python
import requests
from typing import Optional, Dict

def get_country_by_own_ip(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict:
    """
    Retrieve the country for the requester's own IP address by querying the Country.is API.
    """
    url = "https://api.country.is"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_country_by_ip(ip: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict:
    """
    Retrieve the country for a specified IP address.

    Parameters:
    ip [Required]: string - The IP address to query.
    """
    url = f"https://api.country.is/{ip}"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}

def get_data_sources_info(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff') -> Dict:
    """
    Retrieve information about the data sources used by the Country.is API.
    """
    url = "https://api.country.is/info"
    response = requests.get(url)
    try:
        return response.json()
    except Exception as e:
        return {"error": str(e), "response": response.text}
```

### api_test.py
```python
import unittest
from api import get_country_by_own_ip, get_country_by_ip, get_data_sources_info

class TestCountryIsApi(unittest.TestCase):

    def test_get_country_by_own_ip(self):
        # Test the retrieval of the country based on own IP
        result = get_country_by_own_ip()
        self.assertIn('ip', result)
        self.assertIn('country', result)

    def test_get_country_by_ip(self):
        # Test the retrieval of the country for a specific IP
        ip = "9.9.9.9"
        result = get_country_by_ip(ip)
        self.assertIn('ip', result)
        self.assertIn('country', result)
        self.assertEqual(result['ip'], ip)

    def test_get_data_sources_info(self):
        # Test the retrieval of information about the data sources
        result = get_data_sources_info()
        self.assertIn('cloudflare', result)
        self.assertIn('maxmind', result)

if __name__ == '__main__':
    unittest.main()
```

### countryis.json
```json
{
    "tool_name": "countryis",
    "tool_description": "An API to obtain the country of a user's IP address. Utilizes geolocation data from Cloudflare and MaxMind. No API key or quotas required.",
    "title": "Country.is API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 98,
        "avgLatency": 100,
        "avgSuccessRate": 99,
        "popularityScore": 8.0,
        "__typename": "Score"
    },
    "home_url": "https://api.country.is",
    "host": "api.country.is",
    "api_list": [
        {
            "name": "get_country_by_own_ip",
            "url": "https://api.country.is",
            "description": "Retrieve the country for the requester's own IP address.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = 'https://api.country.is'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "ip": "str",
                "country": "str"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "get_country_by_ip",
            "url": "https://api.country.is/{ip}",
            "description": "Retrieve the country for a specified IP address.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "The IP address to query.",
                    "default": ""
                }
            ],
            "optional_parameters": [],
            "code": "import requests\n\nurl = f'https://api.country.is/{ip}'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "ip": "str",
                "country": "str"
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                }
            }
        },
        {
            "name": "get_data_sources_info",
            "url": "https://api.country.is/info",
            "description": "Retrieve information about the data sources used by the Country.is API.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": [],
            "code": "import requests\n\nurl = 'https://api.country.is/info'\nresponse = requests.get(url)\nprint(response.json())",
            "statuscode": 200,
            "body": {
                "cloudflare": {
                    "enabled": "bool"
                },
                "maxmind": {
                    "enabled": "bool",
                    "build": "str"
                }
            },
            "headers": {},
            "schema": {
                "type": "object",
                "properties": {
                    "cloudflare": {
                        "type": "object"
                    },
                    "maxmind": {
                        "type": "object"
                    }
                }
            }
        }
    ]
}
```