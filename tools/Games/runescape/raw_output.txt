### api.py
```python
import requests
from typing import Optional, List

def grand_exchange_info(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns the runedate of when the Grand Exchange Database was last updated.
    """
    url = "https://secure.runescape.com/m=itemdb_rs/api/info.json"
    response = requests.get(url)
    return response.json()

def grand_exchange_category(category: int, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns the number of items determined by the first letter for a given category.
    """
    url = f"https://services.runescape.com/m=itemdb_rs/api/catalogue/category.json?category={category}"
    response = requests.get(url)
    return response.json()

def grand_exchange_items(category: int, alpha: str, page: int = 1, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns items given the category, starting letter, and page number.
    """
    url = f"https://services.runescape.com/m=itemdb_rs/api/catalogue/items.json?category={category}&alpha={alpha}&page={page}"
    response = requests.get(url)
    return response.json()

def grand_exchange_detail(item_id: int, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns detailed information on a tradeable item in the Grand Exchange by ItemID.
    """
    url = f"https://services.runescape.com/m=itemdb_rs/api/catalogue/detail.json?item={item_id}"
    response = requests.get(url)
    return response.json()

def grand_exchange_graph(item_id: int, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Shows the prices each day of a given item for the previous 180 days.
    """
    url = f"https://services.runescape.com/m=itemdb_rs/api/graph/{item_id}.json"
    response = requests.get(url)
    return response.json()

def hiscores_ranking(table: int, category: int, size: int = 50, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns up to the top 50 players in a given skill or activity.
    """
    url = f"https://secure.runescape.com/m=hiscore/ranking.json?table={table}&category={category}&size={size}"
    response = requests.get(url)
    return response.json()

def runemetrics_profile(user: str, toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns a player's Runemetrics profile data.
    """
    url = f"https://apps.runescape.com/runemetrics/profile/profile?user={user}&activities=20"
    response = requests.get(url)
    return response.json()

def player_count(toolbench_rapidapi_key: str = '088440d910mshef857391f2fc461p17ae9ejsnaebc918926ff'):
    """
    Returns the number of players currently online in RuneScape and Old School RuneScape.
    """
    url = "http://www.runescape.com/player_count.js?varname=iPlayerCount"
    response = requests.get(url)
    return response.text
```

### api_test.py
```python
import unittest
from api import (
    grand_exchange_info, 
    grand_exchange_category, 
    grand_exchange_items, 
    grand_exchange_detail, 
    grand_exchange_graph, 
    hiscores_ranking, 
    runemetrics_profile, 
    player_count
)

class TestRunescapeAPI(unittest.TestCase):
    
    def test_grand_exchange_info(self):
        result = grand_exchange_info()
        self.assertIn("lastConfigUpdateRuneday", result)  # or another key

    def test_grand_exchange_category(self):
        result = grand_exchange_category(category=9)
        self.assertIn("types", result)

    def test_grand_exchange_items(self):
        result = grand_exchange_items(category=9, alpha='c', page=1)
        self.assertIn("items", result)

    def test_grand_exchange_detail(self):
        result = grand_exchange_detail(item_id=21787)
        self.assertIn("item", result)

    def test_grand_exchange_graph(self):
        result = grand_exchange_graph(item_id=21787)
        self.assertIn("daily", result)

    def test_hiscores_ranking(self):
        result = hiscores_ranking(table=9, category=0, size=2)
        self.assertIsInstance(result, list)

    def test_runemetrics_profile(self):
        result = runemetrics_profile(user="SomePlayer")
        self.assertIn("name", result)
        
    def test_player_count(self):
        result = player_count()
        self.assertIn("iPlayerCount", result)

if __name__ == '__main__':
    unittest.main()
```

### runescape.json
```json
{
    "tool_name": "runescape",
    "tool_description": "API for accessing data related to the game RuneScape, including the Grand Exchange, HiScores, Runemetrics, and player information.",
    "title": "RuneScape API",
    "pricing": "FREE",
    "score": {
        "avgServiceLevel": 95,
        "avgLatency": 150,
        "avgSuccessRate": 98,
        "popularityScore": 9.5,
        "__typename": "Score"
    },
    "home_url": "https://www.runescape.com/",
    "host": "services.runescape.com",
    "api_list": [
        {
            "name": "grand_exchange_info",
            "url": "https://secure.runescape.com/m=itemdb_rs/api/info.json",
            "description": "Returns the runedate of when the Grand Exchange Database was last updated.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": []
        },
        {
            "name": "grand_exchange_category",
            "url": "https://services.runescape.com/m=itemdb_rs/api/catalogue/category.json",
            "description": "Returns the number of items in a category.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "category",
                    "type": "INTEGER",
                    "description": "The category identification number."
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "grand_exchange_items",
            "url": "https://services.runescape.com/m=itemdb_rs/api/catalogue/items.json",
            "description": "Returns items given the category, starting letter, and page number.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "category",
                    "type": "INTEGER",
                    "description": "The category identification number."
                },
                {
                    "name": "alpha",
                    "type": "STRING",
                    "description": "The starting letter for items."
                },
                {
                    "name": "page",
                    "type": "INTEGER",
                    "description": "The page number starting from 1.",
                    "default": 1
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "grand_exchange_detail",
            "url": "https://services.runescape.com/m=itemdb_rs/api/catalogue/detail.json",
            "description": "Returns detailed information on a tradeable item.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "item_id",
                    "type": "INTEGER",
                    "description": "The ItemID."
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "grand_exchange_graph",
            "url": "https://services.runescape.com/m=itemdb_rs/api/graph",
            "description": "Shows prices each day of a given item for the previous 180 days.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "item_id",
                    "type": "INTEGER",
                    "description": "The ItemID."
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "hiscores_ranking",
            "url": "https://secure.runescape.com/m=hiscore/ranking.json",
            "description": "Returns up to the top 50 players in a given skill or activity.",
            "method": "GET",
            "required_parameters": [
                {
                    "name": "table",
                    "type": "INTEGER",
                    "description": "The skill or activity table."
                },
                {
                    "name": "category",
                    "type": "INTEGER",
                    "description": "The category for the skill or activity."
                }
            ],
            "optional_parameters": [
                {
                    "name": "size",
                    "type": "INTEGER",
                    "description": "The amount of players to return, max 50.",
                    "default": 50
                }
            ]
        },
        {
            "name": "runemetrics_profile",
            "url": "https://apps.runescape.com/runemetrics/profile/profile",
            "description": "Returns a player's Runemetrics profile data.",

            "method": "GET",
            "required_parameters": [
                {
                    "name": "user",
                    "type": "STRING",
                    "description": "The name of the RuneScape player."
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "player_count",
            "url": "http://www.runescape.com/player_count.js",
            "description": "Returns the number of players currently online in RuneScape and Old School RuneScape.",
            "method": "GET",
            "required_parameters": [],
            "optional_parameters": []
        }
    ]
}
```