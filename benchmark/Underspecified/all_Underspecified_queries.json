[
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_markets_for_coin",
                "api_description": "Retrieve top 50 exchanges and markets for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "markets": [
                        {
                            "name": "string",
                            "pair": "string",
                            "price_usd": "float",
                            "volume_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_supported_dexes",
                "api_description": "Get list of supported dexes on a network.",
                "required_parameters": [
                    "network"
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "name": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the top markets and exchanges for a specific cryptocurrency and also list all decentralized exchanges supported on a blockchain network.",
        "relevant APIs": [],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_candles",
                "api_description": "Retrieves time-intervaled data for the provided symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time_frame",
                        "type": "STRING",
                        "description": "Time range for each candle",
                        "default": "15m"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you retrieve the trading data for BTC/USD on Gemini and also provide the price history for Bitcoin to Litecoin exchange on N.exchange over the last hour?",
        "relevant APIs": [],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ohlc_data",
                "api_description": "Get OHLC (open/high/low/close) data for a given market.",
                "required_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "interval",
                        "type": "INTEGER",
                        "description": "Time frame interval in minutes"
                    },
                    {
                        "name": "since",
                        "type": "INTEGER",
                        "description": "Return up to 720 OHLC data points since given timestamp"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What are the historical price details in OHLC format on Kraken and BTCEUR on N.exchange for the past 24 hours?",
        "relevant APIs": [],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieves all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "string",
                    "IFSC": "string",
                    "BRANCH": "string",
                    "ADDRESS": "string",
                    "CONTACT": "string or null",
                    "CITY": "string",
                    "RTGS": "boolean",
                    "MICR": "string or null",
                    "UPI": "boolean",
                    "NEFT": "boolean",
                    "IMPS": "boolean"
                }
            }
        ],
        "query": "Can you provide a list of all available trading symbols and also give me the details of a bank?",
        "relevant APIs": [],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ohlc_data",
                "api_description": "Get OHLC (open/high/low/close) data for a given market.",
                "required_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "interval",
                        "type": "INTEGER",
                        "description": "Time frame interval in minutes"
                    },
                    {
                        "name": "since",
                        "type": "INTEGER",
                        "description": "Return up to 720 OHLC data points since given timestamp"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What are the historical price details in OHLC format on Kraken and on N.exchange for the past 24 hours?",
        "relevant APIs": [],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "currency": "string",
                    "rates": {
                        "string": "string"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_markets",
                "api_description": "A list of all markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of markets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "exchangeId": "str",
                            "baseId": "str",
                            "quoteId": "str",
                            "baseSymbol": "str",
                            "quoteSymbol": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "volumePercent": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the current exchange rates for USD and give me information on the market I'm interested in?",
        "relevant APIs": [],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_buy_price",
                "api_description": "Get the total price to buy one bitcoin or ether.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "amount": "string",
                        "currency": "string"
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_ticker",
                "api_description": "Get Level 1 Market Data for a specific trading pair, including bid/ask prices, last traded price, and size.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol (e.g., BTC-USDT)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "price": "string",
                        "size": "string",
                        "bestBid": "string",
                        "bestAsk": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current buy price on Coinbase and the best bid and ask prices on Kucoin?",
        "relevant APIs": [],
        "query_id": 7
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "rates": {
                            "string": "string"
                        }
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_fiat_price",
                "api_description": "Get the fiat price of the currencies for the available trading pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base",
                        "type": "STRING",
                        "description": "Base currency ticker symbol (default is 'USD')."
                    },
                    {
                        "name": "currencies",
                        "type": "STRING",
                        "description": "Comma-separated list of cryptocurrencies to be converted into fiat (e.g., 'BTC,ETH')."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "BTC": "string",
                        "ETH": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What are the current cryptocurrency exchange rates, and specific fiat prices from Kucoin?",
        "relevant APIs": [],
        "query_id": 8
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "price_converter",
                "api_description": "Converts a set amount of base currency to quote currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "base_currency_id",
                        "type": "STRING",
                        "description": ""
                    },
                    {
                        "name": "quote_currency_id",
                        "type": "STRING",
                        "description": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "amount",
                        "type": "FLOAT",
                        "description": "Amount to convert",
                        "default": 0
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/price-converter",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_gold_price",
                "api_description": "Fetch the price of gold.",
                "method": "GET",
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/cenyzlota",
                "statuscode": 200,
                "category_name": "Finance",
                "required_parameters": []
            }
        ],
        "query": "I want to convert 10 Ether to a cryptocurrency equivalent. Also, show me the current gold price.",
        "relevant APIs": [],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_buy_price",
                "api_description": "Get the total price to buy one bitcoin or ether.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "amount": "string",
                        "currency": "string"
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_ticker",
                "api_description": "Get Level 1 Market Data for a specific trading pair, including bid/ask prices, last traded price, and size.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol (e.g., BTC-USDT)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "price": "string",
                        "size": "string",
                        "bestBid": "string",
                        "bestAsk": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current buy price for a certain cryptocurrency on an exchange and also the best bid and ask prices for another cryptocurrency on a different platform?",
        "relevant APIs": [],
        "query_id": 10
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ohlc_data",
                "api_description": "Get OHLC (open/high/low/close) data for a given market.",
                "required_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "interval",
                        "type": "INTEGER",
                        "description": "Time frame interval in minutes"
                    },
                    {
                        "name": "since",
                        "type": "INTEGER",
                        "description": "Return up to 720 OHLC data points since given timestamp"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What are the historical price details in OHLC format for the pair BTCUSD on Kraken and on N.exchange for the past 24 hours?",
        "relevant APIs": [],
        "query_id": 11
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What are the current exchange rates available in table type 'A' from the National Bank of Poland? Additionally, can you provide the details of the bank branch associated with a specific IFSC code?",
        "relevant APIs": [],
        "query_id": 12
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "attributes": {
                            "price": "string",
                            "price24h_change": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "wazirx",
                "api_name": "ticker_24hr",
                "api_description": "24-hour rolling window price change statistics for a single symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "The trading pair symbol",
                        "default": "btcinr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "string",
                    "baseAsset": "string",
                    "quoteAsset": "string",
                    "openPrice": "string",
                    "lowPrice": "string",
                    "highPrice": "string",
                    "lastPrice": "string",
                    "volume": "string"
                }
            }
        ],
        "query": "What is the current price of the Ethereum token on its network, and how has the price changed in the last 24 hours for the BTC to INR trading pair?",
        "relevant APIs": [],
        "query_id": 13
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_tradable_asset_pairs",
                "api_description": "Get tradable asset pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pairs to get data for"
                    },
                    {
                        "name": "info",
                        "type": "STRING",
                        "description": "Info to retrieve (optional)"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_pairs",
                "api_description": "Get all supported currency pairs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I would like some information regarding assets from Kraken and N.exchange exchanges?",
        "relevant APIs": [],
        "query_id": 14
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieves all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "string",
                    "IFSC": "string",
                    "BRANCH": "string",
                    "ADDRESS": "string",
                    "CONTACT": "string or null",
                    "CITY": "string",
                    "RTGS": "boolean",
                    "MICR": "string or null",
                    "UPI": "boolean",
                    "NEFT": "boolean",
                    "IMPS": "boolean"
                }
            }
        ],
        "query": "Can you give me the details of a bank using IFSC code 'YESB0DNB002'?",
        "relevant APIs": [],
        "query_id": 15
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieves all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "string",
                    "IFSC": "string",
                    "BRANCH": "string",
                    "ADDRESS": "string",
                    "CONTACT": "string or null",
                    "CITY": "string",
                    "RTGS": "boolean",
                    "MICR": "string or null",
                    "UPI": "boolean",
                    "NEFT": "boolean",
                    "IMPS": "boolean"
                }
            }
        ],
        "query": "Can you provide a list of all available trading symbols on an exchange and give me the details of a bank using a specific IFSC code?",
        "relevant APIs": [],
        "query_id": 16
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "price_converter",
                "api_description": "Converts a set amount of base currency to quote currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "base_currency_id",
                        "type": "STRING",
                        "description": ""
                    },
                    {
                        "name": "quote_currency_id",
                        "type": "STRING",
                        "description": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "amount",
                        "type": "FLOAT",
                        "description": "Amount to convert",
                        "default": 0
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/price-converter",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_gold_price",
                "api_description": "Fetch the price of gold.",
                "method": "GET",
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/cenyzlota",
                "statuscode": 200,
                "category_name": "Finance",
                "required_parameters": []
            }
        ],
        "query": "I want to convert 10 of a cryptocurrency to Bitcoin equivalents. Also, show me the current gold price.",
        "relevant APIs": [],
        "query_id": 17
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ticker_information",
                "api_description": "Get ticker information for all or requested markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for (optional, default: all tradeable exchange pairs)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": {
                        "pair_name": {
                            "a": [
                                "price",
                                "whole lot volume",
                                "lot volume"
                            ],
                            "b": [
                                "price",
                                "whole lot volume",
                                "lot volume"
                            ],
                            "c": [
                                "price",
                                "lot volume"
                            ],
                            "v": [
                                "today",
                                "last 24 hours"
                            ],
                            "p": [
                                "today",
                                "last 24 hours"
                            ],
                            "t": [
                                "today",
                                "last 24 hours"
                            ],
                            "l": [
                                "today",
                                "last 24 hours"
                            ],
                            "h": [
                                "today",
                                "last 24 hours"
                            ],
                            "o": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What is the current market ticker information for the stock I like on both Kraken and OKX?",
        "relevant APIs": [],
        "query_id": 18
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_order_book",
                "api_description": "Retrieve the order book for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which the order book is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I want to see the current exchange rate for USD from the NBP service and also check the order book for Bitcoin-USDT trading pair on OKX.",
        "relevant APIs": [],
        "query_id": 19
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "symbol": "str",
                            "name": "str",
                            "price_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CITY": "str",
                    "IFSC": "str",
                    "CONTACT": "str or null",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "Can you check the current USD price of the token using its address? Additionally, I'd like to find the details of a bank branch using its IFSC code, say YESB0DNB002.",
        "relevant APIs": [],
        "query_id": 20
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "List of Venues with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": [
                        "object"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "string",
                    "base_code": "string",
                    "rates": {
                        "type": "object",
                        "additionalProperties": "number"
                    }
                }
            }
        ],
        "query": "Can you find some shopping venues that accept cryptocurrency globally, and also provide me the latest exchange rates?",
        "relevant APIs": [],
        "query_id": 21
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "currency": "string",
                    "rates": {
                        "string": "string"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_markets",
                "api_description": "A list of all markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of markets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "exchangeId": "str",
                            "baseId": "str",
                            "quoteId": "str",
                            "baseSymbol": "str",
                            "quoteSymbol": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "volumePercent": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the current exchange rates for USD and can you list the top cryptocurrency markets?",
        "relevant APIs": [],
        "query_id": 22
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "Retrieve a list of venues with optional filtering parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": "array",
                    "count": "integer"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_asset_info",
                "api_description": "Get information about the assets that are available for deposit, withdrawal, trading, and earn.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "asset",
                        "type": "STRING",
                        "description": "Comma delimited list of assets to get info on (optional, default all available assets)"
                    },
                    {
                        "name": "aclass",
                        "type": "STRING",
                        "description": "Asset class (optional, default: currency)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "object"
                }
            }
        ],
        "query": "Can you find venues accepting cryptocurrency near New York City and list available trading assets on Kraken?",
        "relevant APIs": [],
        "query_id": 23
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_order_book",
                "api_description": "Retrieve the order book for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which the order book is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I want to see the current exchange rate for USD from the NBP service's table A and also check the order book on OKX.",
        "relevant APIs": [],
        "query_id": 24
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "rates": {
                            "string": "string"
                        }
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_fiat_price",
                "api_description": "Get the fiat price of the currencies for the available trading pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base",
                        "type": "STRING",
                        "description": "Base currency ticker symbol (default is 'USD')."
                    },
                    {
                        "name": "currencies",
                        "type": "STRING",
                        "description": "Comma-separated list of cryptocurrencies to be converted into fiat (e.g., 'BTC,ETH')."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "BTC": "string",
                        "ETH": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What are the current cryptocurrency exchange rates for the currency of the country I live in on Coinbase, and can you also get the fiat prices of BTC and ETH from Kucoin?",
        "relevant APIs": [],
        "query_id": 25
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_order_book",
                "api_description": "Retrieve the order book for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which the order book is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I want to see the current exchange rate from the NBP service and also check the order book on OKX.",
        "relevant APIs": [],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies ranked by their market cap and also give me the current exchange rates for the US dollar?",
        "relevant APIs": [],
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "attributes": {
                            "price": "string",
                            "price24h_change": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "wazirx",
                "api_name": "ticker_24hr",
                "api_description": "24-hour rolling window price change statistics for a single symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "The trading pair symbol",
                        "default": "btcinr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "string",
                    "baseAsset": "string",
                    "quoteAsset": "string",
                    "openPrice": "string",
                    "lowPrice": "string",
                    "highPrice": "string",
                    "lastPrice": "string",
                    "volume": "string"
                }
            }
        ],
        "query": "Can you tell me the current price of the Ethereum token on its network? Also, how has the price changed in the last 24 hours for a certain trading pair?",
        "relevant APIs": [],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "List of Venues with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": [
                        "object"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "string",
                    "base_code": "string",
                    "rates": {
                        "type": "object",
                        "additionalProperties": "number"
                    }
                }
            }
        ],
        "query": "Can you find some venues that accept cryptocurrency globally, and also provide me the latest exchange rates?",
        "relevant APIs": [],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_tradable_asset_pairs",
                "api_description": "Get tradable asset pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pairs to get data for"
                    },
                    {
                        "name": "info",
                        "type": "STRING",
                        "description": "Info to retrieve (optional)"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_pairs",
                "api_description": "Get all supported currency pairs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all tradable asset pairs on both exchanges?",
        "relevant APIs": [],
        "query_id": 30
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "attributes": {
                            "price": "string",
                            "price24h_change": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "wazirx",
                "api_name": "ticker_24hr",
                "api_description": "24-hour rolling window price change statistics for a single symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "The trading pair symbol",
                        "default": "btcinr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "string",
                    "baseAsset": "string",
                    "quoteAsset": "string",
                    "openPrice": "string",
                    "lowPrice": "string",
                    "highPrice": "string",
                    "lastPrice": "string",
                    "volume": "string"
                }
            }
        ],
        "query": "What is the current price of the Ethereum token on its network, and how has the price changed in the last 24 hours for the BTC to INR trading pair?",
        "relevant APIs": [],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What is the current price of Bitcoin and can you provide the details of a bank branch by IFSC code?",
        "relevant APIs": [],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_candles",
                "api_description": "Retrieves time-intervaled data for the provided symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time_frame",
                        "type": "STRING",
                        "description": "Time range for each candle",
                        "default": "15m"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide the current market ticker information for BTC-USDT on OKX?",
        "relevant APIs": [],
        "query_id": 33
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of Bitcoin in USD and also give the exchange rate of USD?",
        "relevant APIs": [],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieve all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What are all the available trading symbols on Gemini, and what is the current market ticker information for certain cryptocurrencies on OKX?",
        "relevant APIs": [],
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What is the current price of a cryptocurrency and can you provide the details of Delhi Nagrik Sehkari Bank using IFSC code YESB0DNB002?",
        "relevant APIs": [],
        "query_id": 36
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies ranked by their market cap and also give me the current exchange rates?",
        "relevant APIs": [],
        "query_id": 37
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What are the current exchange rates available in table type 'A' from the National Bank of Poland? Additionally, can you provide the details of the bank branch associated with the IFSC code 'HDFC0000123'?",
        "relevant APIs": [],
        "query_id": 38
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_global_market_overview",
                "api_description": "Returns global market overview metrics.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "url": "https://api.coinpaprika.com/v1/global",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/tables/{table}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "What is the current overview of the global cryptocurrency market? Also, provide the latest exchange.",
        "relevant APIs": [],
        "query_id": 39
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_markets_for_coin",
                "api_description": "Retrieve top 50 exchanges and markets for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "markets": [
                        {
                            "name": "string",
                            "pair": "string",
                            "price_usd": "float",
                            "volume_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_supported_dexes",
                "api_description": "Get list of supported dexes on a network.",
                "required_parameters": [
                    "network"
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "name": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the top markets and exchanges for a specific cryptocurrency and also list all decentralized exchanges supported on the Binance Smart Chain network.",
        "relevant APIs": [],
        "query_id": 40
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "rates": {
                            "string": "string"
                        }
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_fiat_price",
                "api_description": "Get the fiat price of the currencies for the available trading pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base",
                        "type": "STRING",
                        "description": "Base currency ticker symbol (default is 'USD')."
                    },
                    {
                        "name": "currencies",
                        "type": "STRING",
                        "description": "Comma-separated list of cryptocurrencies to be converted into fiat (e.g., 'BTC,ETH')."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "BTC": "string",
                        "ETH": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What are the current cryptocurrency exchange rates against USD on Coinbase, and can you also get the fiat prices of the cryptocurrencies I like from Kucoin?",
        "relevant APIs": [],
        "query_id": 41
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "symbol": "str",
                            "name": "str",
                            "price_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CITY": "str",
                    "IFSC": "str",
                    "CONTACT": "str or null",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "Can you check the current USD price of a token on the Ethereum network? Additionally, I'd like to find the details of a bank branch using its IFSC code.",
        "relevant APIs": [],
        "query_id": 42
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies and also give me the current exchange rates for the US dollar?",
        "relevant APIs": [],
        "query_id": 43
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_fiat_currencies",
                "api_description": "Lists known fiat currencies.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "min_size": "string"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_assets",
                "api_description": "A list of all assets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of assets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "rank": "str",
                            "symbol": "str",
                            "name": "str",
                            "supply": "str",
                            "maxSupply": "str",
                            "marketCapUsd": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "changePercent24Hr": "str",
                            "vwap24Hr": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of known currencies and information on there assets?",
        "relevant APIs": [],
        "query_id": 44
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of Bitcoin in USD and also give the exchange rate from table 'A'?",
        "relevant APIs": [],
        "query_id": 45
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of a cryptocurrency in USD and also give the exchange rate of USD from table 'A'?",
        "relevant APIs": [],
        "query_id": 46
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What are the current exchange rates available from the National Bank of Poland? Additionally, can you provide the details of a bank branch associated with a specific IFSC code?",
        "relevant APIs": [],
        "query_id": 47
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character I saw in an artile earlier? Also, give me words that mean the same as 'love' using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 48
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character '\u4ec1'? Also, does the sentence my friend just said contain any profanity?",
        "relevant APIs": [],
        "query_id": 49
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character I saw in an artile earlier? Also, give me words that mean the same as the one my mom always talks about using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 50
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number mentioned in class and provide the definition of the English word 'radical'?",
        "relevant APIs": [],
        "query_id": 51
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word discussed between my friends earlier and also filter profanity from the sentence 'This is a damn beautiful day'?",
        "relevant APIs": [],
        "query_id": 52
    },
    {
        "api_list": [
            {
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                },
                "category_name": "Language"
            },
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "basic_data": {
                        "key": "value"
                    }
                },
                "category_name": "Language"
            }
        ],
        "query": "I am interested in learning more about the Chinese character I learned in class earlier. Can you provide the basic data for this character? Also, list all Chinese characters available in the database.",
        "relevant APIs": [],
        "query_id": 53
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the 'gb' filter and also find words that mean the same as that famous phrase",
        "relevant APIs": [],
        "query_id": 54
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character on state media earlier? Also, does this sentence 'This is a clean sentence' contain any profanity?",
        "relevant APIs": [],
        "query_id": 55
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word my mother told me earlier and does the sentence I heard in the movie earlier contain any profanity?",
        "relevant APIs": [],
        "query_id": 56
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN 'ctp:analects/xue-er'. Also, I would like to know the definition of the English word I keep hearing about in history class.",
        "query_id": 57
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the character filter I saw recently and also find words that mean the same as 'ringing in the ears'?",
        "relevant APIs": [],
        "query_id": 58
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character '\u7231'? Also, give me words that mean the same as the one my mom always talks about using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 59
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Could you list the Chinese dynasties available in the Chinese Text Project? Additionally, what is the definition of the word discussed in Chinese class earlier in English?",
        "query_id": 60
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word my mother told me earlier and does the sentence 'You're such a fool!' contain any profanity?",
        "relevant APIs": [],
        "query_id": 61
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word discussed between my friends earlier and also filter profanity from the sentence some stranger said to me earlier?",
        "relevant APIs": [],
        "query_id": 62
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "What are some words related to my favorite utensil and can you provide the definition of one of these words?",
        "relevant APIs": [],
        "query_id": 63
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character on state media earlier? Also, does the sentence my friend just said contain any profanity?",
        "relevant APIs": [],
        "query_id": 64
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number mentioned in class and provide the definition of the English word I learned in class earlier?",
        "query_id": 65
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the character filter I saw recently and also find words that mean the same as that famous phrase",
        "relevant APIs": [],
        "query_id": 66
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_version",
                "api_description": "Returns date information about the CCDB service, the Unicode version, and the PHP/MySQL versions.",
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "unicodeVersion": "str",
                    "phpVersion": "str",
                    "mysqlVersion": "str"
                },
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "template_response": "true or false",
                "optional_parameters": []
            }
        ],
        "query": "What is the current version information of the Chinese Character Web API, and can you check if the phrase my teacher commonly says contains any profanity?",
        "relevant APIs": [],
        "query_id": 67
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character '\u597d'? Also, what does the English word I need to learn for my vocab quiz means?",
        "query_id": 68
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN on the powerpoint slide right now. Also, I would like to know the definition of the English word I keep hearing about in history class.",
        "query_id": 69
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character in my WeChat conversation? Also, what does the English word 'benevolent' mean?",
        "query_id": 70
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number 85 and provide the definition of the English word I learned in class earlier?",
        "relevant APIs": [],
        "query_id": 71
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word 'serendipity' and also filter profanity from the sentence some stranger said to me earlier?",
        "relevant APIs": [],
        "query_id": 72
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN on the powerpoint slide right now. Also, I would like to know the definition of the English word 'philosophy'.",
        "query_id": 73
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word 'quixotic' and does the sentence I heard in the movie earlier contain any profanity?",
        "relevant APIs": [],
        "query_id": 74
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character in my WeChat conversation? Also, what does the English word I need to learn for my vocab quiz means?",
        "query_id": 75
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "str": "str"
                },
                "category_name": "Content"
            }
        ],
        "query": "Could you look up specific information about the rosary online and share a prayer with me?",
        "query_id": 76
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_user",
                "api_description": "Retrieve a specific user by their unique username.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The user's unique username (case-sensitive)."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ]
            }
        ],
        "query": "I'd like to know about the user 'pg' on Hacker News and also get the parsed content of the Wikipedia page for 'Python (programming language)'.",
        "relevant APIs": [],
        "query_id": 77
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "anime_details": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film from the Star Wars series.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want detailed information on the anime, and I'm interested in finding Star Wars films with a certain title.",
        "relevant APIs": [],
        "query_id": 78
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_staff",
                "api_description": "Get staff information for a specific anime.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_main_information",
                "api_description": "Retrieve all primary information for a specific show by its TVmaze ID.",
                "required_parameters": [
                    {
                        "name": "show_id",
                        "type": "INTEGER",
                        "description": "The TVmaze ID of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Tell me about the staff involved in anime ID 23 and get the main information about the show with the TVmaze ID 1.",
        "relevant APIs": [],
        "query_id": 79
    },
    {
        "api_list": [
            {
                "tool_name": "rickandmorty",
                "api_name": "get_locations",
                "api_description": "Fetches all locations, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of locations to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter by type."
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "Filter by dimension."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you list all locations the universe that are a type of planet?",
        "relevant APIs": [
            "get_locations"
        ],
        "query_id": 80
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule in JSON format on the 4th of August, 2024 using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 81
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule for channel ct1 on the 4th of August, 2024 using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles related to 'historical news' using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 82
    },
    {
        "api_list": [
            {
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": {
                    "type": "list of integers",
                    "description": "List of top story IDs."
                },
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "openlibrary_search",
                "api_description": "Search for books by title, author, and other criteria.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term for the search.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to include in the response, use '*' to include all.",
                        "default": "*"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting order (e.g., 'new', 'old', 'random').",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results pagination.",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 10
                    }
                ],
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "Content"
            }
        ],
        "query": "Can you tell me about the current trending top stories on Hacker News and search for books in the Open Library?",
        "relevant APIs": [],
        "query_id": 83
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the Chronicling America newspaper directory for articles related to 'World War II'? Also, can you find scholarly works?",
        "relevant APIs": [],
        "query_id": 84
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of anime reports available on Anime News Network? Also, can you retrieve details about a specific Star Trek character using its unique ID from STAPI?",
        "relevant APIs": [],
        "query_id": 85
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "get_sitematrix",
                "api_description": "Retrieve the list of Wikimedia sites and related information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sitematrix": {
                        "count": "int",
                        "specials": [
                            {
                                "code": "str",
                                "name": "str",
                                "url": "str"
                            }
                        ]
                    }
                },
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you help with some information on Wikimedia sites and rosary prayers for the year?",
        "query_id": 86
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name using a fuzzy search.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search on Wikipedia and find some shows with a similar name?",
        "relevant APIs": [],
        "query_id": 87
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str"
                },
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Can you find some articles on Wikipedia and tell me about a specific work from Open Library?",
        "relevant APIs": [],
        "query_id": 88
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed info for anime/manga by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "text/xml"
                }
            }
        ],
        "query": "I am looking for detailed information about an anime. Also, can you get the TV schedule for channel ct1 on August 5, 2024, including regional broadcasts if available?",
        "relevant APIs": [],
        "query_id": 89
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_full_by_id",
                "api_description": "Get complete anime resource data by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you retrieve information on an anime and search for a TV show by name?",
        "relevant APIs": [],
        "query_id": 90
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list characters and give details about a specific character?",
        "relevant APIs": [],
        "query_id": 91
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you list the episodes and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 92
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_book",
                "api_description": "Retrieval of a single book from Star Trek universe.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Book unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "book": {}
                }
            }
        ],
        "query": "I want detailed information about a specific title. Additionally, can you fetch details of a specific Star Trek book using its unique ID?",
        "relevant APIs": [],
        "query_id": 93
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of anime reports available? Also, can you retrieve details about a specific character using its unique ID from STAPI?",
        "relevant APIs": [],
        "query_id": 94
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list characters and give information on a character from Star Trek?",
        "relevant APIs": [],
        "query_id": 95
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters, including anime and manga.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "reports": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person from the Star Wars universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you get a list of all reports and find information about people in the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 96
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule for channel ct1 in JSON format using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles related to 'historical news' using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 97
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles starting with 'The New York'? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 98
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about a character from Star Wars and also provide rosary information?",
        "relevant APIs": [],
        "query_id": 99
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the TV schedule for channel CT1 on August 4, 2024, and also find scholarly works related to machine learning?",
        "relevant APIs": [
            "get_tv_schedule",
            "search_works"
        ],
        "query_id": 100
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "parse": {
                        "title": "str",
                        "pageid": "int",
                        "text": {
                            "*": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str",
                            "characters": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide detailed information from Wikipedia about the 'Star Wars' franchise, particularly focusing on its films, along with specific data on all films available in the Star Wars API?",
        "relevant APIs": [],
        "query_id": 101
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_user",
                "api_description": "Retrieve a specific user by their unique username.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The user's unique username (case-sensitive)."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ]
            }
        ],
        "query": "I'd like to know about the user 'pg' on Hacker News and also get the parsed content of the Wikipedia page for 'Python (programming language)'.",
        "relevant APIs": [],
        "query_id": 102
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_episode",
                "api_description": "Retrieve a single episode.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Episode unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find details about an episode of Star Trek and a film from Star Wars?",
        "relevant APIs": [],
        "query_id": 103
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the TV schedule and find some scholarly works?",
        "relevant APIs": [
            "get_tv_schedule",
            "search_works"
        ],
        "query_id": 104
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you provide characters from Final Space and give information about a Star Trek character?",
        "relevant APIs": [],
        "query_id": 105
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "str": "str"
                },
                "category_name": "Content"
            }
        ],
        "query": "Can you search for specific information on Wikipedia and share some details about a rosary prayer with me?",
        "query_id": 106
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the Chronicling America newspaper directory for articles? Also, can you find scholarly works?",
        "relevant APIs": [],
        "query_id": 107
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you list the episodes of Final Space and provide episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 108
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_planets",
                "api_description": "Fetch planet resources or a specific planet.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the planet resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter planet resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "rotation_period": "str",
                            "orbital_period": "str",
                            "diameter": "str",
                            "climate": "str",
                            "gravity": "str",
                            "terrain": "str",
                            "surface_water": "str",
                            "population": "str",
                            "residents": [
                                "str"
                            ],
                            "films": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_prayer_by_day",
                "api_description": "Returns rosary prayer for a specific day of the week.",
                "required_parameters": [
                    "day"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the climate like on Tatooine in Star Wars and what's the rosary prayer for the day?",
        "relevant APIs": [],
        "query_id": 109
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_planets",
                "api_description": "Fetch planet resources or a specific planet.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the planet resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter planet resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "rotation_period": "str",
                            "orbital_period": "str",
                            "diameter": "str",
                            "climate": "str",
                            "gravity": "str",
                            "terrain": "str",
                            "surface_water": "str",
                            "population": "str",
                            "residents": [
                                "str"
                            ],
                            "films": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_prayer_by_day",
                "api_description": "Returns rosary prayer for a specific day of the week.",
                "required_parameters": [
                    "day"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about a planet in Star Wars and share a prayer for one day of the week?",
        "relevant APIs": [],
        "query_id": 110
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed info for anime/manga by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "text/xml"
                }
            }
        ],
        "query": "I am looking for detailed information about the anime titled 'Naruto'. Also, can you get the TV schedule for channel ct1, including regional broadcasts if available?",
        "relevant APIs": [],
        "query_id": 111
    },
    {
        "api_list": [
            {
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": {
                    "type": "list of integers",
                    "description": "List of top story IDs."
                },
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "openlibrary_search",
                "api_description": "Search for books by title, author, and other criteria.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term for the search.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to include in the response, use '*' to include all.",
                        "default": "*"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting order (e.g., 'new', 'old', 'random').",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results pagination.",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 10
                    }
                ],
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "Content"
            }
        ],
        "query": "Can you find some popular content on Hacker News and books related to a specific topic from the Open Library?",
        "relevant APIs": [],
        "query_id": 112
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the Chronicling America newspaper directory for articles related to 'World War II'? Also, can you find scholarly works discussing 'nuclear physics'?",
        "relevant APIs": [],
        "query_id": 113
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "get_sitematrix",
                "api_description": "Retrieve the list of Wikimedia sites and related information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sitematrix": {
                        "count": "int",
                        "specials": [
                            {
                                "code": "str",
                                "name": "str",
                                "url": "str"
                            }
                        ]
                    }
                },
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you provide a list of some relevant Wikimedia sites and information on this year's rosary prayers?",
        "query_id": 114
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the Chronicling America newspaper directory for articles related to 'World War II'? Also, can you find scholarly works discussing 'nuclear physics'?",
        "relevant APIs": [],
        "query_id": 115
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "I'd like to know more about 'Luke Skywalker'. Could you search for relevant articles and also find specific details from the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 116
    },
    {
        "api_list": [
            {
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": {
                    "type": "list of integers",
                    "description": "List of top story IDs."
                },
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "openlibrary_search",
                "api_description": "Search for books by title, author, and other criteria.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term for the search.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to include in the response, use '*' to include all.",
                        "default": "*"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting order (e.g., 'new', 'old', 'random').",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results pagination.",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 10
                    }
                ],
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "Content"
            }
        ],
        "query": "What are the current top stories on Hacker News, and can you find books available in the Open Library?",
        "relevant APIs": [],
        "query_id": 117
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_book",
                "api_description": "Retrieval of a single book from Star Trek universe.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Book unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "book": {}
                }
            }
        ],
        "query": "I want detailed information about a specific title. Additionally, can you fetch details of a Star Trek book?",
        "relevant APIs": [],
        "query_id": 118
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters, with options to sort and limit the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you show me newspaper titles and give details of characters from the Final Space series?",
        "relevant APIs": [],
        "query_id": 119
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Can you list the main characters of Final Space? Also, could you tell me more about the character named Luke Skywalker?",
        "relevant APIs": [],
        "query_id": 120
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Get anime resource by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Mal_id": "int",
                        "title": "str",
                        "url": "str",
                        "images": {
                            "jpg": {
                                "image_url": "str",
                                "small_image_url": "str",
                                "large_image_url": "str"
                            }
                        },
                        "score": "float",
                        "aired": {
                            "from": "string",
                            "to": "string"
                        },
                        "episodes": "int"
                    }
                }
            }
        ],
        "query": "Can you give me some of the latest top news stories, and provide details about an anime I'm interested in?",
        "relevant APIs": [],
        "query_id": 121
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_characters",
                "api_description": "Get characters of a specific anime.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_people",
                "api_description": "Search for people by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the person to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you list characters from a specific anime and search for a particular TV actor?",
        "relevant APIs": [],
        "query_id": 122
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "str": "str"
                },
                "category_name": "Content"
            }
        ],
        "query": "Could you help me find information about 'Rosary Beads' online and, while you're at it, share a prayer with me?",
        "query_id": 123
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters, with options to sort and limit the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide newspaper titles and details of characters from a series?",
        "relevant APIs": [],
        "query_id": 124
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Can you list the main characters of a series? Also, could you tell me more about the character from Star Wars?",
        "relevant APIs": [],
        "query_id": 125
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "I want to search results online regarding Machine Learning and retrive most relevant articles",
        "relevant APIs": [
            "search_open_search"
        ],
        "query_id": 126
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object"
                }
            }
        ],
        "query": "I'm interested in learning more about Star Trek. Can you search online and also provide infromation on the characters?",
        "relevant APIs": [],
        "query_id": 127
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 128
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "parse": {
                        "title": "str",
                        "pageid": "int",
                        "text": {
                            "*": "str"
                        }
                    }
                },
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you provide me the detailed content of the 'Holy Rosary' and also tell me what is the rosary prayer?",
        "query_id": 129
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Get anime resource by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Mal_id": "int",
                        "title": "str",
                        "url": "str",
                        "images": {
                            "jpg": {
                                "image_url": "str",
                                "small_image_url": "str",
                                "large_image_url": "str"
                            }
                        },
                        "score": "float",
                        "aired": {
                            "from": "string",
                            "to": "string"
                        },
                        "episodes": "int"
                    }
                }
            }
        ],
        "query": "Can you give me some of the latest top news stories from Hacker News, and provide details about an anime a specific ID?",
        "relevant APIs": [],
        "query_id": 130
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of reports and retrieve details about a Star Trek character?",
        "relevant APIs": [],
        "query_id": 131
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the newspaper directory for articles related to the war? Also, can you find scholarly works discussing 'nuclear physics'?",
        "relevant APIs": [],
        "query_id": 132
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "application/json"
                }
            }
        ],
        "query": "Can you fetch reports about new anime releases and provide me with the TV schedule for channel ct24 on August 4, 2024?",
        "relevant APIs": [],
        "query_id": 133
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Could you list all the episodes from Final Space and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 134
    },
    {
        "api_list": [
            {
                "tool_name": "rickandmorty",
                "api_name": "get_character_by_id",
                "api_description": "Fetches a single character by ID.",
                "required_parameters": [
                    {
                        "name": "character_id",
                        "type": "INTEGER",
                        "description": "ID of the character."
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Who is the character with ID number 3?",
        "relevant APIs": [
            "get_character_by_id"
        ],
        "query_id": 135
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "What is the TV schedule for channel CT2, and can you list journals related to health?",
        "relevant APIs": [
            "get_tv_schedule",
            "list_journals"
        ],
        "query_id": 136
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_episode",
                "api_description": "Retrieve a single episode.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Episode unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide details about a specific Star Trek episode and a Star Wars film?",
        "relevant APIs": [],
        "query_id": 137
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parser a wiki page and return its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you parse a specific Wikipedia page and find detailed information about a particular TV show?",
        "relevant APIs": [],
        "query_id": 138
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list characters from Final Space and provide details about a Star Trek character?",
        "relevant APIs": [],
        "query_id": 139
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str",
                            "characters": [
                                "str"
                            ],
                            "planets": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about a Star Wars film that includes a significant plot point and share a random prayer?",
        "relevant APIs": [],
        "query_id": 140
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters, with options to sort and limit the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Show me newspaper titles related to 'space exploration' and give details of characters from the Final Space series.",
        "relevant APIs": [],
        "query_id": 141
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "I want to search for online articles about Machine Learning and retrieve the most relevant ones from Wikipedia.",
        "relevant APIs": [
            "search_open_search"
        ],
        "query_id": 142
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles? Additionally, can you list journals?",
        "relevant APIs": [],
        "query_id": 143
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Get anime resource by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Mal_id": "int",
                        "title": "str",
                        "url": "str",
                        "images": {
                            "jpg": {
                                "image_url": "str",
                                "small_image_url": "str",
                                "large_image_url": "str"
                            }
                        },
                        "score": "float",
                        "aired": {
                            "from": "string",
                            "to": "string"
                        },
                        "episodes": "int"
                    }
                }
            }
        ],
        "query": "Can you tell me about the top news from Hacker News and an anime, but without giving all the details?",
        "relevant APIs": [],
        "query_id": 144
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_user",
                "api_description": "Retrieve a specific user by their unique username.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The user's unique username (case-sensitive)."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ]
            }
        ],
        "query": "I'd like to know about the user 'pg' on Hacker News and also get the parsed content of the Wikipedia page for 'Python (programming language)'.",
        "relevant APIs": [],
        "query_id": 145
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of reports available on Anime News Network? Also, can you retrieve details about a specific Star Trek character using its unique ID from STAPI?",
        "relevant APIs": [],
        "query_id": 146
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters, with options to sort and limit the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Show me newspaper titles related to 'space exploration' and give details of characters from the series.",
        "relevant APIs": [],
        "query_id": 147
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed info for anime/manga by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "text/xml"
                }
            }
        ],
        "query": "I am looking for detailed information about the anime titled 'Naruto'. Also, can you get the TV schedule on August 5, 2024, including regional broadcasts if available?",
        "relevant APIs": [],
        "query_id": 148
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 149
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the TV schedule on August 4, 2024, and also find scholarly works related to machine learning?",
        "relevant APIs": [
            "get_tv_schedule",
            "search_works"
        ],
        "query_id": 150
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel from Czech Television.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": "XML | JSON based on format"
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search for topics using the OpenSearch protocol on Wikimedia wikis.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ]
            }
        ],
        "query": "I want to check the TV schedule on 04.08.2024, and also find information on Wikipedia.",
        "relevant APIs": [],
        "query_id": 151
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_book",
                "api_description": "Retrieval of a single book from Star Trek universe.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Book unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "book": {}
                }
            }
        ],
        "query": "I want detailed information about a specific anime title. Additionally, can you fetch details of a Star Trek book?",
        "relevant APIs": [],
        "query_id": 152
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_locations",
                "api_description": "Retrieves all locations, with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "get_locations",
                "api_description": "Fetches all locations, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of locations to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter by type."
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "Filter by dimension."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all notable locations from both the Final Space and Rick and Morty shows?",
        "relevant APIs": [],
        "query_id": 153
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        {
                            "uid": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prayers": [
                        {
                            "day": "str",
                            "prayer": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide some characters from the Star Trek universe and the rosary prayer schedule?",
        "relevant APIs": [],
        "query_id": 154
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name using a fuzzy search.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search for something on Wikipedia and get shows with similar names from TVmaze?",
        "relevant APIs": [],
        "query_id": 155
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you parse the content of a Wikipedia page?",
        "relevant APIs": [
            "parse_page"
        ],
        "query_id": 156
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        {
                            "uid": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prayers": [
                        {
                            "day": "str",
                            "prayer": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you give me a list of Star Trek characters and share the yearly schedule of prayers?",
        "relevant APIs": [],
        "query_id": 157
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "What is the TV schedule for channel CT2 on August 4, 2024, and can you list journals related to health?",
        "relevant APIs": [
            "get_tv_schedule",
            "list_journals"
        ],
        "query_id": 158
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parser a wiki page and return its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the content of a Wikipedia page and detailed information about a show?",
        "relevant APIs": [],
        "query_id": 159
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "application/json"
                }
            }
        ],
        "query": "Can you fetch the latest reports and provide me with the TV schedule for channel ct24 on August 4, 2024, in JSON format?",
        "relevant APIs": [],
        "query_id": 160
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parser a wiki page and return its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you retrieve a Wikipedia page and provide information on a specific show?",
        "relevant APIs": [],
        "query_id": 161
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles starting with 'The New York'? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 162
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_full_by_id",
                "api_description": "Get complete anime resource data by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide some details about an anime and also find information about a specific TV show?",
        "relevant APIs": [],
        "query_id": 163
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "hourly": {
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": "Binary content of a PNG image"
            }
        ],
        "query": "What is the current temperature and wind speed forecast at a specific location in Celsius and km/h? Additionally, provide a graphical weather forecast image for where I go to college.",
        "relevant APIs": [],
        "query_id": 164
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_latest_measurements_for_sensor",
                "api_description": "Get the 10000 latest measurements for a sensor.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    },
                    {
                        "name": "sensor_id",
                        "type": "STRING",
                        "description": "The ID of the sensor you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "from_date",
                        "type": "STRING",
                        "description": "Beginning date of measurement data."
                    },
                    {
                        "name": "to_date",
                        "type": "STRING",
                        "description": "End date of measurement data."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "measurements": "list of measurements"
                }
            }
        ],
        "query": "Can you provide the weather forecast for where my friend lives and also give me the latest 10000 measurements from a temperature sensor in a local senseBox?",
        "relevant APIs": [],
        "query_id": 165
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_all_boxes",
                "api_description": "Get all senseBoxes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the search results.",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boxes": "list of senseBoxes"
                }
            }
        ],
        "query": "What's the weather forecast for my favorite food city? Additionally, provide a list of senseBoxes located around the area.",
        "relevant APIs": [],
        "query_id": 166
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "awc",
                "api_name": "get_airsigmet",
                "api_description": "Fetches AIRMETs and SIGMETs in decoded format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Product type",
                        "default": null
                    },
                    {
                        "name": "hazard",
                        "type": "STRING",
                        "description": "Hazard type",
                        "default": null
                    },
                    {
                        "name": "level",
                        "type": "NUMBER",
                        "description": "The level +-3000' to search",
                        "default": 0
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specify the date",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "response": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_statistics_descriptive",
                "api_description": "Compute basic descriptive statistics over specified time windows.",
                "required_parameters": [
                    {
                        "name": "box_id",
                        "type": "STRING",
                        "description": "Comma-separated list of senseBox IDs."
                    },
                    {
                        "name": "phenomenon",
                        "type": "STRING",
                        "description": "The name of the phenomenon you want to download the data for."
                    },
                    {
                        "name": "from_date",
                        "type": "STRING",
                        "description": "Beginning date of measurement data."
                    },
                    {
                        "name": "to_date",
                        "type": "STRING",
                        "description": "End date of measurement data."
                    },
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "Statistical operation to perform (e.g., 'mean', 'min', 'max')."
                    },
                    {
                        "name": "window",
                        "type": "STRING",
                        "description": "Time window for statistical aggregation."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format in which data should be returned.",
                        "default": "csv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "response": "str"
                }
            }
        ],
        "query": "Can you check if there were any significant aviation weather hazards on my birthday and also provide descriptive statistics on temperature for a selected region?",
        "relevant APIs": [],
        "query_id": 167
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            },
            {
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "response_format": "Binary content of a PNG image",
                "category_name": "Weather"
            }
        ],
        "query": "Can you provide the latest METAR report for my local airport? Additionally, I'd like a graphical weather forecast for my vacation spot.",
        "relevant APIs": [],
        "query_id": 168
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_isigmet",
                "api_description": "Fetch international SIGMETs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "hazard",
                        "type": "STRING",
                        "description": "Hazard type",
                        "default": null
                    },
                    {
                        "name": "level",
                        "type": "NUMBER",
                        "description": "The level +-3000' to search",
                        "default": 0
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specify the date",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            },
            {
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "response_format": {
                    "format": "json or xml",
                    "content": "Weather forecast data"
                },
                "category_name": "Weather"
            }
        ],
        "query": "I need to check for any international SIGMETs related to turbulence. Could you also provide a machine-readable forecast for where my mom was born?",
        "relevant APIs": [],
        "query_id": 169
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_boxes",
                "api_description": "Get information about a single senseBox.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format the sensor data is returned in.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "_id": "57000b8745fd40c8196ad04c"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dataseries": []
                }
            }
        ],
        "query": "Can you provide the latest weather measurements from a specific senseBox, and also give me a weather forecast for the location of my condo?",
        "relevant APIs": [],
        "query_id": 170
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "string",
                    "response": "string"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "utc_offset_seconds": "int",
                    "timezone": "str",
                    "timezone_abbreviation": "str",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    },
                    "hourly_units": {
                        "temperature_2m": "str"
                    }
                }
            }
        ],
        "query": "What is the current METAR weather observation at my local airport? Additionally, can I get a detailed weather forecast for the next week for New York City where latitude=40.730610 and longitude=-73.935242?",
        "relevant APIs": [],
        "query_id": 171
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            },
            {
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "response_format": "Binary content of a PNG image",
                "category_name": "Weather"
            }
        ],
        "query": "Can you provide the latest METAR report for my local airport? Additionally, I'd like a graphical weather forecast for the coordinates 38.97\u00b0N, 94.72\u00b0W.",
        "relevant APIs": [],
        "query_id": 172
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_all_boxes",
                "api_description": "Get all senseBoxes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the search results.",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boxes": "list of senseBoxes"
                }
            }
        ],
        "query": "What's the weather forecast for my favorite food city? Additionally, provide a list of senseBoxes located around the area I live.",
        "relevant APIs": [],
        "query_id": 173
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "daily": {
                        "temperature_2m_max": "list",
                        "temperature_2m_min": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dataseries": [
                        {
                            "timepoint": "int",
                            "cloudcover": "int",
                            "seeing": "int",
                            "transparency": "int",
                            "rh2m": "int",
                            "wind10m": {
                                "direction": "string",
                                "speed": "int"
                            },
                            "temp2m": "int",
                            "prec_type": "string"
                        }
                    ]
                }
            }
        ],
        "query": "What is the weather forecast for the next 7 days for a given location with maximum and minimum temperatures? Also, retrieve machine-readable weather data including wind and temperature for the location where my friend tom lives.",
        "relevant APIs": [],
        "query_id": 174
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_latest_measurements_of_sense_box",
                "api_description": "Get the latest measurements of all sensors of the specified senseBox.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of measurements to be retrieved for every sensor.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I want to know the most recent environmental measurements for a senseBox. Also, can you provide me with a graphical weather forecast for a location at the latitude and longitude of my house?",
        "relevant APIs": [],
        "query_id": 175
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "string",
                    "response": "string"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "utc_offset_seconds": "int",
                    "timezone": "str",
                    "timezone_abbreviation": "str",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    },
                    "hourly_units": {
                        "temperature_2m": "str"
                    }
                }
            }
        ],
        "query": "What is the current METAR weather observation at my local airport? Additionally, can I get a detailed weather forecast for the next week for where I live?",
        "relevant APIs": [],
        "query_id": 176
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_all_boxes",
                "api_description": "Get all senseBoxes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the search results.",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boxes": "list of senseBoxes"
                }
            }
        ],
        "query": "What's the weather forecast for New York City today with latitude=40.7128, longitude=74.0060? Additionally, provide a list of senseBoxes located around the area I live.",
        "relevant APIs": [],
        "query_id": 177
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            },
            {
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "response_format": "Binary content of a PNG image",
                "category_name": "Weather"
            }
        ],
        "query": "Can you provide the latest METAR report for the Kansas City airport? Additionally, I'd like a graphical weather forecast for my vacation spot.",
        "relevant APIs": [],
        "query_id": 178
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "string",
                    "response": "string"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "utc_offset_seconds": "int",
                    "timezone": "str",
                    "timezone_abbreviation": "str",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    },
                    "hourly_units": {
                        "temperature_2m": "str"
                    }
                }
            }
        ],
        "query": "What is the current METAR weather observation at JFK airport? Additionally, can I get a detailed weather forecast for the next week for where I live?",
        "relevant APIs": [],
        "query_id": 179
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "str",
                            "country": "str",
                            "region": "str",
                            "slug": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am planning a trip and want to visit new places. Can you suggest a place to visit? Additionally, I would like to know about some whisky distilleries.",
        "relevant APIs": [],
        "query_id": 180
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_by_ingredient",
                "api_description": "Search by ingredient.",
                "required_parameters": [
                    {
                        "name": "ingredient",
                        "type": "STRING",
                        "description": "The ingredient to filter cocktails by.",
                        "default": "Gin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "slug": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Find me cocktails that can be made using Gin and also list some places worldwide.",
        "relevant APIs": [],
        "query_id": 181
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "brewery_type": "string",
                    "city": "string",
                    "state": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "code": "string",
                            "product_name": "string",
                            "categories_tags_en": [
                                "string"
                            ],
                            "nutrition_grades": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest a place that I can visit? Also, find some healthy food products with a good nutrition grade.",
        "relevant APIs": [],
        "query_id": 182
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "auction_data_slug",
                "api_description": "List only aggregated data for online auction {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for an auction (e.g., 'catawiki').",
                        "default": "catawiki"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "auctions_data": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "I need to find the nutritional details of Nutella using its barcode 3017624010701 and at the same time, could you provide me with data on whisky auctions?",
        "relevant APIs": [],
        "query_id": 183
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            }
        ],
        "query": "Can you tell me about a cocktail and also fetch the nutritional information for a product with barcode '3017624010701'?",
        "relevant APIs": [],
        "query_id": 184
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "List cocktails and suggest a random brewery I could visit.",
        "relevant APIs": [],
        "query_id": 185
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "string",
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "whiskies_count": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide details about a cocktail recipe and get information about the Ardbeg distillery?",
        "relevant APIs": [],
        "query_id": 186
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            }
        ],
        "query": "Please list some cocktails and search for products.",
        "relevant APIs": [],
        "query_id": 187
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "string",
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "whiskies_count": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide details about the Margarita cocktail recipe and get information about a distillery?",
        "relevant APIs": [],
        "query_id": 188
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "str",
                            "name": "str",
                            "country": "str",
                            "region": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find breweries that specialize in ales? I'm also interested in detailed data for a whisky distillery.",
        "relevant APIs": [],
        "query_id": 189
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "Can you find products with a nutrition grade of 'C' and also provide a list of all the available distilleries' main information?",
        "relevant APIs": [],
        "query_id": 190
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_by_ingredient",
                "api_description": "Search by ingredient.",
                "required_parameters": [
                    {
                        "name": "ingredient",
                        "type": "STRING",
                        "description": "The ingredient to filter cocktails by.",
                        "default": "Gin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "slug": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Find me cocktails that can be made using an ingredient and also list some places worldwide for whisky.",
        "relevant APIs": [],
        "query_id": 191
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "auction_data_slug",
                "api_description": "List only aggregated data for online auction {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for an auction (e.g., 'catawiki').",
                        "default": "catawiki"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "auctions_data": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "I need to find the nutritional details of a product using its barcode and at the same time, could you provide me with data on whisky auctions from Catawiki?",
        "relevant APIs": [],
        "query_id": 192
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "List cocktails starting with the letter 'M' and suggest a brewery.",
        "relevant APIs": [],
        "query_id": 193
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "Can you find cocktails for me and that are popular amongst breweries?",
        "relevant APIs": [],
        "query_id": 194
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "Can you find products and also provide a list of all the available distilleries' main information?",
        "relevant APIs": [],
        "query_id": 195
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            }
        ],
        "query": "Please list all cocktails starting with the letter 'C' and search for products.",
        "relevant APIs": [],
        "query_id": 196
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            }
        ],
        "query": "Can you tell me about a cocktail and also fetch the nutritional information for a product?",
        "relevant APIs": [],
        "query_id": 197
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "brewery_type": "string",
                    "city": "string",
                    "state": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "code": "string",
                            "product_name": "string",
                            "categories_tags_en": [
                                "string"
                            ],
                            "nutrition_grades": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest a place that I can visit? Also, find some food products.",
        "relevant APIs": [],
        "query_id": 198
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "string",
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "whiskies_count": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide details about a cocktail recipe and get information about a distillery?",
        "relevant APIs": [],
        "query_id": 199
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "str",
                            "name": "str",
                            "country": "str",
                            "region": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find breweries that specialize in something? I'm also interested in detailed data for a whisky distillery, particularly Ardbeg.",
        "relevant APIs": [],
        "query_id": 200
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "Can you find orange juice products and also provide a list of all the available distilleries' main information?",
        "relevant APIs": [],
        "query_id": 201
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "Can you find cocktails for me that are popular along with breweries that serve ale?",
        "relevant APIs": [],
        "query_id": 202
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "List cocktails starting with the letter 'A' and suggest a random brewery I could visit.",
        "relevant APIs": [],
        "query_id": 203
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "brewery_type": "string",
                    "city": "string",
                    "state": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "code": "string",
                            "product_name": "string",
                            "categories_tags_en": [
                                "string"
                            ],
                            "nutrition_grades": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest a random brewery in the United States that I can visit? Also, find some food products.",
        "relevant APIs": [],
        "query_id": 204
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "str",
                            "country": "str",
                            "region": "str",
                            "slug": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am planning a trip and want to visit new places. Can you suggest a place to visit? Additionally, I would like to know about some places.",
        "relevant APIs": [],
        "query_id": 205
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "Can you find margarita cocktail recipes that are popular along with breweries that serve ale?",
        "relevant APIs": [],
        "query_id": 206
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "auction_data_slug",
                "api_description": "List only aggregated data for online auction {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for an auction (e.g., 'catawiki').",
                        "default": "catawiki"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "auctions_data": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "I need to find the nutritional details of a product using its barcode and at the same time, could you provide me with data on whisky auctions?",
        "relevant APIs": [],
        "query_id": 207
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            }
        ],
        "query": "Can you tell me about a cocktail called 'Margarita' and also fetch the nutritional information for a product?",
        "relevant APIs": [],
        "query_id": 208
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "List some cocktails and suggest a place I could visit.",
        "relevant APIs": [],
        "query_id": 209
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            }
        ],
        "query": "Please list all cocktails and search for organic products with a nutrition grade of 'A'.",
        "relevant APIs": [],
        "query_id": 210
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_by_ingredient",
                "api_description": "Search by ingredient.",
                "required_parameters": [
                    {
                        "name": "ingredient",
                        "type": "STRING",
                        "description": "The ingredient to filter cocktails by.",
                        "default": "Gin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "slug": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Find me cocktails that can be made using an ingredient and also list all the distilleries worldwide.",
        "relevant APIs": [],
        "query_id": 211
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "str",
                            "country": "str",
                            "region": "str",
                            "slug": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am planning a trip and want to visit new places. Can you suggest a random brewery to visit? Additionally, I would like to know about some places.",
        "relevant APIs": [],
        "query_id": 212
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "str",
                            "name": "str",
                            "country": "str",
                            "region": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find breweries that specialize in something? I'm also interested in detailed data for a whisky distillery.",
        "relevant APIs": [],
        "query_id": 213
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "Can you find cocktail for margarita recipes popular along with breweries that serve something?",
        "relevant APIs": [],
        "query_id": 214
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "images_by_breed",
                "api_description": "Retrieve all images of a specific breed.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed of dog images to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": [
                        "string"
                    ],
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_object_details",
                "api_description": "Returns detailed information of an object.",
                "required_parameters": [
                    {
                        "name": "objectID",
                        "type": "INTEGER",
                        "description": "The unique Object ID for the object."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "objectID": "int",
                    "isHighlight": "boolean",
                    "accessionNumber": "string",
                    "accessionYear": "string",
                    "isPublicDomain": "boolean",
                    "primaryImage": "string",
                    "primaryImageSmall": "string",
                    "additionalImages": [
                        "string"
                    ],
                    "constituents": [
                        {
                            "role": "string",
                            "name": "string"
                        }
                    ],
                    "department": "string",
                    "objectName": "string",
                    "title": "string",
                    "culture": "string",
                    "metadataDate": "string",
                    "repository": "string",
                    "objectURL": "string",
                    "tags": [
                        {
                            "term": "string",
                            "aic:tag_id": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide images of a specific breed of dog and also give me detailed info about a specific artwork from the Met Museum collection with ID 1?",
        "relevant APIs": [],
        "query_id": 215
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compresses an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "str"
                }
            }
        ],
        "query": "Can you retrive a random image and then modify it using online image optimization",
        "relevant APIs": [],
        "query_id": 216
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents_search",
                "api_description": "Search for artists or agents in the Art Institute of Chicago database.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "john"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Spawn an avatar in a custom style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Find details about artists or agents related to Picasso in the Art Institute of Chicago, and generate an avatar without flipping it.",
        "relevant APIs": [],
        "query_id": 217
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artwork_by_id",
                "api_description": "Retrieve artwork details by ID from the Art Institute of Chicago.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "default": 4
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {}
                },
                "optional_parameters": []
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generate a custom avatar with optional parameters like hair, flip and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Provide the details of an artwork from the Art Institute of Chicago, and create a 'lorelei' style avatar in 'png' format with a 'short01' hair style.",
        "relevant APIs": [],
        "query_id": 218
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Searches for objects that match the query.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            }
        ],
        "query": "Find me a random dog image and search the Met Museum for artworks with images available.",
        "relevant APIs": [],
        "query_id": 219
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Searches for objects that match the query.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            }
        ],
        "query": "Find me a random dog image and search for artworks related to dogs.",
        "relevant APIs": [],
        "query_id": 220
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object",
                        "properties": {
                            "breed_name": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "Can you generate a unique image labeled as 'robotic canine'?",
        "relevant APIs": [],
        "query_id": 221
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Retrieve a list of all departments in the Met's collection.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compress an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "string",
                    "src": "string",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "string"
                }
            }
        ],
        "query": "I wish to know all the departments available in the collection. Additionally, I have a URL of a painting from this collection that I need to compress.",
        "relevant APIs": [],
        "query_id": 222
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "images_by_breed",
                "api_description": "Retrieve all images of a specific breed.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed of dog images to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": [
                        "string"
                    ],
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_object_details",
                "api_description": "Returns detailed information of an object.",
                "required_parameters": [
                    {
                        "name": "objectID",
                        "type": "INTEGER",
                        "description": "The unique Object ID for the object."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "objectID": "int",
                    "isHighlight": "boolean",
                    "accessionNumber": "string",
                    "accessionYear": "string",
                    "isPublicDomain": "boolean",
                    "primaryImage": "string",
                    "primaryImageSmall": "string",
                    "additionalImages": [
                        "string"
                    ],
                    "constituents": [
                        {
                            "role": "string",
                            "name": "string"
                        }
                    ],
                    "department": "string",
                    "objectName": "string",
                    "title": "string",
                    "culture": "string",
                    "metadataDate": "string",
                    "repository": "string",
                    "objectURL": "string",
                    "tags": [
                        {
                            "term": "string",
                            "aic:tag_id": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide images of a specific breed of dog and also give me detailed info about a specific artwork",
        "relevant APIs": [],
        "query_id": 223
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary/str/json"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "status": "success"
                }
            }
        ],
        "query": "Can you generate an avatar in a certain format? Also, get a random image of a dog.",
        "relevant APIs": [],
        "query_id": 224
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Provide the details of the artwork with ID 12345 from the Art Institute of Chicago, and create an avatar in 'png' format with a 'short01' hair style.",
        "relevant APIs": [],
        "query_id": 225
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find artworks related to Van Gogh in the Art Institute of Chicago's collection, and generate an avatar using a specific style?",
        "relevant APIs": [],
        "query_id": 226
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object"
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Returns a list of all departments.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide me with a list of all breeds and also a list of all departments?",
        "relevant APIs": [],
        "query_id": 227
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents_search",
                "api_description": "Search for artists or agents in the Art Institute of Chicago database.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "john"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Spawn an avatar in a custom style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Find details about artists or agents in the Art Institute of Chicago, and generate a 'lorelei' styled avatar without flipping it.",
        "relevant APIs": [],
        "query_id": 228
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Provide the details of an artwork from the Art Institute of Chicago, and create an avatar with a specified format and hair style.",
        "relevant APIs": [],
        "query_id": 229
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object",
                        "properties": {
                            "breed_name": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "What are all the breeds of dogs available, and can you generate a unique image of a dog labeled as 'robotic canine' using Robohash without specifying the format or size?",
        "relevant APIs": [],
        "query_id": 230
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Retrieve a list of all departments in the Met's collection.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compress an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "string",
                    "src": "string",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "string"
                }
            }
        ],
        "query": "I wish to know all the departments available in the Met's collection. Additionally, I have a URL to an image of a painting from this collection that I need to compress.",
        "relevant APIs": [],
        "query_id": 231
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks in the Art Institute of Chicago data.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find sculptures in the Met collection? Also, I'd like to see artworks related to a specific person in the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 232
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find artworks related to Van Gogh in a museum's collection, and generate an avatar using a specific style with the seed 'ArtLover'?",
        "relevant APIs": [],
        "query_id": 233
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks in the Art Institute of Chicago data.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find sculptures made of marble in the Met collection? Also, I'd like to see artworks related to Van Gogh in the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 234
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Retrieve an artwork and generate an avatar from available options.",
        "relevant APIs": [],
        "query_id": 235
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary/str/json"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "status": "success"
                }
            }
        ],
        "query": "Can you generate a avatar with a seed in JPG format? Also, get a random image of a dog.",
        "relevant APIs": [],
        "query_id": 236
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents_search",
                "api_description": "Search for artists or agents in the Art Institute of Chicago database.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "john"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Spawn an avatar in a custom style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Find details about artists or agents in the Art Institute of Chicago, and generate an avatar without flipping it.",
        "relevant APIs": [],
        "query_id": 237
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Provide the details of the artwork with ID 12345 from the Art Institute of Chicago, and create a 'lorelei' style avatar.",
        "relevant APIs": [],
        "query_id": 238
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "images_by_breed",
                "api_description": "Retrieve all images of a specific breed.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed of dog images to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": [
                        "string"
                    ],
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_object_details",
                "api_description": "Returns detailed information of an object.",
                "required_parameters": [
                    {
                        "name": "objectID",
                        "type": "INTEGER",
                        "description": "The unique Object ID for the object."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "objectID": "int",
                    "isHighlight": "boolean",
                    "accessionNumber": "string",
                    "accessionYear": "string",
                    "isPublicDomain": "boolean",
                    "primaryImage": "string",
                    "primaryImageSmall": "string",
                    "additionalImages": [
                        "string"
                    ],
                    "constituents": [
                        {
                            "role": "string",
                            "name": "string"
                        }
                    ],
                    "department": "string",
                    "objectName": "string",
                    "title": "string",
                    "culture": "string",
                    "metadataDate": "string",
                    "repository": "string",
                    "objectURL": "string",
                    "tags": [
                        {
                            "term": "string",
                            "aic:tag_id": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide images of a dog breed and also give me detailed info about an artwork?",
        "relevant APIs": [],
        "query_id": 239
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object",
                        "properties": {
                            "breed_name": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "Can you provide a list of all available breeds, and generate a unique image with a specific breed label?",
        "relevant APIs": [],
        "query_id": 240
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find artworks related to a famous artist in a museum's collection, and generate an avatar using a specific style?",
        "relevant APIs": [],
        "query_id": 241
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "jobicy",
                "api_name": "get_remote_jobs",
                "api_description": "Retrieve the latest remote job listings with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of listings to return.",
                        "default": "50"
                    },
                    {
                        "name": "geo",
                        "type": "STRING",
                        "description": "Filter by job region.",
                        "default": "all regions"
                    },
                    {
                        "name": "industry",
                        "type": "STRING",
                        "description": "Filter by job category.",
                        "default": "all categories"
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "Search by job title and description.",
                        "default": "all jobs"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "jobs": [
                        {
                            "title": "string",
                            "company": "string",
                            "location": "string",
                            "date_posted": "string",
                            "description": "string",
                            "url": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "jobicy",
                "api_name": "get_rss_feed",
                "api_description": "Retrieve job listings in RSS format with optional filters.",
                "required_parameters": [
                    {
                        "name": "feed",
                        "type": "STRING",
                        "description": "Feed type.",
                        "default": "job_feed"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "job_categories",
                        "type": "STRING",
                        "description": "Filter by job category.",
                        "default": ""
                    },
                    {
                        "name": "job_types",
                        "type": "STRING",
                        "description": "Filter by job type.",
                        "default": ""
                    },
                    {
                        "name": "search_keywords",
                        "type": "STRING",
                        "description": "Search by job title and description.",
                        "default": ""
                    },
                    {
                        "name": "search_region",
                        "type": "STRING",
                        "description": "Filter by job region.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "RSS Feed Data"
            },
            {
                "category_name": "Jobs",
                "tool_name": "jobicy",
                "api_name": "get_new_jobs_xml",
                "api_description": "Retrieve XML formatted data of the most recent remote jobs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "XML Data"
            }
        ],
        "query": "I want to find the latest remote job listings in the USA in the marketing industry related to my best coding language. Additionally, can you provide the RSS feed for full-time jobs in the support category in the USA, and retrieve the most recent remote jobs in XML format?",
        "relevant APIs": [],
        "query_id": 242
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "release_group_browse",
                "api_description": "Browse release groups by artist MBID.",
                "required_parameters": [
                    {
                        "name": "artist_mbid",
                        "type": "STRING",
                        "description": "The MBID for the artist.",
                        "default": "b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter release groups by type (album, single, etc.).",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter releases by status (official, etc.).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "release-groups": [
                        {
                            "title": "str",
                            "primary-type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_hot_tracks",
                "api_description": "Fetch the list of hot tracks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "List the latest album releases from my childhood favorite artist and provide me with the current hot tracks.",
        "relevant APIs": [],
        "query_id": 243
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_stories",
                "api_description": "Fetch a number of random genre stories.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of stories to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "release_group_browse",
                "api_description": "Browse release groups by artist MBID.",
                "required_parameters": [
                    {
                        "name": "artist_mbid",
                        "type": "STRING",
                        "description": "The MBID for the artist.",
                        "default": "b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter release groups by type (album, single, etc.).",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter releases by status (official, etc.).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "release-groups": [
                        {
                            "id": "str",
                            "title": "str",
                            "primary-type": "str",
                            "secondary-types": [
                                "str"
                            ],
                            "first-release-date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me some unique music genre stories and find albums or singles by my grandma's favorite British band?",
        "relevant APIs": [],
        "query_id": 244
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "name": "str",
                            "mbid": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user.",
                "required_parameters": [
                    "uHandle"
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you search for artists similar to 'Adele' and also fetch the tracks from my friend's Openwhyd playlist?",
        "relevant APIs": [],
        "query_id": 245
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "name": "str",
                            "mbid": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user.",
                "required_parameters": [
                    "uHandle"
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you search for artists similar to the ones on the radio and also fetch the tracks from the Openwhyd user 'john_doe's playlist?",
        "relevant APIs": [],
        "query_id": 246
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_stories",
                "api_description": "Fetch a number of random genre stories",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of stories to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "string"
                ]
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user",
                "required_parameters": [
                    "uHandle"
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "track": "str",
                        "artist": "str",
                        "playlistId": "int"
                    }
                ]
            }
        ],
        "query": "I am curious to read some random stories about music genres and also see what tracks my first follower has recently posted.",
        "relevant APIs": [],
        "query_id": 247
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "name": "str",
                            "mbid": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user.",
                "required_parameters": [
                    "uHandle"
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you search for artists similar to the ones on the radio and also fetch the tracks from my friend's Openwhyd playlist?",
        "relevant APIs": [],
        "query_id": 248
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_genres",
                "api_description": "Fetch a number of random music genres.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of genres to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "country": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest some random music genres and search for artist my favorite artist?",
        "relevant APIs": [],
        "query_id": 249
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geojs",
                "api_name": "get_ptr_record",
                "api_description": "Returns PTR (pointer record) information about an IP.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ptr": "string"
                }
            }
        ],
        "query": "Can you tell me which country my IP address belongs to? Additionally, what is the PTR record information for this IP address?",
        "relevant APIs": [],
        "query_id": 250
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "Can you provide the address for a location at my latitude and longitude? Furthermore, what is the city, state, and country for ZIP code 30301?",
        "relevant APIs": [],
        "query_id": 251
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "What country am I currently in based on my IP address, and can you convert the British National Grid coordinates 326897, 673919 to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 252
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "What country am I currently in based on my IP address, and can you convert the British National Grid coordinates of my house to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 253
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geojs",
                "api_name": "get_geo_info",
                "api_description": "Contains all available geographical information about an IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "Specific IP address to lookup."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string",
                    "country_code": "string",
                    "latitude": "string",
                    "longitude": "string",
                    "organization": "string"
                }
            }
        ],
        "query": "What country am I currently in based on my IP? Furthermore, what other geographical information can you provide for my IP?",
        "relevant APIs": [],
        "query_id": 254
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional parameters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you find the address for my home area in Paris and provide detailed information about the postal code '75007' in France?",
        "relevant APIs": [],
        "query_id": 255
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            }
        ],
        "query": "I am at a specific latitude and longitude; can you tell me what the nearest address is? Also, can you identify the country of this IP address '9.9.9.9'?",
        "relevant APIs": [],
        "query_id": 256
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "What is the address associated with the name 'Eiffel Tower'? Also, what is the city, state, and country of the ZIP code the ZIP code I searched earlier?",
        "relevant APIs": [],
        "query_id": 257
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": {
                        "country": "string",
                        "region": "string"
                    }
                }
            }
        ],
        "query": "What country is associated with the my IP address? Also, can you provide details about my postcode?",
        "relevant APIs": [],
        "query_id": 258
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "What is the address of my geographic coordinates? Also, list all postal codes in the city of my hometown.",
        "relevant APIs": [],
        "query_id": 259
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "What is the address associated for my favorite tourist attraction? Also, what is the city, state, and country of the ZIP code 10001?",
        "relevant APIs": [],
        "query_id": 260
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "What country am I currently in based on the IP address '8.8.8.8', and can you convert the British National Grid coordinates of my house to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 261
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "Can you tell me which country the IP address 8.8.8.8 belongs to and also convert the coordinates of my school from easting and northing to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 262
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": {
                        "country": "string",
                        "region": "string"
                    }
                }
            }
        ],
        "query": "What country is associated with the IP address 8.8.8.8? Also, can you provide details about my postcode?",
        "relevant APIs": [],
        "query_id": 263
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "Can you provide the address for a location at my latitude and longitude? Furthermore, what is the city, state, and country for my ZIP code?",
        "relevant APIs": [],
        "query_id": 264
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": {
                        "country": "string",
                        "region": "string"
                    }
                }
            }
        ],
        "query": "What country is associated with the my IP address? Also, can you provide details about the postcode SW1A1AA?",
        "relevant APIs": [],
        "query_id": 265
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "Can you tell me which country my IP address belongs to and also convert the coordinates 651409, 313177 from easting and northing to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 266
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            }
        ],
        "query": "I am at a specific latitude and longitude lat=48.357, lon=2.37; can you tell me what the nearest address is? Also, can you identify the country of my IP address",
        "relevant APIs": [],
        "query_id": 267
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "What is the address of my geographic coordinates? Also, list all postal codes in the city of Los Angeles, California.",
        "relevant APIs": [],
        "query_id": 268
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional parameters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you find the address for my home area in Paris and provide detailed information about my French postal code?",
        "relevant APIs": [],
        "query_id": 269
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            }
        ],
        "query": "Can you find which country the IP address 8.8.8.8 belongs to? Also, what is the elevation at the coordinates of my wife's hometown using the 'srtm' dataset with bilinear interpolation?",
        "relevant APIs": [],
        "query_id": 270
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "What is the address associated for my favorite tourist attraction? Also, what is the city, state, and country of the ZIP code the ZIP code I searched earlier?",
        "relevant APIs": [],
        "query_id": 271
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_data_sources_info",
                "api_description": "Retrieve information about the data sources used by the Country.is API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cloudflare": {
                        "enabled": "bool"
                    },
                    "maxmind": {
                        "enabled": "bool",
                        "build": "string"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geojs",
                "api_name": "get_country",
                "api_description": "Returns the country information about an IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "Specific IP address to lookup."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "country": "string",
                    "country_3": "string",
                    "ip": "string",
                    "name": "string"
                }
            }
        ],
        "query": "Could you provide all available information about the data sources country.is uses? Also, please find the country information for my IP address.",
        "relevant APIs": [],
        "query_id": 272
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geoplugin",
                "api_name": "currency_converter",
                "api_description": "Converts an amount from one currency to another using real-time rates.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The currency code of the base currency.",
                        "default": "USD"
                    },
                    {
                        "name": "amount",
                        "type": "FLOAT",
                        "description": "The amount in base currency to convert.",
                        "default": 1.0
                    },
                    {
                        "name": "target_currency",
                        "type": "STRING",
                        "description": "The currency code to convert the base currency to.",
                        "default": "EUR"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base_currency": "str",
                    "amount": "float",
                    "local_currency": "str",
                    "local_currency_symbol": "str",
                    "exchange_rate": "float",
                    "converted_amount": "float",
                    "location": {
                        "city": "str",
                        "country": "str"
                    }
                }
            }
        ],
        "query": "Given the my IP address can you find out its country and also provide a currency conversion from USD to the local currency?",
        "relevant APIs": [],
        "query_id": 273
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "city": "string",
                    "region": "string",
                    "country": "string",
                    "latitude": "number",
                    "longitude": "number"
                }
            }
        ],
        "query": "I have my IP address. What country does it belong to, and can you provide more details about its geographical location?",
        "relevant APIs": [],
        "query_id": 274
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_data_sources_info",
                "api_description": "Retrieve information about the data sources used by the Country.is API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cloudflare": {
                        "enabled": "bool"
                    },
                    "maxmind": {
                        "enabled": "bool",
                        "build": "str"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "I'd like to know what data sources are used by the Country.is API and can you also convert easting and northing coordinates of my city to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 275
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            }
        ],
        "query": "Can you find which country my IP address belongs to? Also, what is the elevation at coordinates 37.7749,-122.4194 using the 'srtm' dataset with bilinear interpolation?",
        "relevant APIs": [],
        "query_id": 276
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional parameters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you find the address for 'Champ de Mars, Paris' and provide detailed information about my French postal code?",
        "relevant APIs": [],
        "query_id": 277
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            }
        ],
        "query": "I am at a specific latitude and longitude; can you tell me what the nearest address is? Also, can you identify the country of my IP address",
        "relevant APIs": [],
        "query_id": 278
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            }
        ],
        "query": "If I give you my IP address, can you find out the country and give a greeting in the local language?",
        "relevant APIs": [],
        "query_id": 279
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "Can you tell me which country my IP address belongs to and also convert the coordinates of my school from easting and northing to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 280
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "What is the address of the geographic coordinates latitude 34.0522 and longitude -118.2437? Also, list all postal codes in the city of my hometown.",
        "relevant APIs": [],
        "query_id": 281
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "Can you provide the address for a location at latitude 48.8588443 and longitude 2.294351? Furthermore, what is the city, state, and country for my ZIP code?",
        "relevant APIs": [],
        "query_id": 282
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            }
        ],
        "query": "Can you find which country my IP address belongs to? Also, what is the elevation at the coordinates of my wife's hometown using the 'srtm' dataset with bilinear interpolation?",
        "relevant APIs": [],
        "query_id": 283
    },
    {
        "api_list": [
            {
                "tool_name": "cheapshark",
                "api_name": "get_alerts",
                "api_description": "Retrieve all existing alerts.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "The key parameter from the manage link received via email.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            },
            {
                "tool_name": "scryfall",
                "api_name": "card_random",
                "api_description": "Retrieve a random card.",
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "A fulltext search query to filter random cards.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "I'd like to get a list of all my game price alerts from CheapShark. In addition, can you show me a random card?",
        "relevant APIs": [],
        "query_id": 284
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "get_hot_items",
                "api_description": "Retrieve the list of most active items on BGG.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of hot items (e.g. boardgame)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "rank": "int",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "sorted_games",
                "api_description": "Sort games by release date, alphabetical or relevance.",
                "required_parameters": [
                    {
                        "name": "sort-by",
                        "type": "STRING",
                        "description": "Sort criteria."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "Can you tell me what the hottest board games are right now on BGG? Additionally, what are the most popular free-to-play games?",
        "relevant APIs": [],
        "query_id": 285
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a random Chuck Norris joke and give me details about Pokemon 19 Rattata?",
        "relevant APIs": [],
        "query_id": 286
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_category_entries",
                "api_description": "Retrieves all entries in a given category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category to retrieve entries from."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "Can you list some free-to-play shooter games and also find entries in the Hyrule Compendium?",
        "relevant APIs": [],
        "query_id": 287
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_ability",
                "api_description": "Get details about a specific Pok\u00e9mon ability by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "What categories are available for Chuck Norris jokes? Also, can you provide me with information on the Pok\u00e9mon ability 'Overgrow'?",
        "relevant APIs": [],
        "query_id": 288
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "search_items",
                "api_description": "Search for items by name from the BGG database.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of items to return."
                    },
                    {
                        "name": "exact",
                        "type": "INTEGER",
                        "description": "Exact match for search."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "type": "str",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "I'm looking for a board game and also want to explore some free-to-play games. Can you provide me with information on both?",
        "relevant APIs": [],
        "query_id": 289
    },
    {
        "api_list": [
            {
                "tool_name": "boardgamesgeek",
                "api_name": "get_user_info",
                "api_description": "Retrieve information about a user by username from BGG.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The username."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "buddies",
                        "type": "INTEGER",
                        "description": "Include buddies information."
                    },
                    {
                        "name": "guilds",
                        "type": "INTEGER",
                        "description": "Include guilds information."
                    },
                    {
                        "name": "hot",
                        "type": "INTEGER",
                        "description": "Include the user's hot 10 list."
                    },
                    {
                        "name": "top",
                        "type": "INTEGER",
                        "description": "Include the user's top 10 list."
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain for hot and top lists."
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "This endpoint serves to generate insults from the API.",
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "Can you provide some details about the user 'eekspider' on BoardGameGeek and also say something funny?",
        "query_id": 290
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "head": "str",
                            "image": "str",
                            "name": "str",
                            "release": {
                                "au": "str",
                                "eu": "str",
                                "jp": "str",
                                "na": "str"
                            },
                            "tail": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "gamerpower",
                "api_name": "get_all_giveaways",
                "api_description": "Fetch all ongoing giveaways.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "List of giveaway objects"
            }
        ],
        "query": "I'm a fan of games and want to know if there are any amiibos available. Also, are there any ongoing giveaways for free games or in-game loot that I could participate in?",
        "relevant APIs": [],
        "query_id": 291
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_ability",
                "api_description": "Get details about a specific Pok\u00e9mon ability by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me the available categories of jokes? Also, can you provide me with information on the ability of Pokemon 19 Rattata?",
        "relevant APIs": [],
        "query_id": 292
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_all_resources",
                "api_description": "Get list of all available resources for a specified DnD 5E endpoint.",
                "required_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint to query for available resources."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_random_joke",
                "api_description": "Fetches a random joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "string",
                    "setup": "string",
                    "punchline": "string"
                }
            }
        ],
        "query": "Can you provide a list of all available DnD 5E resources, and also tell me a random joke to lighten the mood?",
        "relevant APIs": [],
        "query_id": 293
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_item_data",
                "api_description": "Retrieve item data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_equipment",
                "api_description": "Get an equipment item by index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the equipment to get."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "category_range": "string",
                    "cost": "object",
                    "weight": "number"
                },
                "optional_parameters": []
            }
        ],
        "query": "I need to compare the latest item data from League of Legends Data Dragon with an equipment item from Dungeons & Dragons 5th Edition. Can you fetch these for me?",
        "relevant APIs": [],
        "query_id": 294
    },
    {
        "api_list": [
            {
                "tool_name": "cheapshark",
                "api_name": "get_alerts",
                "api_description": "Retrieve all existing alerts.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "The key parameter from the manage link received via email.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            },
            {
                "tool_name": "scryfall",
                "api_name": "card_random",
                "api_description": "Retrieve a random card.",
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "A fulltext search query to filter random cards.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "I'd like to get a list of all my game price alerts. In addition, can you show me a card?",
        "relevant APIs": [],
        "query_id": 295
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_category_entries",
                "api_description": "Retrieves all entries in a given category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category to retrieve entries from."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "Can you list some free-to-play games and also find any cool entries in the Hyrule Compendium?",
        "relevant APIs": [],
        "query_id": 296
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with specified quantity, either 'random' or 'ten'.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "I want to find jokes that are about Chuck Norris and also some jokes from the Official Joke API. Can you provide some?",
        "relevant APIs": [],
        "query_id": 297
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_rarities",
                "api_description": "List different card rarities.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "Find me Chuck Norris jokes related to 'warrior'. Additionally, could you list the different rarities of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 298
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "name": "str",
                            "type": "str",
                            "release": {
                                "na": "date"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "barter",
                "api_name": "browse_bundles",
                "api_description": "Browse all available bundles.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bundles": [
                        {
                            "bundle_id": "int",
                            "name": "str",
                            "date": "date"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find amiibos related to a character and also browse available game bundles?",
        "relevant APIs": [],
        "query_id": 299
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_item_data",
                "api_description": "Retrieve item data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_equipment",
                "api_description": "Get an equipment item by index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the equipment to get."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "category_range": "string",
                    "cost": "object",
                    "weight": "number"
                },
                "optional_parameters": []
            }
        ],
        "query": "I need to compare item data from League of Legends Data Dragon with the 'longsword' equipment details from Dungeons & Dragons 5th Edition. Can you fetch these for me?",
        "relevant APIs": [],
        "query_id": 300
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_ability_score",
                "api_description": "Get an ability score by its index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the ability score to get."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "desc": "string[]",
                    "full_name": "string",
                    "skills": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with a specified quantity.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "Could you tell me what an ability score means in DnD, and also share a joke?",
        "relevant APIs": [],
        "query_id": 301
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "head": "str",
                            "image": "str",
                            "name": "str",
                            "release": {
                                "au": "str",
                                "eu": "str",
                                "jp": "str",
                                "na": "str"
                            },
                            "tail": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "gamerpower",
                "api_name": "get_all_giveaways",
                "api_description": "Fetch all ongoing giveaways.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "List of giveaway objects"
            }
        ],
        "query": "I'm a fan of games and want to know if there are any amiibos available. Also, are there any ongoing giveaways that I could participate in?",
        "relevant APIs": [],
        "query_id": 302
    },
    {
        "api_list": [
            {
                "tool_name": "cheapshark",
                "api_name": "get_alerts",
                "api_description": "Retrieve all existing alerts.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "The key parameter from the manage link received via email.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            },
            {
                "tool_name": "scryfall",
                "api_name": "card_random",
                "api_description": "Retrieve a random card.",
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "A fulltext search query to filter random cards.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "I'd like to get a list of all my game price alerts. In addition, can you show me a random Magic card?",
        "relevant APIs": [],
        "query_id": 303
    },
    {
        "api_list": [
            {
                "tool_name": "boardgamesgeek",
                "api_name": "get_user_info",
                "api_description": "Retrieve information about a user by username from BGG.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The username."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "buddies",
                        "type": "INTEGER",
                        "description": "Include buddies information."
                    },
                    {
                        "name": "guilds",
                        "type": "INTEGER",
                        "description": "Include guilds information."
                    },
                    {
                        "name": "hot",
                        "type": "INTEGER",
                        "description": "Include the user's hot 10 list."
                    },
                    {
                        "name": "top",
                        "type": "INTEGER",
                        "description": "Include the user's top 10 list."
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain for hot and top lists."
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "This endpoint serves to generate insults from the API.",
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "Can you provide some details about a user on BoardGameGeek and also generate a hilarious insult?",
        "query_id": 304
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "Can you provide the champion data of League of Legends for the latest version? And also, give me a cheeky insult.",
        "relevant APIs": [],
        "query_id": 305
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_types",
                "api_description": "List different Pok\u00e9mon types.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "What categories of jokes are available? Also, what are the different types of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 306
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_rarities",
                "api_description": "List different card rarities.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "Find me Chuck Norris jokes related to 'warrior'. Additionally, could you list the different rarities of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 307
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_types",
                "api_description": "List different Pok\u00e9mon types.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "What categories of Chuck Norris jokes are available? Also, what are the different types of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 308
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a joke and give me details about 19 Rattata?",
        "relevant APIs": [],
        "query_id": 309
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_latest_version",
                "api_description": "Retrieve the latest version of Data Dragon.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "list",
                    "items": "str"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "I want to know the version of League of Legends Data Dragon, and while you're at it, can you generate a humorous insult for me?",
        "relevant APIs": [],
        "query_id": 310
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_platform",
                "api_description": "Retrieve a list of all available games from a specific platform.",
                "required_parameters": [
                    {
                        "name": "platform",
                        "type": "STRING",
                        "description": "The platform name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_region",
                "api_description": "Retrieves information on a single region given its name.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The name of the region."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "I want to find all free-to-play games available and get information about the Eldin region in the Hyrule Compendium.",
        "relevant APIs": [],
        "query_id": 311
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "search_items",
                "api_description": "Search for items by name from the BGG database.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of items to return."
                    },
                    {
                        "name": "exact",
                        "type": "INTEGER",
                        "description": "Exact match for search."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "type": "str",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "I'm looking for a board game and also want to explore some free-to-play shooter games. Can you provide me with information on both?",
        "relevant APIs": [],
        "query_id": 312
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_types",
                "api_description": "List different Pok\u00e9mon types.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "What categories of Chuck Norris jokes are available? Also, what are the different types of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 313
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_ability",
                "api_description": "Get details about a specific Pok\u00e9mon ability by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me the available categories of jokes? Also, can you provide me with information on a Pok\u00e9mon ability?",
        "relevant APIs": [],
        "query_id": 314
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_latest_version",
                "api_description": "Retrieve the latest version of Data Dragon.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "list",
                    "items": "str"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "I want to know the latest version of League of Legends Data Dragon, and while you're at it, can you generate a humorous insult for me in English?",
        "relevant APIs": [],
        "query_id": 315
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_ability",
                "api_description": "Get details about a specific Pok\u00e9mon ability by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "What categories are available for Chuck Norris jokes? Also, can you provide me with information on the ability of Pokemon 19 Rattata",
        "relevant APIs": [],
        "query_id": 316
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "get_hot_items",
                "api_description": "Retrieve the list of most active items on BGG.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of hot items (e.g. boardgame)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "rank": "int",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "sorted_games",
                "api_description": "Sort games by release date, alphabetical or relevance.",
                "required_parameters": [
                    {
                        "name": "sort-by",
                        "type": "STRING",
                        "description": "Sort criteria."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "Can you tell me what the hottest items are right now on BGG? Additionally, what are the most popular free-to-play games sorted by relevance?",
        "relevant APIs": [],
        "query_id": 317
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "name": "str",
                            "type": "str",
                            "release": {
                                "na": "date"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "barter",
                "api_name": "browse_bundles",
                "api_description": "Browse all available bundles.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bundles": [
                        {
                            "bundle_id": "int",
                            "name": "str",
                            "date": "date"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find amiibos related to a character and also browse some available items?",
        "relevant APIs": [],
        "query_id": 318
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_ability_score",
                "api_description": "Get an ability score by its index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the ability score to get."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "desc": "string[]",
                    "full_name": "string",
                    "skills": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with a specified quantity.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "Could you tell me what an ability score means in DnD, and also share a random programming joke?",
        "relevant APIs": [],
        "query_id": 319
    },
    {
        "api_list": [
            {
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "category_name": "Games",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            },
            {
                "tool_name": "jokeapi",
                "api_name": "get_joke",
                "category_name": "Games",
                "api_description": "Fetch jokes based on category, filters, and other parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Joke category",
                        "default": "Any"
                    },
                    {
                        "name": "blacklist_flags",
                        "type": "LIST",
                        "description": "Flags to filter out",
                        "default": "None"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code for joke",
                        "default": "en"
                    },
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "Type of joke (single/twopart)",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "String to search within jokes",
                        "default": "None"
                    },
                    {
                        "name": "id_range",
                        "type": "STRING",
                        "description": "ID range for jokes",
                        "default": "None"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER",
                        "description": "Number of jokes to fetch",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "safe_mode",
                        "type": "BOOLEAN",
                        "description": "Fetch only safe jokes",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "boolean",
                    "jokes": "array",
                    "amount": "integer"
                }
            }
        ],
        "query": "I would like to know about the latest League of Legends champions in English. Also, can you get me some funny programming jokes?",
        "relevant APIs": [],
        "query_id": 320
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_cards_by_name",
                "api_description": "Retrieve cards by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_random_joke",
                "api_description": "Grab a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you find the details of a Magic: The Gathering card and then tell me something funny?",
        "relevant APIs": [
            "get_cards_by_name",
            "grab_random_joke"
        ],
        "query_id": 321
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a random Chuck Norris joke and give me details about a Pok\u00e9mon?",
        "relevant APIs": [],
        "query_id": 322
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "search_items",
                "api_description": "Search for items by name from the BGG database.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of items to return."
                    },
                    {
                        "name": "exact",
                        "type": "INTEGER",
                        "description": "Exact match for search."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "type": "str",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "I'm looking for a board game like 'Catan' and also want to explore some free-to-play games. Can you provide me with information on both?",
        "relevant APIs": [],
        "query_id": 323
    },
    {
        "api_list": [
            {
                "tool_name": "boardgamesgeek",
                "api_name": "get_user_info",
                "api_description": "Retrieve information about a user by username from BGG.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The username."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "buddies",
                        "type": "INTEGER",
                        "description": "Include buddies information."
                    },
                    {
                        "name": "guilds",
                        "type": "INTEGER",
                        "description": "Include guilds information."
                    },
                    {
                        "name": "hot",
                        "type": "INTEGER",
                        "description": "Include the user's hot 10 list."
                    },
                    {
                        "name": "top",
                        "type": "INTEGER",
                        "description": "Include the user's top 10 list."
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain for hot and top lists."
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "This endpoint serves to generate insults from the API.",
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "Can you provide some details about a user on BoardGameGeek and also say something funny?",
        "query_id": 324
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_platform",
                "api_description": "Retrieve a list of all available games from a specific platform.",
                "required_parameters": [
                    {
                        "name": "platform",
                        "type": "STRING",
                        "description": "The platform name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_region",
                "api_description": "Retrieves information on a single region given its name.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The name of the region."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "I want to find all free-to-play games available for PC and get information about a region in the Hyrule Compendium.",
        "relevant APIs": [],
        "query_id": 325
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_category_entries",
                "api_description": "Retrieves all entries in a given category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category to retrieve entries from."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "Can you list some free-to-play games and also find entries related to monsters in the Hyrule Compendium?",
        "relevant APIs": [],
        "query_id": 326
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "Can you provide the champion data of League of Legends for the latest version? And also, give me a cheeky insult in German.",
        "relevant APIs": [],
        "query_id": 327
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "get_hot_items",
                "api_description": "Retrieve the list of most active items on BGG.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of hot items (e.g. boardgame)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "rank": "int",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "sorted_games",
                "api_description": "Sort games by release date, alphabetical or relevance.",
                "required_parameters": [
                    {
                        "name": "sort-by",
                        "type": "STRING",
                        "description": "Sort criteria."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "Can you tell me what the hottest items are right now on BGG? Additionally, what are the most popular free-to-play games?",
        "relevant APIs": [],
        "query_id": 328
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_item_data",
                "api_description": "Retrieve item data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_equipment",
                "api_description": "Get an equipment item by index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the equipment to get."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "category_range": "string",
                    "cost": "object",
                    "weight": "number"
                },
                "optional_parameters": []
            }
        ],
        "query": "I need to compare item data from League of Legends Data Dragon with an equipment item from Dungeons & Dragons 5th Edition. Can you fetch these for me?",
        "relevant APIs": [],
        "query_id": 329
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with specified quantity, either 'random' or 'ten'.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "I want to find some jokes and also some jokes of a specific type from the Official Joke API. Can you provide some?",
        "relevant APIs": [],
        "query_id": 330
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_all_resources",
                "api_description": "Get list of all available resources for a specified DnD 5E endpoint.",
                "required_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint to query for available resources."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_random_joke",
                "api_description": "Fetches a random joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "string",
                    "setup": "string",
                    "punchline": "string"
                }
            }
        ],
        "query": "Can you provide a list of all available DnD 5E resources, and also tell me something funny to lighten the mood?",
        "relevant APIs": [],
        "query_id": 331
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "head": "str",
                            "image": "str",
                            "name": "str",
                            "release": {
                                "au": "str",
                                "eu": "str",
                                "jp": "str",
                                "na": "str"
                            },
                            "tail": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "gamerpower",
                "api_name": "get_all_giveaways",
                "api_description": "Fetch all ongoing giveaways.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "List of giveaway objects"
            }
        ],
        "query": "I'm a fan of the Legend of Zelda series and want to know if there are any amiibos related to this game. Also, are there any ongoing giveaways that I could participate in?",
        "relevant APIs": [],
        "query_id": 332
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_cards_by_name",
                "api_description": "Retrieve cards by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_random_joke",
                "api_description": "Grab a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you find the details of the Magic: The Gathering card named 'Black Lotus' and then tell me something funny?",
        "relevant APIs": [
            "get_cards_by_name",
            "grab_random_joke"
        ],
        "query_id": 333
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with specified quantity, either 'random' or 'ten'.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "I want to find some jokes and also some jokes from the Official Joke API. Can you provide some?",
        "relevant APIs": [],
        "query_id": 334
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_cards_by_name",
                "api_description": "Retrieve cards by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_random_joke",
                "api_description": "Grab a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you tell me a joke after finding the details of the Magic: The Gathering card named 'Black Lotus'?",
        "relevant APIs": [
            "get_cards_by_name",
            "grab_random_joke"
        ],
        "query_id": 335
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_all_resources",
                "api_description": "Get list of all available resources for a specified DnD 5E endpoint.",
                "required_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint to query for available resources."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_random_joke",
                "api_description": "Fetches a random joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "string",
                    "setup": "string",
                    "punchline": "string"
                }
            }
        ],
        "query": "Can you provide a list of all available DnD 5E classes, and also tell me something funny to lighten the mood?",
        "relevant APIs": [],
        "query_id": 336
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "Can you provide the champion data of League of Legends for the latest version in English? And also, give me a cheeky insult.",
        "relevant APIs": [],
        "query_id": 337
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_platform",
                "api_description": "Retrieve a list of all available games from a specific platform.",
                "required_parameters": [
                    {
                        "name": "platform",
                        "type": "STRING",
                        "description": "The platform name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_region",
                "api_description": "Retrieves information on a single region given its name.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The name of the region."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "I want to find all free-to-play games available and get information about a region in the Hyrule Compendium.",
        "relevant APIs": [],
        "query_id": 338
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a joke and give me details about a Pok\u00e9mon?",
        "relevant APIs": [],
        "query_id": 339
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "name": "str",
                            "type": "str",
                            "release": {
                                "na": "date"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "barter",
                "api_name": "browse_bundles",
                "api_description": "Browse all available bundles.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bundles": [
                        {
                            "bundle_id": "int",
                            "name": "str",
                            "date": "date"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find amiibos related to the character Mario and also browse some available items?",
        "relevant APIs": [],
        "query_id": 340
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_ability_score",
                "api_description": "Get an ability score by its index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the ability score to get."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "desc": "string[]",
                    "full_name": "string",
                    "skills": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with a specified quantity.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "Could you tell me what the 'Strength' ability score means in DnD, and also share a random joke?",
        "relevant APIs": [],
        "query_id": 341
    },
    {
        "api_list": [
            {
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "category_name": "Games",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            },
            {
                "tool_name": "jokeapi",
                "api_name": "get_joke",
                "category_name": "Games",
                "api_description": "Fetch jokes based on category, filters, and other parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Joke category",
                        "default": "Any"
                    },
                    {
                        "name": "blacklist_flags",
                        "type": "LIST",
                        "description": "Flags to filter out",
                        "default": "None"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code for joke",
                        "default": "en"
                    },
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "Type of joke (single/twopart)",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "String to search within jokes",
                        "default": "None"
                    },
                    {
                        "name": "id_range",
                        "type": "STRING",
                        "description": "ID range for jokes",
                        "default": "None"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER",
                        "description": "Number of jokes to fetch",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "safe_mode",
                        "type": "BOOLEAN",
                        "description": "Fetch only safe jokes",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "boolean",
                    "jokes": "array",
                    "amount": "integer"
                }
            }
        ],
        "query": "I would like to know about the latest League of Legends champions in English. Also, can you get me some funny programming jokes?",
        "relevant APIs": [],
        "query_id": 342
    },
    {
        "api_list": [
            {
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "category_name": "Games",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            },
            {
                "tool_name": "jokeapi",
                "api_name": "get_joke",
                "category_name": "Games",
                "api_description": "Fetch jokes based on category, filters, and other parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Joke category",
                        "default": "Any"
                    },
                    {
                        "name": "blacklist_flags",
                        "type": "LIST",
                        "description": "Flags to filter out",
                        "default": "None"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code for joke",
                        "default": "en"
                    },
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "Type of joke (single/twopart)",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "String to search within jokes",
                        "default": "None"
                    },
                    {
                        "name": "id_range",
                        "type": "STRING",
                        "description": "ID range for jokes",
                        "default": "None"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER",
                        "description": "Number of jokes to fetch",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "safe_mode",
                        "type": "BOOLEAN",
                        "description": "Fetch only safe jokes",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "boolean",
                    "jokes": "array",
                    "amount": "integer"
                }
            }
        ],
        "query": "I would like to know about the latest League of Legends champions in English. Also, can you get me some funny programming jokes?",
        "relevant APIs": [],
        "query_id": 343
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_latest_version",
                "api_description": "Retrieve the latest version of Data Dragon.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "list",
                    "items": "str"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "I want to know the latest version of League of Legends Data Dragon, and while you're at it, can you generate a humorous insult for me in English?",
        "relevant APIs": [],
        "query_id": 344
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_types",
                "api_description": "List different Pok\u00e9mon types.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "What categories of jokes are available? Also, what are the different kinds of cards?",
        "relevant APIs": [],
        "query_id": 345
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_rarities",
                "api_description": "List different card rarities.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "Find me some Chuck Norris jokes. Additionally, could you list the a large amount of cards?",
        "relevant APIs": [],
        "query_id": 346
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_facilities",
                "api_description": "Retrieve information about facilities.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_type",
                        "type": "STRING",
                        "description": "Filter by facility type."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_facility",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What is the current liveboard information for my local train station in Belgium? Additionally, can you provide details about facilities at a specific stop in the MBTA system?",
        "relevant APIs": [],
        "query_id": 347
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_alerts",
                "api_description": "List active and upcoming system alerts.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_activity",
                        "type": "STRING",
                        "description": "Filter to alerts for only those activities matching."
                    },
                    {
                        "name": "filter_route_type",
                        "type": "STRING",
                        "description": "Filter by route type."
                    },
                    {
                        "name": "filter_direction_id",
                        "type": "STRING",
                        "description": "Filter by direction ID."
                    },
                    {
                        "name": "filter_route",
                        "type": "STRING",
                        "description": "Filter by route id."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "filter_trip",
                        "type": "STRING",
                        "description": "Filter by trip."
                    },
                    {
                        "name": "filter_facility",
                        "type": "STRING",
                        "description": "Filter by facility."
                    },
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by alert ID."
                    },
                    {
                        "name": "filter_banner",
                        "type": "STRING",
                        "description": "Filter by banner."
                    },
                    {
                        "name": "filter_datetime",
                        "type": "STRING",
                        "description": "Filter by datetime."
                    },
                    {
                        "name": "filter_lifecycle",
                        "type": "STRING",
                        "description": "Filter by lifecycle."
                    },
                    {
                        "name": "filter_severity",
                        "type": "STRING",
                        "description": "Filter by severity."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_alert",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you find some major transport stations in the city where I work and check if there are any alerts on Route 1 using the MBTA data?",
        "relevant APIs": [],
        "query_id": 348
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "stop_departures",
                "api_description": "Get departures at a stop/station.",
                "required_parameters": [
                    {
                        "name": "stop_id",
                        "type": "STRING",
                        "description": "ID of the stop/station.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "when",
                        "type": "STRING",
                        "description": "Departure time (ISO 8601 format).",
                        "default": ""
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Filter by direction.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Show departures for how many minutes.",
                        "default": "10"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of results.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "connections",
                "api_description": "Get routes between two stations.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Departure station"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Destination station"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "timesel",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "typeOfTransport",
                        "type": "STRING",
                        "description": "Type of transport",
                        "default": "automatic"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Number of results",
                        "default": 6
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "Can you give me the next departures from the closest station in Berlin to my apartment and the available train connections from Brussels to Liege tomorrow at 10am?",
        "query_id": 349
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "stop_departures",
                "api_description": "Get departures at a stop/station.",
                "required_parameters": [
                    {
                        "name": "stop_id",
                        "type": "STRING",
                        "description": "ID of the stop/station.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "when",
                        "type": "STRING",
                        "description": "Departure time (ISO 8601 format).",
                        "default": ""
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Filter by direction.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Show departures for how many minutes.",
                        "default": "10"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of results.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "connections",
                "api_description": "Get routes between two stations.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Departure station"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Destination station"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "timesel",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "typeOfTransport",
                        "type": "STRING",
                        "description": "Type of transport",
                        "default": "automatic"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Number of results",
                        "default": 6
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "Can you give me the next departures from the Zoologischer Garten station in Berlin and the available train connections from my hometown to Liege tomorrow at 10am?",
        "query_id": 350
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "What are the public transport options available at Alexanderplatz right now, and what trains are departing from my grandma's station currently?",
        "query_id": 351
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "radar",
                "api_description": "Find all vehicles currently in an area and their movements.",
                "required_parameters": [
                    {
                        "name": "north",
                        "type": "FLOAT",
                        "description": "Northern latitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "west",
                        "type": "FLOAT",
                        "description": "Western longitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "south",
                        "type": "FLOAT",
                        "description": "Southern latitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "east",
                        "type": "FLOAT",
                        "description": "Eastern longitude of bounding box.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of vehicles.",
                        "default": "256"
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Compute frames for how many seconds?",
                        "default": "30"
                    },
                    {
                        "name": "frames",
                        "type": "INTEGER",
                        "description": "Number of frames to compute.",
                        "default": "3"
                    },
                    {
                        "name": "polylines",
                        "type": "BOOLEAN",
                        "description": "Return a polyline for each vehicle?",
                        "default": "true"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_lines",
                "api_description": "List lines.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by line ID."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_line",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need to monitor the vehicles currently moving in the central Berlin area with boundaries north=52.52411, west=13.41002, south=52.51942, east=13.41709 and could you list the details of the Red Line from the MBTA data?",
        "relevant APIs": [],
        "query_id": 352
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_alerts",
                "api_description": "List active and upcoming system alerts.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_activity",
                        "type": "STRING",
                        "description": "Filter to alerts for only those activities matching."
                    },
                    {
                        "name": "filter_route_type",
                        "type": "STRING",
                        "description": "Filter by route type."
                    },
                    {
                        "name": "filter_direction_id",
                        "type": "STRING",
                        "description": "Filter by direction ID."
                    },
                    {
                        "name": "filter_route",
                        "type": "STRING",
                        "description": "Filter by route id."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "filter_trip",
                        "type": "STRING",
                        "description": "Filter by trip."
                    },
                    {
                        "name": "filter_facility",
                        "type": "STRING",
                        "description": "Filter by facility."
                    },
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by alert ID."
                    },
                    {
                        "name": "filter_banner",
                        "type": "STRING",
                        "description": "Filter by banner."
                    },
                    {
                        "name": "filter_datetime",
                        "type": "STRING",
                        "description": "Filter by datetime."
                    },
                    {
                        "name": "filter_lifecycle",
                        "type": "STRING",
                        "description": "Filter by lifecycle."
                    },
                    {
                        "name": "filter_severity",
                        "type": "STRING",
                        "description": "Filter by severity."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_alert",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you find some major transport stations in the city where I work and check if there are any alerts on my normal route using the MBTA data?",
        "relevant APIs": [],
        "query_id": 353
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "What are the public transport options available at at my house right now, and what trains are departing from my grandma's station currently?",
        "query_id": 354
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "stop_departures",
                "api_description": "Get departures at a stop/station.",
                "required_parameters": [
                    {
                        "name": "stop_id",
                        "type": "STRING",
                        "description": "ID of the stop/station.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "when",
                        "type": "STRING",
                        "description": "Departure time (ISO 8601 format).",
                        "default": ""
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Filter by direction.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Show departures for how many minutes.",
                        "default": "10"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of results.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "connections",
                "api_description": "Get routes between two stations.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Departure station"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Destination station"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "timesel",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "typeOfTransport",
                        "type": "STRING",
                        "description": "Type of transport",
                        "default": "automatic"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Number of results",
                        "default": 6
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "Can you give me the next departures from the closest station in Berlin to my apartment and the available train connections from my hometown to the city I work tomorrow at 10am?",
        "query_id": 355
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_alerts",
                "api_description": "List active and upcoming system alerts.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_activity",
                        "type": "STRING",
                        "description": "Filter to alerts for only those activities matching."
                    },
                    {
                        "name": "filter_route_type",
                        "type": "STRING",
                        "description": "Filter by route type."
                    },
                    {
                        "name": "filter_direction_id",
                        "type": "STRING",
                        "description": "Filter by direction ID."
                    },
                    {
                        "name": "filter_route",
                        "type": "STRING",
                        "description": "Filter by route id."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "filter_trip",
                        "type": "STRING",
                        "description": "Filter by trip."
                    },
                    {
                        "name": "filter_facility",
                        "type": "STRING",
                        "description": "Filter by facility."
                    },
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by alert ID."
                    },
                    {
                        "name": "filter_banner",
                        "type": "STRING",
                        "description": "Filter by banner."
                    },
                    {
                        "name": "filter_datetime",
                        "type": "STRING",
                        "description": "Filter by datetime."
                    },
                    {
                        "name": "filter_lifecycle",
                        "type": "STRING",
                        "description": "Filter by lifecycle."
                    },
                    {
                        "name": "filter_severity",
                        "type": "STRING",
                        "description": "Filter by severity."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_alert",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you find some major transport stations in Berlin and check if there are any alerts on my normal route using the MBTA data?",
        "relevant APIs": [],
        "query_id": 356
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "stop_departures",
                "api_description": "Get departures at a stop/station.",
                "required_parameters": [
                    {
                        "name": "stop_id",
                        "type": "STRING",
                        "description": "ID of the stop/station.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "when",
                        "type": "STRING",
                        "description": "Departure time (ISO 8601 format).",
                        "default": ""
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Filter by direction.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Show departures for how many minutes.",
                        "default": "10"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of results.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "connections",
                "api_description": "Get routes between two stations.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Departure station"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Destination station"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "timesel",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "typeOfTransport",
                        "type": "STRING",
                        "description": "Type of transport",
                        "default": "automatic"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Number of results",
                        "default": 6
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "Can you give me the next departures from the Zoologischer Garten station in Berlin and the available train connections from Brussels to the city I work tomorrow at 10am?",
        "query_id": 357
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "What are the public transport options available at my house right now, and what trains are departing from Gent-Sint-Pieters station currently?",
        "query_id": 358
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str"
                    },
                    "features": [
                        {
                            "type": "str",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            },
                            "geometry": {
                                "type": "str",
                                "coordinates": [
                                    "float",
                                    "float",
                                    "float"
                                ]
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am researching biodiversity datasets related to marine life. Can you find some datasets using this keyword? Also, I need data on earthquakes that happened in the last month with a magnitude of at least more than the one discussed in our research meeting.",
        "relevant APIs": [],
        "query_id": 359
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the XML format data for the satellite group my team is interested in? Also, find the derivative of the expression on my HW.",
        "relevant APIs": [],
        "query_id": 360
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "limit": "int",
                    "offset": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "type": "str",
                            "pub": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "found": "bool",
                    "number": "int",
                    "type": "str"
                }
            }
        ],
        "query": "Can you search for datasets related to my recent activism work and also provide me with a random trivia fact?",
        "relevant APIs": [],
        "query_id": 361
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Please search for datasets containing information about my pet's species. Additionally, integrate the expression x^2.",
        "relevant APIs": [],
        "query_id": 362
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": []
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "timestamp": "int",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            }
        ],
        "query": "Can you show me the latest datasets related to my research interest available in the US and also provide the current location of the International Space Station (ISS)?",
        "relevant APIs": [],
        "query_id": 363
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "I want to know about any new research on my colleague's research available on arXiv and also get the sunrise time in Sydney, Australia for tomorrow in 24-hour format.",
        "relevant APIs": [],
        "query_id": 364
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you list some datasets related to occurrences in my home country? Also, could you find the derivative of the function I had on my calculus test earlier?",
        "relevant APIs": [],
        "query_id": 365
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "Can you provide the latest articles related to my professor's research area on arXiv and also find out when the sun sets in Kyoto, Japan today?",
        "relevant APIs": [],
        "query_id": 366
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query the Celestrak GP Data using Satellite Name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "description": "Returns satellite data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str",
                            "countryCoverage": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the latest telemetry data for the Telescope I worked on and also find datasets related to my favorite species worldwide?",
        "relevant APIs": [],
        "query_id": 367
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int"
                }
            }
        ],
        "query": "Retrieve the latest three papers on quantum computing from arXiv and count the number of earthquakes with a magnitude above 6.0 that happened before the piano concert.",
        "relevant APIs": [],
        "query_id": 368
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        "object"
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "search_for_any_match",
                "api_description": "Returns matches by comparing the search key to ITIS names and TSNs.",
                "required_parameters": [
                    {
                        "name": "srchKey",
                        "type": "STRING",
                        "description": "The search key for matching."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matches": [
                        "object"
                    ]
                }
            }
        ],
        "query": "Can you list biodiversity datasets available in my home nation, and find any taxonomic matches related to 'Panthera'?",
        "relevant APIs": [],
        "query_id": 369
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Please search for datasets containing information about my pet's species. Additionally, integrate the expression from my college class earlier",
        "relevant APIs": [],
        "query_id": 370
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "I need reference papers on the research I am covering for school. Also, could you provide data for the satellite with catalog number 25544?",
        "relevant APIs": [],
        "query_id": 371
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str",
                        "status": "int"
                    },
                    "features": [
                        {
                            "type": "Feature",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find recent articles on my latest research interest from arXiv? Also, provide earthquake data for events that occurred this year with a magnitude greater than the earthquake my grandparents experienced.",
        "relevant APIs": [],
        "query_id": 372
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "operation": "string",
                    "expression": "string",
                    "result": "string"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "string",
                    "found": "boolean",
                    "number": "number",
                    "type": "string",
                    "date": "string"
                }
            }
        ],
        "query": "Can you help me solve and simplify the mathematical expression from work earlier using Newton's API? Also, tell me a trivia fact about the number 8 using the Numbers API.",
        "query_id": 373
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "I need reference papers on quantum computing. Also, could you provide data for the satellite with my company's catalog number?",
        "relevant APIs": [],
        "query_id": 374
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "itemCount": "int",
                    "results": "list of dict"
                }
            }
        ],
        "query": "Please get the TLE data for all satellites in the group related to my course project using Celestrak. At the same time, could you search iDigBio records for any related to 'Homo sapiens'?",
        "relevant APIs": [],
        "query_id": 375
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int"
                }
            }
        ],
        "query": "Retrieve the latest three papers on the topic of my latest groundbreaking research from arXiv and count the number of earthquakes with a magnitude above 6.0 that happened in the past week.",
        "relevant APIs": [],
        "query_id": 376
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_special",
                "api_description": "Query GP data using special datasets.",
                "required_parameters": [
                    {
                        "name": "SPECIAL",
                        "type": "STRING",
                        "description": "Special dataset identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "1": "1 is the number of dimensions of a line.",
                    "2": "2 is the number of polynucleotide strands in a DNA double helix.",
                    "3": "3 is the number of sets needed to be won to win the whole match in volleyball."
                }
            }
        ],
        "query": "I am interested in the special dataset of the GEO Protected Zone. Can you also provide me with facts about my 3 favorite numbers?",
        "relevant APIs": [],
        "query_id": 377
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "uuid": "str",
                            "data": "dict"
                        }
                    ],
                    "itemCount": "int"
                }
            }
        ],
        "query": "Can you provide the latest research papers on quantum computing available on arXiv, and also give me details of any biodiversity records related to the topic discussed in our meeting using iDigBio?",
        "relevant APIs": [],
        "query_id": 378
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "operation": "string",
                    "expression": "string",
                    "result": "string"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "string",
                    "found": "boolean",
                    "number": "number",
                    "type": "string",
                    "date": "string"
                }
            }
        ],
        "query": "Can you help me solve and simplify the mathematical expression 2^2 + 2(2) using Newton's API? Also, tell me a trivia fact about my favorite number using the Numbers API.",
        "query_id": 379
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "description": "Query GP data using Catalog Number (CATNR).",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "usgs",
                "api_name": "query",
                "description": "Submit a data request for earthquake events.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "Can you find information about the satellite with catalog number 25544 and also provide details about earthquakes that occurred on January 1, 2023 with a magnitude greater than the team discussed?",
        "relevant APIs": [],
        "query_id": 380
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you list some datasets related to occurrences in my home country? Also, could you find the derivative of the function 2x^3 + 3x^2?",
        "relevant APIs": [],
        "query_id": 381
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the XML format data for the satellite group my team is interested in? Also, find the derivative of the expression x^2 + 2x.",
        "relevant APIs": [],
        "query_id": 382
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "2012 is the year that the century's second and last solar transit of Venus occurs on June 6.",
                    "found": true,
                    "number": 2012,
                    "type": "year",
                    "date": "June 6"
                }
            }
        ],
        "query": "Can you provide information about the satellite the team is interested in? Also, what is a trivia fact about the number 42?",
        "relevant APIs": [],
        "query_id": 383
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": []
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": []
                }
            }
        ],
        "query": "I would like to know about any datasets with information on my research and also find out how many people are currently in space and their details.",
        "relevant APIs": [],
        "query_id": 384
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "Can you provide the latest articles related to quantum computing on arXiv and also find out when the sun sets in my favorite vacation spot today?",
        "relevant APIs": [],
        "query_id": 385
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "2012 is the year that the century's second and last solar transit of Venus occurs on June 6.",
                    "found": true,
                    "number": 2012,
                    "type": "year",
                    "date": "June 6"
                }
            }
        ],
        "query": "Can you provide information about the satellite named 'MICROSAT-R'? Also, what is a trivia fact about my favorite number?",
        "relevant APIs": [],
        "query_id": 386
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str",
                        "status": "int"
                    },
                    "features": [
                        {
                            "type": "Feature",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find recent articles on my latest research interest from arXiv? Also, provide earthquake data for events that occurred this year with a magnitude greater than 5.0.",
        "relevant APIs": [],
        "query_id": 387
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "2012 is the year that the century's second and last solar transit of Venus occurs on June 6.",
                    "found": true,
                    "number": 2012,
                    "type": "year",
                    "date": "June 6"
                }
            }
        ],
        "query": "Can you provide information about the satellite the team is interested in? Also, what is a trivia fact about my favorite number?",
        "relevant APIs": [],
        "query_id": 388
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "I need to get the TLE data for the satellite with catalog number our company is interested in. Additionally, could you simplify the expression 2^2 + 2*2?",
        "relevant APIs": [],
        "query_id": 389
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the XML format data for the satellite group 'STATIONS'? Also, find the derivative of the expression on my HW.",
        "relevant APIs": [],
        "query_id": 390
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query the Celestrak GP Data using Satellite Name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "description": "Returns satellite data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str",
                            "countryCoverage": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the latest telemetry data for the Telescope I worked on and also find datasets related to bird species worldwide?",
        "relevant APIs": [],
        "query_id": 391
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "get_dataset_details",
                "api_description": "Get details of a single dataset.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "Key of the dataset"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "key": "string",
                    "title": "string",
                    "description": "string",
                    "countryCoverage": [
                        "string"
                    ],
                    "created": "string"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "view_basic_access",
                "api_description": "Returns iDigBio record format from legacy API.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The unique identifier for the record."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "view_type",
                        "type": "STRING",
                        "description": "The type of object to view.",
                        "default": "records"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "uuid": "string",
                    "data": {
                        "dwc:scientificName": "string",
                        "dwc:municipality": "string",
                        "idigbio:geoPoint": {
                            "lat": "float",
                            "lon": "float"
                        }
                    }
                }
            }
        ],
        "query": "I would like to know more details about a specific dataset identified by key discussed in our team meeting using the GBIF API. Also, can you provide me with a detailed view of a specific record from iDigBio using the UUID 'c5e7b8fe-7f33-404e-96cc-35a201a4b1d9'?",
        "relevant APIs": [],
        "query_id": 392
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want to check the current TLE data for the telescope mentioned in the article and also find out how many people are currently in space.",
        "relevant APIs": [],
        "query_id": 393
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str"
                    },
                    "features": [
                        {
                            "type": "str",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            },
                            "geometry": {
                                "type": "str",
                                "coordinates": [
                                    "float",
                                    "float",
                                    "float"
                                ]
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am researching biodiversity datasets related to my recent research area. Can you find some datasets using this keyword? Also, I need data on earthquakes that happened in the last month with a magnitude of at least 5.",
        "relevant APIs": [],
        "query_id": 394
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "I want to know about any new research on my colleague's research available on arXiv and also get the sunrise time for the location of my business trip for tomorrow in 24-hour format.",
        "relevant APIs": [],
        "query_id": 395
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "I need to get the TLE data for the satellite with catalog number 25544. Additionally, could you simplify the math expression on the whiteboard?",
        "relevant APIs": [],
        "query_id": 396
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                },
                "category_name": "Science"
            },
            {
                "tool_name": "spacex",
                "api_name": "get_next_launch",
                "api_description": "Retrieve information about the next launch.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fairings": "object",
                    "links": "object",
                    "static_fire_date_utc": "string",
                    "rocket": "string",
                    "success": "boolean",
                    "details": "string",
                    "crew": [
                        "string"
                    ],
                    "ships": [
                        "string"
                    ],
                    "capsules": [
                        "string"
                    ],
                    "payloads": [
                        "string"
                    ],
                    "launchpad": "string"
                },
                "category_name": "Science"
            }
        ],
        "query": "What's the latest update on the satellite with the catalog number my team is examining? Also, when is the next SpaceX launch scheduled?",
        "relevant APIs": [],
        "query_id": 397
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all GBIF datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find the latest research articles about my research interest on arXiv? Also, could you fetch datasets pertaining to the topic of study in biology class using the GBIF API?",
        "relevant APIs": [],
        "query_id": 398
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "uuid": "str",
                            "data": "dict"
                        }
                    ],
                    "itemCount": "int"
                }
            }
        ],
        "query": "Can you provide the latest research papers on my research interest available on arXiv, and also give me details of any biodiversity records related to 'Panthera leo' using iDigBio?",
        "relevant APIs": [],
        "query_id": 399
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "operation": "string",
                    "expression": "string",
                    "result": "string"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "string",
                    "found": "boolean",
                    "number": "number",
                    "type": "string",
                    "date": "string"
                }
            }
        ],
        "query": "Can you help me solve and simplify the mathematical expression from work earlier using Newton's API? Also, tell me a trivia fact about my favorite number using the Numbers API.",
        "query_id": 400
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        "object"
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "search_for_any_match",
                "api_description": "Returns matches by comparing the search key to ITIS names and TSNs.",
                "required_parameters": [
                    {
                        "name": "srchKey",
                        "type": "STRING",
                        "description": "The search key for matching."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matches": [
                        "object"
                    ]
                }
            }
        ],
        "query": "Can you list biodiversity datasets available in the US, and find any taxonomic matches related to the ones discussed?",
        "relevant APIs": [],
        "query_id": 401
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "description": "Query GP data using Catalog Number (CATNR).",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "usgs",
                "api_name": "query",
                "description": "Submit a data request for earthquake events.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "Can you find information about the satellite with the catalog number in the presentation and also provide details about earthquakes that occurred on January 1, 2023 with a magnitude greater than 5?",
        "relevant APIs": [],
        "query_id": 402
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int"
                }
            }
        ],
        "query": "Retrieve the latest three papers on quantum computing from arXiv and count the number of earthquakes with a magnitude above a certain level in the past week.",
        "relevant APIs": [],
        "query_id": 403
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "itemCount": "int",
                    "results": "list of dict"
                }
            }
        ],
        "query": "Please get the TLE data for all satellites in the group related to my course project using Celestrak. At the same time, could you search iDigBio records for any related to the species we are studying in biology?",
        "relevant APIs": [],
        "query_id": 404
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "I need reference papers on the research I am covering for school. Also, could you provide data for the satellite with my company's catalog number?",
        "relevant APIs": [],
        "query_id": 405
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all GBIF datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find the latest research articles about my research interest on arXiv? Also, could you fetch datasets pertaining to 'biodiversity' using the GBIF API?",
        "relevant APIs": [],
        "query_id": 406
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "description": "Query GP data using Catalog Number (CATNR).",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "usgs",
                "api_name": "query",
                "description": "Submit a data request for earthquake events.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "Can you find information about the satellite with the catalog number in the presentation and also provide details about earthquakes that occurred on the date on the powerpoint slide, 2023 with a magnitude greater than the team discussed?",
        "relevant APIs": [],
        "query_id": 407
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "get_dataset_details",
                "api_description": "Get details of a single dataset.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "Key of the dataset"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "key": "string",
                    "title": "string",
                    "description": "string",
                    "countryCoverage": [
                        "string"
                    ],
                    "created": "string"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "view_basic_access",
                "api_description": "Returns iDigBio record format from legacy API.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The unique identifier for the record."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "view_type",
                        "type": "STRING",
                        "description": "The type of object to view.",
                        "default": "records"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "uuid": "string",
                    "data": {
                        "dwc:scientificName": "string",
                        "dwc:municipality": "string",
                        "idigbio:geoPoint": {
                            "lat": "float",
                            "lon": "float"
                        }
                    }
                }
            }
        ],
        "query": "I would like to know more details about a specific dataset identified by key discussed in our team meeting using the GBIF API. Also, can you provide me with a detailed view of a specific record from iDigBio using the UUID discussed earlier?",
        "relevant APIs": [],
        "query_id": 408
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        "object"
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "search_for_any_match",
                "api_description": "Returns matches by comparing the search key to ITIS names and TSNs.",
                "required_parameters": [
                    {
                        "name": "srchKey",
                        "type": "STRING",
                        "description": "The search key for matching."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matches": [
                        "object"
                    ]
                }
            }
        ],
        "query": "Can you list biodiversity datasets available in my home nation, and find any taxonomic matches related to the ones discussed?",
        "relevant APIs": [],
        "query_id": 409
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "get_dataset_details",
                "api_description": "Get details of a single dataset.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "Key of the dataset"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "key": "string",
                    "title": "string",
                    "description": "string",
                    "countryCoverage": [
                        "string"
                    ],
                    "created": "string"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "view_basic_access",
                "api_description": "Returns iDigBio record format from legacy API.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The unique identifier for the record."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "view_type",
                        "type": "STRING",
                        "description": "The type of object to view.",
                        "default": "records"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "uuid": "string",
                    "data": {
                        "dwc:scientificName": "string",
                        "dwc:municipality": "string",
                        "idigbio:geoPoint": {
                            "lat": "float",
                            "lon": "float"
                        }
                    }
                }
            }
        ],
        "query": "I would like to know more details about a specific dataset identified by key '6d52d3ee-d375-4daa-8c3b-c94e0ef4eb76' using the GBIF API. Also, can you provide me with a detailed view of a specific record from iDigBio using the UUID discussed earlier?",
        "relevant APIs": [],
        "query_id": 410
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Please search for datasets containing information about my pet's species. Additionally, integrate the expression from my college class earlier",
        "relevant APIs": [],
        "query_id": 411
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "description": "Query GP data using Catalog Number (CATNR).",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "usgs",
                "api_name": "query",
                "description": "Submit a data request for earthquake events.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "Can you find information about the satellite with catalog number 25544 and also provide details about earthquakes that occurred on the date on the powerpoint slide with a magnitude greater than 5?",
        "relevant APIs": [],
        "query_id": 412
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str"
                    },
                    "features": [
                        {
                            "type": "str",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            },
                            "geometry": {
                                "type": "str",
                                "coordinates": [
                                    "float",
                                    "float",
                                    "float"
                                ]
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am researching biodiversity datasets related to my recent research area. Can you find some datasets using this keyword? Also, I need data on earthquakes that happened in the last month with a magnitude of at least more than the one discussed in our research meeting.",
        "relevant APIs": [],
        "query_id": 413
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "uuid": "str",
                            "data": "dict"
                        }
                    ],
                    "itemCount": "int"
                }
            }
        ],
        "query": "Can you provide the latest research papers on my research interest available on arXiv, and also give me details of any biodiversity records related to the topic discussed in our meeting using iDigBio?",
        "relevant APIs": [],
        "query_id": 414
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "get_tsn_by_vernacular_language",
                "api_description": "Provide a listing of TSNs with vernaculars entered in the requested language.",
                "required_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The vernacular language for TSNs."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "response": "json"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you list the Taxonomic Serial Numbers (TSNs) of species in my mother's native language and tell me how many people are currently in space?",
        "relevant APIs": [],
        "query_id": 415
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_special",
                "api_description": "Query GP data using special datasets.",
                "required_parameters": [
                    {
                        "name": "SPECIAL",
                        "type": "STRING",
                        "description": "Special dataset identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "1": "1 is the number of dimensions of a line.",
                    "2": "2 is the number of polynucleotide strands in a DNA double helix.",
                    "3": "3 is the number of sets needed to be won to win the whole match in volleyball."
                }
            }
        ],
        "query": "I am interested in the special dataset my team wants. Can you also provide me with facts about the numbers 1, 2, and 3?",
        "relevant APIs": [],
        "query_id": 416
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "search_by_scientific_name",
                "api_description": "Returns matches found by comparing the search key to the ITIS full Scientific Names.",
                "required_parameters": [
                    {
                        "name": "srchKey",
                        "type": "STRING",
                        "description": "The scientific name to search."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matches": "list of scientific names"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_all_rockets",
                "api_description": "Retrieve all rocket information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "rockets": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "active": "bool",
                            "stages": "int",
                            "boosters": "int",
                            "cost_per_launch": "int",
                            "success_rate_pct": "int",
                            "first_flight": "str",
                            "country": "str",
                            "company": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide information on the scientific classification for the genus discussed in biology earlier? Additionally, I would like to know about all the rockets developed by SpaceX.",
        "relevant APIs": [],
        "query_id": 417
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "itemCount": "int",
                    "results": "list of dict"
                }
            }
        ],
        "query": "Please get the TLE data for all satellites in the 'Science' group using Celestrak. At the same time, could you search iDigBio records for any related to the species we are studying in biology?",
        "relevant APIs": [],
        "query_id": 418
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query the Celestrak GP Data using Satellite Name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "description": "Returns satellite data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str",
                            "countryCoverage": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the latest telemetry data for the Hubble Space Telescope and also find datasets related to my favorite species worldwide?",
        "relevant APIs": [],
        "query_id": 419
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "I want to know about any new research on machine learning available on arXiv and also get the sunrise time for the location of my business trip for tomorrow in 24-hour format.",
        "relevant APIs": [],
        "query_id": 420
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "Can you provide the latest articles related to my research area on arXiv and also find out when the sun sets in my favorite vacation spot today?",
        "relevant APIs": [],
        "query_id": 421
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int"
                }
            }
        ],
        "query": "Retrieve the latest three papers on the topic of my latest groundbreaking research from arXiv and count the number of earthquakes with a magnitude above a certain level that happened before the piano concert.",
        "relevant APIs": [],
        "query_id": 422
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str",
                        "status": "int"
                    },
                    "features": [
                        {
                            "type": "Feature",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find recent articles on AI safety from arXiv? Also, provide earthquake data for events that occurred this year with a magnitude greater than the earthquake my grandparents experienced.",
        "relevant APIs": [],
        "query_id": 423
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "catfacts",
                "api_name": "get_cat_facts",
                "api_description": "Retrieve daily cat facts.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "text": "string",
                            "_id": "string",
                            "updatedAt": "string",
                            "createdAt": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide some recent scientific articles related to my research area from arXiv? Also, I would love to learn a fun cat fact for a break.",
        "relevant APIs": [],
        "query_id": 424
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you list some datasets related to occurrences in the US? Also, could you find the derivative of the function I had on my calculus test earlier?",
        "relevant APIs": [],
        "query_id": 425
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all GBIF datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find the latest research articles about 'quantum computing' on arXiv? Also, could you fetch datasets pertaining to the topic of study in biology class using the GBIF API?",
        "relevant APIs": [],
        "query_id": 426
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "I need to get the TLE data for the satellite with catalog number our company is interested in. Additionally, could you simplify the math expression on the whiteboard?",
        "relevant APIs": [],
        "query_id": 427
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_special",
                "api_description": "Query GP data using special datasets.",
                "required_parameters": [
                    {
                        "name": "SPECIAL",
                        "type": "STRING",
                        "description": "Special dataset identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "1": "1 is the number of dimensions of a line.",
                    "2": "2 is the number of polynucleotide strands in a DNA double helix.",
                    "3": "3 is the number of sets needed to be won to win the whole match in volleyball."
                }
            }
        ],
        "query": "I am interested in the special dataset my team wants. Can you also provide me with facts about my 3 favorite numbers?",
        "relevant APIs": [],
        "query_id": 428
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v4_uuid",
                "api_description": "Generate version-4 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you provide details for a couple of users and generate some unique identifiers for them?",
        "relevant APIs": [],
        "query_id": 429
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user_in_format",
                "api_description": "Retrieve a random user in a specified format.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format to return the data in. Values can be 'json', 'xml', 'csv', 'yaml'.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "decode_uuid",
                "api_description": "Decode UUID to find its version and variant.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The UUID to decode."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you get a user profile in a specific format and analyze a unique identifier for details about its structure?",
        "relevant APIs": [],
        "query_id": 430
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user_in_format",
                "api_description": "Retrieve a random user in a specified format.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format to return the data in. Values can be 'json', 'xml', 'csv', 'yaml'.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "decode_uuid",
                "api_description": "Decode UUID to find its version and variant.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The UUID to decode."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you provide a random user profile and also decode this UUID 'b01eb720-171a-11ea-b949-73c91bba743d' to find its version and variant?",
        "relevant APIs": [],
        "query_id": 431
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v1_uuid",
                "api_description": "Generate version-1 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Could you fetch some information for a few people and also generate three version-1 UUIDs for unique identification?",
        "relevant APIs": [],
        "query_id": 432
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v4_uuid",
                "api_description": "Generate version-4 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you get details of two random female users, and generate some version-4 UUIDs to be assigned to different profiles?",
        "relevant APIs": [],
        "query_id": 433
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v1_uuid",
                "api_description": "Generate version-1 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you provide me with details of three random users and also create some unique identifiers?",
        "relevant APIs": [],
        "query_id": 434
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v4_uuid",
                "api_description": "Generate version-4 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you provide details of two random users and generate five version-4 UUIDs to be assigned to different profiles?",
        "relevant APIs": [],
        "query_id": 435
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user_in_format",
                "api_description": "Retrieve a random user in a specified format.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format to return the data in. Values can be 'json', 'xml', 'csv', 'yaml'.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "decode_uuid",
                "api_description": "Decode UUID to find its version and variant.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The UUID to decode."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "I need a random user profile in CSV format. Can you also decode a UUID for more details about its version and variant?",
        "relevant APIs": [],
        "query_id": 436
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v1_uuid",
                "api_description": "Generate version-1 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Could you fetch some random information for a set of people and also create some identifiers for them?",
        "relevant APIs": [],
        "query_id": 437
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_advice_by_id",
                "api_description": "Returns a specific advice slip by slip_id.",
                "required_parameters": [
                    {
                        "name": "slip_id",
                        "type": "INTEGER",
                        "description": "The unique ID of the advice slip.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_house_details",
                "api_description": "Get details of a specific Game of Thrones house.",
                "required_parameters": [
                    {
                        "name": "house_slug",
                        "type": "STRING",
                        "description": "Slug of the house."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "slug": "str",
                        "name": "str",
                        "members": [
                            {
                                "name": "str",
                                "slug": "str"
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you find the advice slip with ID 100? Also, provide me with details about my favorite House from Game of Thrones.",
        "relevant APIs": [],
        "query_id": 438
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve multiple quotes from Breaking Bad.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_characters",
                "api_description": "Get the list of Game of Thrones characters with their quotes.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "I have a number in my head. Fetch that number of quotes from Breaking Bad and a list of Game of Thrones characters.",
        "query_id": 439
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I have 2 numbers in mind. I'm compiling inspirational quotes for a presentation. Can you fetch the first number I had in my mind for quotes from Breaking Bad and the second number I had in mind for quotes from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 440
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Search for quotes related to my favorite word and provide me with some random quotes from the design perspective.",
        "relevant APIs": [],
        "query_id": 441
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "I need to organize a quote session. The session rules specify I need a certain number of quotes. Can you fetch that many quotes from Breaking Bad and a random one from the Quotes on Design?",
        "relevant APIs": [],
        "query_id": 442
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ]
            }
        ],
        "query": "I'd like to get a couple of quotes from Tyrion Lannister. Also, can you find some quotes related to my favorite word using the Quotable API?",
        "query_id": 443
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            }
        ],
        "query": "I'm looking for advice related to the word I learned today and could you also share 3 quotes from Breaking Bad?",
        "relevant_APIs": [
            "search_advice",
            "get_multiple_quotes"
        ],
        "query_id": 444
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I have 2 numbers in mind. I'm compiling inspirational quotes for a presentation. Can you fetch 3 quotes from Breaking Bad and second number I had in my mind for quotes from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 445
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve multiple quotes from Breaking Bad.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_random_quotes",
                "api_description": "Get multiple random quotes from Game of Thrones.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of random quotes to return.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            }
        ],
        "query": "I have a favorite number. Please fetch that number of quotes each from Breaking Bad and Game of Thrones.",
        "query_id": 446
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "sentence": "str",
                        "character": {
                            "name": "str",
                            "slug": "str",
                            "house": {
                                "name": "str",
                                "slug": "str"
                            }
                        }
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "I'd like to see some quotes by my favorite Game of Thrones character and mix them with random quotes from design.",
        "relevant APIs": [],
        "query_id": 447
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "str",
                    "author": "str"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I need a random Breaking Bad quote and a Ron Swanson quote that contains the word that my family was talking about over dinner for a themed night.",
        "relevant APIs": [],
        "query_id": 448
    },
    {
        "api_list": [
            {
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "Can you find me a random quote from Kanye West and search for Ron Swanson quotes that mention my favorite meal?",
        "relevant APIs": [],
        "query_id": 449
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm having a tough day. Give me a few wise words from my favorite character in Game of Thrones and a Ron Swanson quote to cheer me up.",
        "relevant APIs": [],
        "query_id": 450
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            }
        ],
        "query": "I'm looking for advice related to 'courage' and could you also share as many quotes as I have family members from Breaking Bad?",
        "relevant_APIs": [
            "search_advice",
            "get_multiple_quotes"
        ],
        "query_id": 451
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "content": "string",
                            "author": "string",
                            "tags": [
                                "string"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "I'd like a random Kanye West quote and a quote that mentions my manager's favorite word.",
        "relevant APIs": [],
        "query_id": 452
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_advice_by_id",
                "api_description": "Returns a specific advice slip by slip_id.",
                "required_parameters": [
                    {
                        "name": "slip_id",
                        "type": "INTEGER",
                        "description": "The unique ID of the advice slip.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_house_details",
                "api_description": "Get details of a specific Game of Thrones house.",
                "required_parameters": [
                    {
                        "name": "house_slug",
                        "type": "STRING",
                        "description": "Slug of the house."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "slug": "str",
                        "name": "str",
                        "members": [
                            {
                                "name": "str",
                                "slug": "str"
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you find the advice slip with ID I had in mind? Also, provide me with details about my favorite House from Game of Thrones.",
        "relevant APIs": [],
        "query_id": 453
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I have a number in my head. I'd like to see this number of quotes from Breaking Bad and also hear something unique Kanye West has said.",
        "relevant APIs": [],
        "query_id": 454
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "sentence": "str",
                        "character": {
                            "name": "str",
                            "slug": "str",
                            "house": {
                                "name": "str",
                                "slug": "str"
                            }
                        }
                    }
                ]
            }
        ],
        "query": "I'm looking for advice related to my favorite topic, can you find some advice slips mentioning my favorite topic? Also, provide me with some quotes from Tyrion Lannister.",
        "relevant APIs": [],
        "query_id": 455
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I am working on improving my life. Can you search for any advice on my favorite topic and provide me with a Kanye West quote?",
        "relevant APIs": [],
        "query_id": 456
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I have 2 numbers in mind. I'm compiling inspirational quotes for a presentation. Can you fetch first number I had in my mind for quotes from Breaking Bad and 2 quotes from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 457
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "category_name": "Inspiration",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ]
            }
        ],
        "query": "Get me a random quote from Breaking Bad and quotes by my favorite character from Game of Thrones.",
        "query_id": 458
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "string",
                        "author": "string"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "list_quotes",
                "api_description": "Get all quotes matching a given query with pagination and sorting options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    },
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "dateAdded"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "content": "string",
                            "author": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I have a special number in mind. I need this many quotes from Breaking Bad and the same number of inspirational quotes from different authors, can you provide them?",
        "relevant APIs": [],
        "query_id": 459
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_advice_by_id",
                "api_description": "Returns a specific advice slip by slip_id.",
                "required_parameters": [
                    {
                        "name": "slip_id",
                        "type": "INTEGER",
                        "description": "The unique ID of the advice slip.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_house_details",
                "api_description": "Get details of a specific Game of Thrones house.",
                "required_parameters": [
                    {
                        "name": "house_slug",
                        "type": "STRING",
                        "description": "Slug of the house."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "slug": "str",
                        "name": "str",
                        "members": [
                            {
                                "name": "str",
                                "slug": "str"
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you find the advice slip with ID I had in mind? Also, provide me with details about House Stark from Game of Thrones.",
        "relevant APIs": [],
        "query_id": 460
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            }
        ],
        "query": "I'm looking for advice related to the word I learned today and could you also share as many quotes as I have family members from Breaking Bad?",
        "relevant_APIs": [
            "search_advice",
            "get_multiple_quotes"
        ],
        "query_id": 461
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_by_date",
                "api_description": "Get Carbon Intensity data for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me the carbon intensity for my birthday in Great Britain and provide the stock transaction report for that day from the U.S. House of Representatives?",
        "relevant APIs": [],
        "query_id": 462
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            }
        ],
        "query": "I'd like to know the carbon intensity statistics during the week of my wedding in the UK and also get the current market price of a 2018 Volkswagen Golf in Brazil.",
        "relevant APIs": [],
        "query_id": 463
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "device_id": "string",
                    "feeds": "object"
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide the current carbon intensity for the UK along with the latest PM2.5 measurement using my device ID?",
        "query_id": 464
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "modelos": [
                        {
                            "code": "int",
                            "name": "str"
                        }
                    ],
                    "anos": [
                        {
                            "code": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_wmis_for_manufacturer",
                "api_description": "Get the World Manufacturer Identifier for a specified manufacturer.",
                "required_parameters": [
                    {
                        "name": "manufacturer",
                        "type": "STRING",
                        "description": "Manufacturer name or ID"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "ManufacturerName": "str",
                            "WMI": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the different models available for my first car brand in the FIPE database? Also, can you provide the World Manufacturer Identifier for Honda?",
        "relevant APIs": [],
        "query_id": 465
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": [
                    {
                        "category": "string",
                        "location": {
                            "latitude": "string",
                            "longitude": "string",
                            "street": {
                                "id": "number",
                                "name": "string"
                            }
                        },
                        "context": "string",
                        "persistent_id": "string",
                        "id": "string",
                        "location_type": "string",
                        "month": "string"
                    }
                ]
            }
        ],
        "query": "What is the current carbon intensity in Great Britain? Also, can you provide a list of street-level crimes near my latitude and longitude for the current month?",
        "relevant APIs": [],
        "query_id": 466
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_project_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the devices in the specified project.",
                "required_parameters": [
                    {
                        "name": "project",
                        "type": "STRING",
                        "description": "Project name.",
                        "default": "airbox"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "feeds": "array"
                }
            }
        ],
        "query": "What are the stock transactions reported on January 1st, 2021, and what is the latest measurement from the project I was examining?",
        "relevant APIs": [],
        "query_id": 467
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "modelos": [
                        {
                            "code": "int",
                            "name": "str"
                        }
                    ],
                    "anos": [
                        {
                            "code": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_wmis_for_manufacturer",
                "api_description": "Get the World Manufacturer Identifier for a specified manufacturer.",
                "required_parameters": [
                    {
                        "name": "manufacturer",
                        "type": "STRING",
                        "description": "Manufacturer name or ID"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "ManufacturerName": "str",
                            "WMI": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the different models available for the Honda brand in the FIPE database? Also, can you provide the World Manufacturer Identifier for my first car brand?",
        "relevant APIs": [],
        "query_id": 468
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "decode_vin",
                "api_description": "Decode a VIN to get detailed vehicle information.",
                "required_parameters": [
                    {
                        "name": "vin",
                        "type": "STRING",
                        "description": "Vehicle Identification Number"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "modelyear",
                        "type": "INTEGER",
                        "description": "Year of the Vehicle model"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "VIN": "string",
                            "Make": "string",
                            "Model": "string",
                            "Year": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "What's the current carbon intensity level in the UK? Also, can you decode the my wife's VIN to get more details about the vehicle?",
        "relevant APIs": [],
        "query_id": 469
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "string"
                        ],
                        "domains": [
                            "string"
                        ],
                        "country": "string",
                        "alpha_two_code": "string",
                        "name": "string"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me with carbon intensity statistics from 2023-01-01T00:00Z to 2023-01-02T00:00Z. Also, find some universities starting with the name of my alma mater but limit the results to 3.",
        "relevant APIs": [],
        "query_id": 470
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "specific_force",
                "api_description": "Returns detailed information about a specific police force given its ID.",
                "required_parameters": [
                    "force_id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "description": "str",
                    "url": "str"
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I need detailed information about my local police force. Additionally, can you fetch the stock transaction report for the date of the IPO of my business?",
        "relevant APIs": [],
        "query_id": 471
    },
    {
        "api_list": [
            {
                "tool_name": "openlibrary",
                "api_name": "get_author_by_id",
                "api_description": "Retrieve author details and their works by author identifier.",
                "required_parameters": [
                    {
                        "name": "author_id",
                        "type": "STRING",
                        "description": "The author's Open Library ID."
                    }
                ],
                "category_name": "OpenData",
                "optional_parameters": []
            },
            {
                "tool_name": "vehicles",
                "api_name": "get_models_for_make",
                "api_description": "Get Models for a specified make.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "Make name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me the list of works by my favorite author. Additionally, what vehicle models are available under the make 'Toyota'?",
        "relevant APIs": [],
        "query_id": 472
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            }
        ],
        "query": "I'd like to know the carbon intensity statistics during the week of my wedding in the UK and also get the current market price of my first car in Brazil.",
        "relevant APIs": [],
        "query_id": 473
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_by_date",
                "api_description": "Get Carbon Intensity data for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "recent_changes",
                "api_description": "Get recent changes across Open Library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of entries."
                    },
                    {
                        "name": "kind",
                        "type": "STRING",
                        "description": "Type of change."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date for changes in YYYY/MM/DD format."
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Can you tell me the carbon intensity on my bestfriend's birthday and also what were the recent changes in the Open Library around that date?",
        "query_id": 474
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_all_makes",
                "api_description": "Get a list of all vehicle makes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "Make_ID": "integer",
                            "Make_Name": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the carbon intensity statistics for London from the dates of my stay? Furthermore, I would like a list of all vehicle makes available.",
        "relevant APIs": [],
        "query_id": 475
    },
    {
        "api_list": [
            {
                "tool_name": "openlibrary",
                "api_name": "get_author_by_id",
                "api_description": "Retrieve author details and their works by author identifier.",
                "required_parameters": [
                    {
                        "name": "author_id",
                        "type": "STRING",
                        "description": "The author's Open Library ID."
                    }
                ],
                "category_name": "OpenData",
                "optional_parameters": []
            },
            {
                "tool_name": "vehicles",
                "api_name": "get_models_for_make",
                "api_description": "Get Models for a specified make.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "Make name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me the list of works by my favorite author. Additionally, what vehicle models are available under the make of my current car's brand?",
        "relevant APIs": [],
        "query_id": 476
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "specific_force",
                "api_description": "Returns detailed information about a specific police force given its ID.",
                "required_parameters": [
                    "force_id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "description": "str",
                    "url": "str"
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I need detailed information about the Leicestershire police force. Additionally, can you fetch the stock transaction report for the date of the IPO of my business?",
        "relevant APIs": [],
        "query_id": 477
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_generation_mix_current",
                "api_description": "Get generation mix for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "generationmix": [
                            {
                                "fuel": "string",
                                "perc": "number"
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "string",
                        "name": "string"
                    }
                ]
            }
        ],
        "query": "Can you provide the current electricity generation mix in Great Britain? Also, could you list all the police forces in the UK?",
        "relevant APIs": [],
        "query_id": 478
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "OpenData",
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide me with the latest air quality measurement from my specific device? Meanwhile, I am also interested to find all universities that contain 'Middle' in their name.",
        "relevant APIs": [],
        "query_id": 479
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search for books using the Open Library Search API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort order."
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language preference."
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for pagination."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page."
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "What is the current carbon intensity in Great Britain and can you suggest books related to my activism work?",
        "query_id": 480
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_project_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the devices in the specified project.",
                "required_parameters": [
                    {
                        "name": "project",
                        "type": "STRING",
                        "description": "Project name.",
                        "default": "airbox"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "feeds": "array"
                }
            }
        ],
        "query": "What are the stock transactions reported on the last day before I quit my job, and what is the latest measurement from the project I was examining?",
        "relevant APIs": [],
        "query_id": 481
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "string"
                        ],
                        "domains": [
                            "string"
                        ],
                        "country": "string",
                        "alpha_two_code": "string",
                        "name": "string"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me with carbon intensity statistics during the week of my past conference. Also, find some universities starting with the name of my alma mater but limit the results to 3.",
        "relevant APIs": [],
        "query_id": 482
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "string"
                        ],
                        "domains": [
                            "string"
                        ],
                        "country": "string",
                        "alpha_two_code": "string",
                        "name": "string"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Can you tell me the current carbon intensity and also find universities with the name of the one my nephew goes to?",
        "relevant APIs": [],
        "query_id": 483
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "modelos": [
                        {
                            "code": "int",
                            "name": "str"
                        }
                    ],
                    "anos": [
                        {
                            "code": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_wmis_for_manufacturer",
                "api_description": "Get the World Manufacturer Identifier for a specified manufacturer.",
                "required_parameters": [
                    {
                        "name": "manufacturer",
                        "type": "STRING",
                        "description": "Manufacturer name or ID"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "ManufacturerName": "str",
                            "WMI": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the different models available for my first car brand in the FIPE database? Also, can you provide the World Manufacturer Identifier for my first car brand?",
        "relevant APIs": [],
        "query_id": 484
    },
    {
        "api_list": [
            {
                "tool_name": "openlibrary",
                "api_name": "get_author_by_id",
                "api_description": "Retrieve author details and their works by author identifier.",
                "required_parameters": [
                    {
                        "name": "author_id",
                        "type": "STRING",
                        "description": "The author's Open Library ID."
                    }
                ],
                "category_name": "OpenData",
                "optional_parameters": []
            },
            {
                "tool_name": "vehicles",
                "api_name": "get_models_for_make",
                "api_description": "Get Models for a specified make.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "Make name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me the list of works by the author with the ID 'OL23919A'. Additionally, what vehicle models are available under the make of my current car's brand?",
        "relevant APIs": [],
        "query_id": 485
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "identifier": "str",
                            "title": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "crimes": [
                        {
                            "category": "str",
                            "location": {
                                "latitude": "str",
                                "longitude": "str",
                                "street": {
                                    "id": "int",
                                    "name": "str"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am interested in finding items from my favorite space organization on Archive.org. Could you help me search for these items? Also, what street-level crimes have been reported around my kids' school in the last month?",
        "relevant APIs": [],
        "query_id": 486
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "specific_force",
                "api_description": "Returns detailed information about a specific police force given its ID.",
                "required_parameters": [
                    "force_id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "description": "str",
                    "url": "str"
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I need detailed information about my local police force. Additionally, can you fetch the stock transaction report for 01/01/2021?",
        "relevant APIs": [],
        "query_id": 487
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "identifier": "str",
                            "title": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "crimes": [
                        {
                            "category": "str",
                            "location": {
                                "latitude": "str",
                                "longitude": "str",
                                "street": {
                                    "id": "int",
                                    "name": "str"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am interested in finding items from my favorite space organization on Archive.org. Could you help me search for these items? Also, what street-level crimes have been reported around latitude 51.5074, longitude -0.1278 in the last month?",
        "relevant APIs": [],
        "query_id": 488
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "string"
                        ],
                        "domains": [
                            "string"
                        ],
                        "country": "string",
                        "alpha_two_code": "string",
                        "name": "string"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me with carbon intensity statistics during the week of my past conference. Also, find some universities starting with 'Stanford' but limit the results to 3.",
        "relevant APIs": [],
        "query_id": 489
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "identifier": "str",
                            "title": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "crimes": [
                        {
                            "category": "str",
                            "location": {
                                "latitude": "str",
                                "longitude": "str",
                                "street": {
                                    "id": "int",
                                    "name": "str"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am interested in finding items from the NASA collection on Archive.org. Could you help me search for these items? Also, what street-level crimes have been reported around my kids' school in the last month?",
        "relevant APIs": [],
        "query_id": 490
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            }
        ],
        "query": "I'd like to know the carbon intensity statistics over the past week in the UK and also get the current market price of my first car in Brazil.",
        "relevant APIs": [],
        "query_id": 491
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am researching the impact of technological advancements on carbon emissions. Can you find items related to my school project in the Archive.org collection and also provide the current carbon intensity data for Great Britain?",
        "relevant APIs": [],
        "query_id": 492
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_project_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the devices in the specified project.",
                "required_parameters": [
                    {
                        "name": "project",
                        "type": "STRING",
                        "description": "Project name.",
                        "default": "airbox"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "feeds": "array"
                }
            }
        ],
        "query": "What are the stock transactions reported on the last day before I quit my job, and what is the latest measurement from the 'airbox' project?",
        "relevant APIs": [],
        "query_id": 493
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_player_game_log",
                "api_description": "Retrieve game log data for the specified player, season, and game type.",
                "required_parameters": [
                    {
                        "name": "player_id",
                        "type": "INTEGER",
                        "description": "The ID of the player.",
                        "default": null
                    },
                    {
                        "name": "season",
                        "type": "INTEGER",
                        "description": "The season (e.g., 20212022).",
                        "default": null
                    },
                    {
                        "name": "game_type",
                        "type": "INTEGER",
                        "description": "The game type (e.g., 2 for playoffs, 1 for regular season).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "games": [
                        {
                            "date": "str",
                            "opponent": "str",
                            "points": "int",
                            "assists": "int",
                            "goals": "int"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "Can you provide the game log for my dad's favorite NHL player for the current season including both regular season and playoff games? Additionally, list all football competitions available worldwide.",
        "relevant APIs": [],
        "query_id": 494
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve standings for the specified date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "standings": [
                        {
                            "team_name": "str",
                            "points": "int",
                            "wins": "int",
                            "losses": "int"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "What were the NHL standings on my cousin's first day of school, and what football competitions are currently available in Europe?",
        "relevant APIs": [],
        "query_id": 495
    },
    {
        "api_list": [
            {
                "tool_name": "citybikes",
                "api_name": "get_networks",
                "api_description": "Retrieve a list of all available bike sharing networks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Sports"
            },
            {
                "tool_name": "nhl",
                "api_name": "get_schedule",
                "api_description": "Get schedule data for a specified date range or current day.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you list all the bike-sharing networks available right now? Also, could you provide the NHL schedule for the dates from the start and end of my business trip?",
        "query_id": 496
    },
    {
        "api_list": [
            {
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Sports"
            },
            {
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve NHL standings for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you provide the bike sharing network details for my local bike network and also let me know what the NHL standings were on November 8, 2023?",
        "query_id": 497
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike-sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "network": {
                        "id": "str",
                        "name": "str",
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "free_bikes": "int",
                                "empty_slots": "int"
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available football competitions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "int",
                            "name": "str",
                            "area": {
                                "id": "int",
                                "name": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you give me the details of the my local bike-sharing network and a list of all football competitions?",
        "relevant APIs": [],
        "query_id": 498
    },
    {
        "api_list": [
            {
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Sports"
            },
            {
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve NHL standings for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you provide the bike sharing network details for 'velib' and also let me know what the NHL standings were on my anniversary date?",
        "query_id": 499
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "citybikes",
                "api_name": "get_networks",
                "api_description": "Retrieve a list of all available bike-sharing networks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "networks": [
                        {
                            "id": "str",
                            "name": "str",
                            "href": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available football competitions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "int",
                            "name": "str",
                            "area": {
                                "id": "int",
                                "name": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of all the bike-sharing networks worldwide with fields=id,name,href and all available football competitions?",
        "relevant APIs": [],
        "query_id": 500
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve standings for the specified date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "standings": [
                        {
                            "team_name": "str",
                            "points": "int",
                            "wins": "int",
                            "losses": "int"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "What were the NHL standings on my cousin's first day of school, and what football competitions are currently available in my local continent?",
        "relevant APIs": [],
        "query_id": 501
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve standings for the specified date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "standings": [
                        {
                            "team_name": "str",
                            "points": "int",
                            "wins": "int",
                            "losses": "int"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "What were the NHL standings on November 8, 2023, and what football competitions are currently available in my local continent?",
        "relevant APIs": [],
        "query_id": 502
    },
    {
        "api_list": [
            {
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Sports"
            },
            {
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve NHL standings for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you provide the bike sharing network details for my local bike network and also let me know what the NHL standings were on my anniversary date?",
        "query_id": 503
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": [
                        {
                            "Award ID": "int",
                            "Recipient Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the population data for my native state for the year 2020? Additionally, search for government spending awards related to 'infrastructure' projects and list them by recipient name in descending order.",
        "relevant APIs": [],
        "query_id": 504
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_elections",
                "api_description": "Get one page of elections.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "objects": []
                }
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide me with a list of upcoming elections in Canada and the most recent population data for my home state in the USA?",
        "relevant APIs": [],
        "query_id": 505
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fiscal_year": "int",
                    "name": "str",
                    "abbreviation": "str",
                    "budget_authority_amount": "float",
                    "obligation": "float",
                    "outlay": "float",
                    "children": []
                }
            }
        ],
        "query": "What is the latest population of the United States? Also, can you provide an overview of the Department of Defense using the top-tier agency code my boss needs?",
        "relevant APIs": [],
        "query_id": 506
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm researching the legal implications of water legislation in British Columbia. Can you search for all contents related to the term my intern suggested? Also, could you get the latest national population statistics for the U.S.?",
        "relevant APIs": [],
        "query_id": 507
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need the legal document with the index ID my manager requested and document ID '01009_01' in XML format from British Columbia's repository. Additionally, can you provide the population data for the state level of the U.S. for the year 2016?",
        "relevant APIs": [],
        "query_id": 508
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of individuals currently on the FBI's most wanted list in my hometown, and also search for any recent Federal Register documents related to new immigration policies?",
        "relevant APIs": [],
        "query_id": 509
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": "object"
                }
            }
        ],
        "query": "I want to access the comprehensive election polls database for various polls in Germany. Additionally, can you provide information about representatives and boundaries for my grandma's postal code?",
        "relevant APIs": [],
        "query_id": 510
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of individuals currently on the FBI's most wanted list in New York, and also search for any recent Federal Register documents related to my grandpa's favorite topic?",
        "relevant APIs": [],
        "query_id": 511
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": {},
                    "representatives_centroid": {},
                    "boundaries": [],
                    "representatives": []
                }
            }
        ],
        "query": "I want to know the current population of the United States and find representatives for my postal code in Canada.",
        "relevant APIs": [],
        "query_id": 512
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_pi_documents_by_date",
                "api_description": "Get all the documents that were on public inspection on a given date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in format YYYY-MM-DD."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you tell me about any crimes committed by individuals on the FBI wanted list retrieved the page my boss requested? Also, provide details on public inspection documents available on October 1, 2023.",
        "relevant APIs": [],
        "query_id": 513
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_agency_data",
                "api_description": "Get basic data about agencies. Optionally filter by agency ID.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "agency_id",
                        "type": "STRING",
                        "description": "ID of the agency.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "id": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Are there any wanted fugitives listed by my FBI's local field office, and can you provide basic details about U.S. government agencies from the Federal Register?",
        "relevant APIs": [],
        "query_id": 514
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need the legal document with index ID 'statreg' and the document ID the team specified in the meeting in XML format from British Columbia's repository. Additionally, can you provide the population data for the state level of the U.S. for the year 2016?",
        "relevant APIs": [],
        "query_id": 515
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "fetch_single_document",
                "api_description": "Fetch single Federal Register document using the FR document number.",
                "required_parameters": [
                    {
                        "name": "fr_document_number",
                        "type": "STRING",
                        "description": "Federal Register document number."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "document_number": "string",
                    "title": "string",
                    "agency": "array",
                    "abstract": "string",
                    "action": "string",
                    "dates": "string",
                    "page_range": "string",
                    "type": "string",
                    "html_url": "string",
                    "pdf_url": "string"
                }
            }
        ],
        "query": "Can you provide detailed information from the entire election polls database and fetch the document details from the Federal Register document with the number my manager requested?",
        "relevant APIs": [],
        "query_id": 516
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_pi_documents_by_date",
                "api_description": "Get all the documents that were on public inspection on a given date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in format YYYY-MM-DD."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you tell me about any crimes committed by individuals on the FBI wanted list retrieved the page my boss requested? Also, provide details on public inspection documents available on the data the head inspector requested.",
        "relevant APIs": [],
        "query_id": 517
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": [
                        {
                            "Award ID": "int",
                            "Recipient Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the population data for my native state for my favorite year? Additionally, search for government spending awards related to projects my mangager requested and list them by recipient name in descending order.",
        "relevant APIs": [],
        "query_id": 518
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Search for occurrences of a query term within an aspect of the British Columbia law and bylaw content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": "Search results data in XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the DAWUM election polls database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "Last update date as a string"
            }
        ],
        "query": "Search the British Columbia legal documents for any mentions of topics related to my research report and also check when the DAWUM database of election polls was last updated.",
        "relevant APIs": [],
        "query_id": 519
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_pi_documents_by_date",
                "api_description": "Get all the documents that were on public inspection on a given date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in format YYYY-MM-DD."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you tell me about any crimes committed by individuals on the FBI wanted list retrieved on page 3? Also, provide details on public inspection documents available on the data the head inspector requested.",
        "relevant APIs": [],
        "query_id": 520
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of individuals currently on the FBI's most wanted list in my hometown, and also search for any recent Federal Register documents related to my grandpa's favorite topic?",
        "relevant APIs": [],
        "query_id": 521
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "iso2Code": "str",
                    "name": "str",
                    "region": {
                        "id": "str",
                        "value": "str"
                    },
                    "adminregion": {
                        "id": "str",
                        "value": "str"
                    },
                    "incomeLevel": {
                        "id": "str",
                        "value": "str"
                    },
                    "lendingType": {
                        "id": "str",
                        "value": "str"
                    },
                    "capitalCity": "str",
                    "longitude": "str",
                    "latitude": "str"
                }
            }
        ],
        "query": "What is the latest population data for the United States? Also, can you provide information about the country where my next business trip is?",
        "relevant APIs": [],
        "query_id": 522
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need the legal document with the index ID my manager requested and the document ID the team in XML format from British Columbia's repository. Additionally, can you provide the population data for the state level of the U.S. for the year larry requested?",
        "relevant APIs": [],
        "query_id": 523
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "What are the details of persons wanted by the FBI from my local field office?",
        "relevant APIs": [],
        "query_id": 524
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the database for election polls.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Last_Update": "string"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_indicator_data",
                "api_description": "Retrieve indicator data for a specific country and indicator.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "ISO code of the country.",
                        "default": "BR"
                    },
                    {
                        "name": "indicator_code",
                        "type": "STRING",
                        "description": "Code of the indicator.",
                        "default": "NY.GDP.MKTP.CD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date or date range for the data.",
                        "default": ""
                    },
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "pages": "int",
                    "per_page": "int",
                    "total": "int",
                    "indicators": [
                        {
                            "indicator": {
                                "id": "str",
                                "value": "str"
                            },
                            "country": {
                                "id": "str",
                                "value": "str"
                            },
                            "value": "float",
                            "date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the latest update date for the election polls, and what was the GDP of the United States in the year my history project requires?",
        "relevant APIs": [],
        "query_id": 525
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier in the British Columbia law content.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": "Document content in either HTML or XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the DAWUM election polls database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "Last update date as a string"
            }
        ],
        "query": "Retrieve the specific document with index ID my boss requested and document ID my boss requested from the British Columbia law repository, and check when the DAWUM database was last updated for any new election poll information.",
        "relevant APIs": [],
        "query_id": 526
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": [
                        {
                            "Award ID": "int",
                            "Recipient Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the population data for California for the year 2020? Additionally, search for government spending awards related to projects my mangager requested and list them by recipient name in descending order.",
        "relevant APIs": [],
        "query_id": 527
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier in the British Columbia law content.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": "Document content in either HTML or XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the DAWUM election polls database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "Last update date as a string"
            }
        ],
        "query": "Retrieve the specific document with index ID my boss requested and document ID '01009_01' from the British Columbia law repository, and check when the DAWUM database was last updated for any new election poll information.",
        "relevant APIs": [],
        "query_id": 528
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need the legal document with index ID 'statreg' and document ID '01009_01' in XML format from British Columbia's repository. Additionally, can you provide the population data for the state level of the U.S. for the year larry requested?",
        "relevant APIs": [],
        "query_id": 529
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the database for election polls.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Last_Update": "string"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "results": "array"
                }
            }
        ],
        "query": "When was the last time the election polls database was updated, and can you search for documents related to my school project in the Federal Register?",
        "relevant APIs": [],
        "query_id": 530
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "pages": "int",
                    "per_page": "int",
                    "total": "int",
                    "countries": [
                        {
                            "id": "str",
                            "name": "str",
                            "region": "str",
                            "incomeLevel": "str",
                            "lendingType": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide information on the latest German election polls? Also, what are some key statistics about my wife's home country according to the World Bank?",
        "relevant APIs": [],
        "query_id": 531
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier in the British Columbia law content.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": "Document content in either HTML or XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the DAWUM election polls database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "Last update date as a string"
            }
        ],
        "query": "Retrieve the specific document with index ID 'statreg' and document ID my boss requested from the British Columbia law repository, and check when the DAWUM database was last updated for any new election poll information.",
        "relevant APIs": [],
        "query_id": 532
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": [
                        {
                            "Award ID": "int",
                            "Recipient Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the population data for California for my favorite year? Additionally, search for government spending awards related to 'infrastructure' projects and list them by recipient name in descending order.",
        "relevant APIs": [],
        "query_id": 533
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "long_weekends",
                "api_description": "Retrieve long weekends for a given year and country.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "INTEGER",
                        "description": "The year to check for long weekends."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "startDate": "str",
                        "endDate": "str",
                        "dayCount": "int",
                        "needExtraDay": "bool"
                    }
                ]
            },
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I need information on long weekends in France. Additionally, could you provide the bank holidays this year?",
        "relevant APIs": [],
        "query_id": 534
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "public_holidays",
                "api_description": "Retrieve public holidays for a given year and country.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "INTEGER",
                        "description": "The year to retrieve public holidays for."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "date": "str",
                        "localName": "str",
                        "name": "str",
                        "countryCode": "str",
                        "fixed": "bool",
                        "global": "bool",
                        "counties": [
                            "str"
                        ],
                        "launchYear": "int",
                        "types": [
                            "str"
                        ]
                    }
                ]
            },
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about the public holidays next year in my country and also provide me the bank holidays for Scotland?",
        "relevant APIs": [],
        "query_id": 535
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "public_holidays",
                "api_description": "Retrieve public holidays for a given year and country.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "INTEGER",
                        "description": "The year to retrieve public holidays for."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "date": "str",
                        "localName": "str",
                        "name": "str",
                        "countryCode": "str",
                        "fixed": "bool",
                        "global": "bool",
                        "counties": [
                            "str"
                        ],
                        "launchYear": "int",
                        "types": [
                            "str"
                        ]
                    }
                ]
            },
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about the public holidays next year in the United States and also provide me the bank holidays for Scotland?",
        "relevant APIs": [],
        "query_id": 536
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents in DigitalOcean.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {}
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Are there any unresolved issues with DigitalOcean services, and could you provide a screenshot of my favorite website?",
        "relevant APIs": [],
        "query_id": 537
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you estimate the nationality for a list of my friends? Also, I want to know the various color formats and contrasting text colors for the color 'coral'.",
        "relevant APIs": [],
        "query_id": 538
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "country": "str",
                    "http": "str",
                    "tls": "str",
                    "warp": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "shorturl": "string"
                }
            }
        ],
        "query": "Can you retrieve some trace information from Cloudflare and provide a shortened URL for 'https://www.example.com'?",
        "relevant APIs": [],
        "query_id": 539
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "I want to check DigitalOcean for specific information and also get a favicon.",
        "relevant APIs": [],
        "query_id": 540
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you estimate the age of someone named 'Sarah' from France, and also retrieve the metadata of her favorite website?",
        "relevant APIs": [],
        "query_id": 541
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "Can you estimate the ages of Emily, Michael, and Emma in the UK? Also, can you provide the detailed browser and device information for the user agent ?",
        "relevant APIs": [],
        "query_id": 542
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "country": "str",
                    "http": "str",
                    "tls": "str",
                    "warp": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "shorturl": "string"
                }
            }
        ],
        "query": "Can you tell me my current public IP address and also provide a shortened URL for a website I frequently use?",
        "relevant APIs": [],
        "query_id": 543
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "I have a list of names of my closest friends. Can you estimate their ages while also taking a screenshot of their favorite website?",
        "relevant APIs": [],
        "query_id": 544
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you tell me if there are any unresolved incidents with DigitalOcean and also fetch the WHOIS data for the domain I want ",
        "relevant APIs": [],
        "query_id": 545
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "I want to check if DigitalOcean has any unresolved incidents and also get the favicon of google.com.",
        "relevant APIs": [],
        "query_id": 546
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "country": "str",
                    "http": "str",
                    "tls": "str",
                    "warp": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "shorturl": "string"
                }
            }
        ],
        "query": "Can you retrieve some trace information and also shorten a URL for me?",
        "relevant APIs": [],
        "query_id": 547
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me the probable nationality of the name 'Alice' and also provide detailed trace information about my current internet connection, including IP address and country?",
        "relevant APIs": [],
        "query_id": 548
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents in DigitalOcean.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {}
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Are there any unresolved issues with the servies? and could you provide a screenshot of GitHub's homepage?",
        "relevant APIs": [],
        "query_id": 549
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you estimate the nationality for a list of my friends names? Also, I want to know the various color formats and contrasting text colors of my favorite color.",
        "relevant APIs": [],
        "query_id": 550
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide me with the metadata information for GitHub's homepage, 'https://github.com'? Also, can you tell me the possible nationalities associated with the name of my friend?",
        "relevant APIs": [],
        "query_id": 551
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "I want to check if DigitalOcean has any unresolved incidents and also get a favicon from some website.",
        "relevant APIs": [],
        "query_id": 552
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "Can you estimate the ages of my list of friends from the UK? Also, can you provide the detailed browser and device information for the user agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'?",
        "relevant APIs": [],
        "query_id": 553
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "What is the estimated age of someone named John in the US and can you provide information about a user agent?",
        "relevant APIs": [],
        "query_id": 554
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "I have a list of names of my friends. Can you estimate their ages while also taking a screenshot of the website 'https://github.com'?",
        "relevant APIs": [],
        "query_id": 555
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the DigitalOcean status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {}
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "What is the current status of DigitalOcean services, and can you get metadata for a website I like",
        "relevant APIs": [],
        "query_id": 556
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str",
                    "http": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you retrieve trace information from Cloudflare to see if it shows my IP as part of a known corporate network, and also check the WHOIS data for the domain 'corporate.com' to confirm its details?",
        "relevant APIs": [],
        "query_id": 557
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you estimate the age of my friend, and also retrieve the metadata of her favorite website?",
        "relevant APIs": [],
        "query_id": 558
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I need a screenshot of my favorite websites homepage. Also, can you predict the nationalities for the names 'emma' and 'liam'?",
        "relevant APIs": [],
        "query_id": 559
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me the probable nationality of someone and also provide detailed trace information about my current internet connection, including IP address and country?",
        "relevant APIs": [],
        "query_id": 560
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "What is the estimated age of someone I know and can you provide information about a user agent?",
        "relevant APIs": [],
        "query_id": 561
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide me with the metadata information for my favorite website? Also, can you tell me the possible nationalities associated with the name 'johnson'?",
        "relevant APIs": [],
        "query_id": 562
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you tell me specific infromation the Ocean and also fetch the WHOIS data for the domain example.com?",
        "relevant APIs": [],
        "query_id": 563
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str",
                    "http": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you retrieve some trace information and also check WHOIS data for a domain?",
        "relevant APIs": [],
        "query_id": 564
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you estimate the age of my best friend from Europe, and also retrieve the metadata of her favorite website 'www.github.com'?",
        "relevant APIs": [],
        "query_id": 565
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "Can you estimate the ages of my friends? Also, can you provide the detailed browser and device information for the user agent?",
        "relevant APIs": [],
        "query_id": 566
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "I have a list of names: ['Emma', 'Olivia', 'Liam']. Can you estimate their ages while also taking a screenshot of their favorite website?",
        "relevant APIs": [],
        "query_id": 567
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str",
                    "http": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you retrieve trace information from Cloudflare to see if it shows my IP as part of a known corporate network, and also check the WHOIS data for a domain to confirm its details?",
        "relevant APIs": [],
        "query_id": 568
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I need a screenshot of the YouTube homepage, 'youtube.com'. Also, can you predict the nationalities of my friends with specific first names?",
        "relevant APIs": [],
        "query_id": 569
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you estimate the nationality for a list of names: 'Anna', 'Raj', and 'Wei'? Also, I want to know the various color formats and contrasting text colors for my favorite color'.",
        "relevant APIs": [],
        "query_id": 570
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I need a screenshot of the YouTube homepage. Also, can you predict the nationalities of my friends with cool names?",
        "relevant APIs": [],
        "query_id": 571
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you provide some trace information and tell me the probable nationality of someone?",
        "relevant APIs": [],
        "query_id": 572
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "What is the estimated age of my best friend and what detailed information can you provide about the user agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36'?",
        "relevant APIs": [],
        "query_id": 573
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "basic": {
                                "name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {
                            "id": "string",
                            "companynumb": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find any healthcare providers with the first name of my doctor and also provide some recent drug adverse event reports?",
        "relevant APIs": [],
        "query_id": 574
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "Can you find makeup products that meet my ethical standards with a rating above 4.0? Also, could you get me recent adverse event reports for drugs, limiting the results to 5?",
        "relevant APIs": [],
        "query_id": 575
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_udi",
                "api_description": "Retrieve device unique device identifier (UDI) information.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "What are some lipsticks available from my girlfriend's favorite brand? Additionally, can you provide details on some medical devices using FDA's unique device identifiers (UDIs), limiting to 3 records?",
        "relevant APIs": [],
        "query_id": 576
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Can you provide detailed information about a specific healthcare article with the title mentioned earlier and also show recent drug adverse event reports using 5 records?",
        "relevant APIs": [],
        "query_id": 577
    },
    {
        "api_list": [
            {
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                },
                "category_name": "Health",
                "optional_parameters": []
            },
            {
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                },
                "category_name": "Health",
                "required_parameters": []
            }
        ],
        "query": "Can you retrieve the detailed article content my mother was looking for on HealthCare.gov and find healthcare providers with the last name 'Smith' in New York using the NPPES API?",
        "relevant APIs": [],
        "query_id": 578
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you find me makeup products that are vegan and cruelty-free under my budget? Also, I need the contact details of healthcare providers named 'Smith' located in California.",
        "relevant APIs": [],
        "query_id": 579
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_collection",
                "api_description": "Retrieve a list of post objects by content type.",
                "required_parameters": [
                    {
                        "name": "content_type",
                        "type": "STRING",
                        "description": "The type of content like 'articles', 'blog', 'questions', etc."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "content-type": "array"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Find available info from the specific section I want from HealthCare.gov and provide information on the recent 10 event reports for the specific topic my manager wanted.",
        "relevant APIs": [],
        "query_id": 580
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you find me makeup products that meet my ethical standards under $25? Also, I need the contact details of healthcare providers named 'Smith' located in California.",
        "relevant APIs": [],
        "query_id": 581
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "basic": {
                                "name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {
                            "mdr_report_key": "string",
                            "report_number": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I need a list of healthcare organizations named 'Health Corp' in my home state and some recent device adverse event reports.",
        "relevant APIs": [],
        "query_id": 582
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "Can you find makeup products that meet my ethical standards with a rating above the threshold my mom demanded? Also, could you get me recent adverse event reports for drugs, limiting the results to the amount my manager requested?",
        "relevant APIs": [],
        "query_id": 583
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "Can you find vegan and cruelty-free makeup products with a rating above 4.0? Also, could you get me recent adverse event reports for drugs, limiting the results to the amount my manager requested?",
        "relevant APIs": [],
        "query_id": 584
    },
    {
        "api_list": [
            {
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                },
                "category_name": "Health",
                "optional_parameters": []
            },
            {
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                },
                "category_name": "Health",
                "required_parameters": []
            }
        ],
        "query": "Can you retrieve the detailed article content about 'health insurance basics' on HealthCare.gov and find healthcare providers with the last name of my doctor in New York using the NPPES API?",
        "relevant APIs": [],
        "query_id": 585
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "string",
                    "url": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, product type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "brand": "str",
                        "name": "str",
                        "price": "str",
                        "price_sign": "str",
                        "currency": "str",
                        "image_link": "str",
                        "product_link": "str",
                        "website_link": "str",
                        "description": "str",
                        "rating": "float",
                        "category": "str",
                        "product_type": "str",
                        "tag_list": [
                            "str"
                        ],
                        "created_at": "str",
                        "updated_at": "str",
                        "product_api_url": "str",
                        "api_featured_image": "str",
                        "product_colors": [
                            "str"
                        ]
                    }
                ]
            }
        ],
        "query": "Can you provide details on a specific healthcare-related topic, such as accessibility, from HealthCare.gov, and also help me find makeup products that align with my makeup standards?",
        "relevant APIs": [],
        "query_id": 586
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_collection",
                "api_description": "Retrieve a list of post objects by content type.",
                "required_parameters": [
                    {
                        "name": "content_type",
                        "type": "STRING",
                        "description": "The type of content like 'articles', 'blog', 'questions', etc."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "content-type": "array"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Find available info from the specific section I want from HealthCare.gov and provide information on the recent 10 medical device adverse event reports.",
        "relevant APIs": [],
        "query_id": 587
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Can you provide detailed information about a specific healthcare article with the title mentioned earlier and also show recent drug adverse event reports using the number of records my boss requested?",
        "relevant APIs": [],
        "query_id": 588
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you find me makeup products that are vegan and cruelty-free under $25? Also, I need the contact details of healthcare providers with my doctor's name located in California.",
        "relevant APIs": [],
        "query_id": 589
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "basic": {
                                "name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {
                            "mdr_report_key": "string",
                            "report_number": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I need a list of healthcare organizations named after my healthcare company in California and some recent device adverse event reports.",
        "relevant APIs": [],
        "query_id": 590
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "string",
                    "url": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, product type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "brand": "str",
                        "name": "str",
                        "price": "str",
                        "price_sign": "str",
                        "currency": "str",
                        "image_link": "str",
                        "product_link": "str",
                        "website_link": "str",
                        "description": "str",
                        "rating": "float",
                        "category": "str",
                        "product_type": "str",
                        "tag_list": [
                            "str"
                        ],
                        "created_at": "str",
                        "updated_at": "str",
                        "product_api_url": "str",
                        "api_featured_image": "str",
                        "product_colors": [
                            "str"
                        ]
                    }
                ]
            }
        ],
        "query": "Can you provide details on the specific healthcare-related topic discussed earlier, such as accessibility, from HealthCare.gov, and also help me find makeup products that align with my makeup standards?",
        "relevant APIs": [],
        "query_id": 591
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Can you provide detailed information about a specific healthcare article titled 'accessibility' and also show recent drug adverse event reports using the number of records my boss requested?",
        "relevant APIs": [],
        "query_id": 592
    },
    {
        "api_list": [
            {
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                },
                "category_name": "Health",
                "optional_parameters": []
            },
            {
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                },
                "category_name": "Health",
                "required_parameters": []
            }
        ],
        "query": "Can you retrieve the detailed article content my mother was looking for on HealthCare.gov and find healthcare providers with the last name of my doctor in New York using the NPPES API?",
        "relevant APIs": [],
        "query_id": 593
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you find me makeup products that are vegan and cruelty-free under $25? Also, I need the contact details of healthcare providers named 'Smith' located in my home state.",
        "relevant APIs": [],
        "query_id": 594
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_collection",
                "api_description": "Retrieve a list of post objects by content type.",
                "required_parameters": [
                    {
                        "name": "content_type",
                        "type": "STRING",
                        "description": "The type of content like 'articles', 'blog', 'questions', etc."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "content-type": "array"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Find available glossary terms from HealthCare.gov and provide information on the recent 10 event reports for the specific topic my manager wanted.",
        "relevant APIs": [],
        "query_id": 595
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "Can you find vegan and cruelty-free makeup products with a rating above the threshold my mom demanded? Also, could you get me recent adverse event reports for drugs, limiting the results to 5?",
        "relevant APIs": [],
        "query_id": 596
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "basic": {
                                "name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {
                            "mdr_report_key": "string",
                            "report_number": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I need a list of healthcare organizations named after my healthcare company in my home state and some recent device adverse event reports.",
        "relevant APIs": [],
        "query_id": 597
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "string",
                    "url": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, product type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "brand": "str",
                        "name": "str",
                        "price": "str",
                        "price_sign": "str",
                        "currency": "str",
                        "image_link": "str",
                        "product_link": "str",
                        "website_link": "str",
                        "description": "str",
                        "rating": "float",
                        "category": "str",
                        "product_type": "str",
                        "tag_list": [
                            "str"
                        ],
                        "created_at": "str",
                        "updated_at": "str",
                        "product_api_url": "str",
                        "api_featured_image": "str",
                        "product_colors": [
                            "str"
                        ]
                    }
                ]
            }
        ],
        "query": "Can you provide details on the specific healthcare-related topic discussed earlier, from HealthCare.gov, and also help me find vegan and cruelty-free makeup products?",
        "relevant APIs": [],
        "query_id": 598
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you find me makeup products that meet my ethical standards under my budget? Also, I need the contact details of healthcare providers my doctor's name located in my home state.",
        "relevant APIs": [],
        "query_id": 599
    }
]