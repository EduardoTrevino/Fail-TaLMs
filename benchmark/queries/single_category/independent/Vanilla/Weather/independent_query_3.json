[
  {
    "api_list": [
      {
        "tool_name": "awc",
        "api_name": "get_metar",
        "api_description": "Fetches decoded aviation weather observations (METAR).",
        "required_parameters": [],
        "optional_parameters": [
          {"name": "ids", "type": "STRING", "description": "Station ID(s).", "default": null},
          {"name": "format", "type": "STRING", "description": "Output format.", "default": "json"},
          {"name": "taf", "type": "BOOLEAN", "description": "Include TAF information with the METAR.", "default": false},
          {"name": "hours", "type": "NUMBER", "description": "Hours back to search.", "default": 1},
          {"name": "bbox", "type": "STRING", "description": "Geographic bounding box.", "default": null},
          {"name": "date", "type": "STRING", "description": "Specific date to fetch records for.", "default": null}
        ],
        "method": "GET",
        "response_format": {"error": "string", "response": "string"}
      },
      {
        "tool_name": "seventimer",
        "api_name": "get_graphical_forecast",
        "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
        "required_parameters": [
          {"name": "lon", "type": "FLOAT", "description": "Longitude of the location"},
          {"name": "lat", "type": "FLOAT", "description": "Latitude of the location"}
        ],
        "optional_parameters": [
          {"name": "ac", "type": "INTEGER", "description": "Altitude Correction, applicable in ASTRO", "default": 0},
          {"name": "lang", "type": "STRING", "description": "Language", "default": "en"},
          {"name": "unit", "type": "STRING", "description": "Unit system, either 'metric' or 'british'", "default": "metric"},
          {"name": "output", "type": "STRING", "description": "Output format, 'internal' for graphical", "default": "internal"},
          {"name": "tzshift", "type": "INTEGER", "description": "Timezone adjustment", "default": 0}
        ],
        "method": "GET",
        "response_format": "Binary content of a PNG image"
      }
    ],
    "query": "Can you provide the latest METAR report for the Kansas City airport? Additionally, I'd like a graphical weather forecast for the coordinates 38.97°N, 94.72°W.",
    "relevant APIs": [],
    "query_id": 1
  },
  {
    "api_list": [
      {
        "tool_name": "awc",
        "api_name": "get_isigmet",
        "api_description": "Fetch international SIGMETs.",
        "required_parameters": [],
        "optional_parameters": [
          {"name": "format", "type": "STRING", "description": "Output format.", "default": "json"},
          {"name": "hazard", "type": "STRING", "description": "Hazard type", "default": null},
          {"name": "level", "type": "NUMBER", "description": "The level +-3000' to search", "default": 0},
          {"name": "date", "type": "STRING", "description": "Specify the date", "default": null}
        ],
        "method": "GET",
        "response_format": {"error": "string", "response": "string"}
      },
      {
        "tool_name": "seventimer",
        "api_name": "get_machine_readable_forecast",
        "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
        "required_parameters": [
          {"name": "lon", "type": "FLOAT", "description": "Longitude of the location"},
          {"name": "lat", "type": "FLOAT", "description": "Latitude of the location"}
        ],
        "optional_parameters": [
          {"name": "product", "type": "STRING", "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')", "default": "astro"},
          {"name": "output", "type": "STRING", "description": "Output format ('xml' or 'json')", "default": "json"}
        ],
        "method": "GET",
        "response_format": {"format": "json or xml", "content": "Weather forecast data"}
      }
    ],
    "query": "I need to check for any international SIGMETs related to turbulence. Could you also provide a machine-readable forecast for Paris, France?",
    "relevant APIs": [],
    "query_id": 2
  }
]