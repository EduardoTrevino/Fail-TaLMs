[
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinmap",
                "api_name": "get_atm_operators",
                "api_description": "Get a list of ATM operators.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "Could you list all the cryptocurrency exchanges available and also provide information on ATM operators for cryptocurrencies?",
        "relevant APIs": [],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "0": {
                        "symbol": "string",
                        "price_usd": "float",
                        "market_cap_usd": "float"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_supported_networks",
                "api_description": "Get list of supported networks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "name": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Get the current price and market data for Bitcoin, and list all blockchain networks supported by GeckoTerminal.",
        "relevant APIs": [],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_recent_spreads",
                "api_description": "Returns the last ~200 top-of-book spreads for a given pair.",
                "required_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "since",
                        "type": "INTEGER",
                        "description": "Returns spread data since given timestamp."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": [
                        "str"
                    ],
                    "result": {
                        "pair": [
                            {
                                "time": "int",
                                "bid": "float",
                                "ask": "float"
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_gold_price",
                "api_description": "Fetch the price of gold.",
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "prices": [
                        {
                            "date": "str",
                            "price": "float"
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "Can you provide the most recent spread information for the ETHUSD pair on Kraken? Additionally, what are the latest gold prices available from NBP?",
        "relevant APIs": [],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "coins_count": "int",
                    "active_markets": "int",
                    "total_mcap": "float",
                    "total_volume": "float",
                    "btc_d": "float",
                    "eth_d": "float",
                    "mcap_change": "float",
                    "volume_change": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "currency": "str",
                    "code": "str",
                    "rates": [
                        {
                            "no": "str",
                            "effectiveDate": "str",
                            "mid": "float"
                        }
                    ]
                }
            }
        ],
        "query": "What are the current global statistics for the cryptocurrency market? Also, show me the current exchange rates according to table A.",
        "relevant APIs": [],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_spot_price",
                "api_description": "Get the current market price for bitcoin or other cryptocurrencies.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "For historic spot price, use format YYYY-MM-DD (UTC)."
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ohlc_today",
                "api_description": "Returns OHLC for the current day.",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quote",
                        "type": "STRING",
                        "description": "returned data quote",
                        "default": "usd"
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "I want to know the current spot price for Bitcoin in USD and today's OHLC data.",
        "relevant APIs": [],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_social_stats",
                "api_description": "Get social stats for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "reddit_subscribers": "int",
                    "reddit_active_users": "int",
                    "twitter_followers": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kucoin",
                "api_name": "get_currency_detail",
                "api_description": "Retrieve details about a specified currency, including supported chains, and contract address.",
                "required_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "The currency code (e.g., BTC)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "chains": [
                            "string"
                        ],
                        "contractAddress": "string"
                    }
                }
            }
        ],
        "query": "What are the social media metrics for Ethereum, and what blockchain networks support Bitcoin on KuCoin?",
        "relevant APIs": [],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "dexscreener",
                "api_name": "get_pairs_by_chain_and_address",
                "api_description": "Get one or multiple pairs by chain and pair addresses.",
                "required_parameters": [
                    {
                        "name": "chain_id",
                        "type": "STRING",
                        "description": "The blockchain chain id (e.g., ethereum, bsc, polygon)."
                    },
                    {
                        "name": "pair_addresses",
                        "type": "LIST",
                        "description": "Comma-separated pair addresses (up to 30 addresses)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "List all cryptocurrency exchanges and retrieve trading pairs for a specific chain and its pair addresses.",
        "query_id": 7
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "gemini",
                "api_name": "get_ticker",
                "api_description": "Retrieve information about recent trading activity for the symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "I want the latest trading information for Bitcoin both by coin ID on Coinlore and trading symbol on Gemini.",
        "query_id": 8
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What are the current exchange rates available in table type 'A' from the National Bank of Poland? Additionally, can you provide the details of the bank branch associated with the IFSC code 'HDFC0000123'?",
        "relevant APIs": [],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_global_market_overview",
                "api_description": "Returns global market overview metrics.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "url": "https://api.coinpaprika.com/v1/global",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/tables/{table}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "What is the current overview of the global cryptocurrency market? Also, provide the latest exchange rates from table 'A'.",
        "relevant APIs": [],
        "query_id": 10
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I need the latest global cryptocurrency market stats and want to compare the value of cryptocurrencies in USD.",
        "relevant APIs": [],
        "query_id": 11
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieve all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What are the current global statistics in the cryptocurrency market and what trading symbols are available on Gemini?",
        "query_id": 12
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_social_stats",
                "api_description": "Get social stats for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "gemini",
                "api_name": "get_funding_amount",
                "api_description": "Retrieves funding amount details for a symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the social media statistics for Ethereum and also provide the funding amount details for the ETHUSD trading pair on Gemini?",
        "query_id": 13
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "symbol": "str",
                    "name": "str",
                    "price_usd": "float",
                    "price_btc": "float",
                    "market_cap_usd": "float",
                    "volume_24h_usd": "float",
                    "percent_change_24h": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "currency": "str",
                    "code": "str",
                    "rates": [
                        {
                            "no": "str",
                            "effectiveDate": "str",
                            "mid": "float"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the current market data for Bitcoin as well as its exchange rate in USD based on NBP's table A?",
        "relevant APIs": [],
        "query_id": 14
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "attributes": {
                            "price": "string",
                            "price24h_change": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "wazirx",
                "api_name": "ticker_24hr",
                "api_description": "24-hour rolling window price change statistics for a single symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "The trading pair symbol",
                        "default": "btcinr"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbol": "string",
                    "baseAsset": "string",
                    "quoteAsset": "string",
                    "openPrice": "string",
                    "lowPrice": "string",
                    "highPrice": "string",
                    "lastPrice": "string",
                    "volume": "string"
                }
            }
        ],
        "query": "What is the current price of the Ethereum token on its network, and how has the price changed in the last 24 hours for the BTC to INR trading pair?",
        "relevant APIs": [],
        "query_id": 15
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "dexscreener",
                "api_name": "get_pairs_by_token_address",
                "api_description": "Get one or multiple pairs by token addresses.",
                "required_parameters": [
                    {
                        "name": "token_addresses",
                        "type": "LIST",
                        "description": "Comma-separated token addresses (up to 30 addresses)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide me with the global statistics of the cryptocurrency market, and also find trading pairs for the given list of token addresses?",
        "query_id": 16
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_markets_for_coin",
                "api_description": "Retrieve top 50 exchanges and markets for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "markets": [
                        {
                            "name": "string",
                            "pair": "string",
                            "price_usd": "float",
                            "volume_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_supported_dexes",
                "api_description": "Get list of supported dexes on a network.",
                "required_parameters": [
                    "network"
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "name": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the top markets and exchanges for Ethereum and also list all decentralized exchanges supported on the Binance Smart Chain network.",
        "relevant APIs": [],
        "query_id": 17
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "List of Venues with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": [
                        "object"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "string",
                    "base_code": "string",
                    "rates": {
                        "type": "object",
                        "additionalProperties": "number"
                    }
                }
            }
        ],
        "query": "Can you find some shopping venues that accept cryptocurrency globally, and also provide me the latest exchange rates for USD?",
        "relevant APIs": [],
        "query_id": 18
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "string",
                    "name": "string",
                    "nameid": "string",
                    "rank": "int",
                    "price_usd": "string",
                    "percent_change_24h": "string",
                    "percent_change_1h": "string",
                    "percent_change_7d": "string",
                    "market_cap_usd": "string",
                    "volume24": "string",
                    "volume24a": "string",
                    "csupply": "string",
                    "tsupply": "string",
                    "msupply": "string"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kucoin",
                "api_name": "get_ticker",
                "api_description": "Get Level 1 Market Data for a specific trading pair.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol (e.g., BTC-USDT)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "symbol": "string",
                        "buy": "string",
                        "sell": "string",
                        "changeRate": "string",
                        "changePrice": "string",
                        "high": "string",
                        "low": "string",
                        "vol": "string",
                        "volValue": "string",
                        "last": "string",
                        "averagePrice": "string",
                        "datetime": "int"
                    }
                }
            }
        ],
        "query": "Can you provide me with the current market data for Bitcoin both globally and specifically for the BTC-USDT trading pair on KuCoin?",
        "relevant APIs": [],
        "query_id": 19
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "coins_count": "int",
                    "volume_24h": "float",
                    "market_cap_usd": "float",
                    "btc_d": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_currencies",
                "api_description": "Get all supported currencies.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "code": "str",
                    "min_confirmations": "int",
                    "is_active": "bool",
                    "cmc_rank": "int"
                }
            }
        ],
        "query": "What are the global cryptocurrency statistics, and can you list the currencies supported by the N.exchange API?",
        "relevant APIs": [],
        "query_id": 20
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieve all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What are all the available trading symbols on Gemini, and what is the current market ticker information for BTC-USDT on OKX?",
        "relevant APIs": [],
        "query_id": 21
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_buy_price",
                "api_description": "Get the total price to buy one bitcoin or ether.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "amount": "string",
                        "currency": "string"
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_ticker",
                "api_description": "Get Level 1 Market Data for a specific trading pair, including bid/ask prices, last traded price, and size.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol (e.g., BTC-USDT)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "price": "string",
                        "size": "string",
                        "bestBid": "string",
                        "bestAsk": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What is the current buy price for BTC-USD on Coinbase? Also, what are the best bid and ask prices for BTC-USDT on Kucoin?",
        "relevant APIs": [],
        "query_id": 22
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_fiat_currencies",
                "api_description": "Lists known fiat currencies.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "min_size": "string"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_assets",
                "api_description": "A list of all assets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of assets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "rank": "str",
                            "symbol": "str",
                            "name": "str",
                            "supply": "str",
                            "maxSupply": "str",
                            "marketCapUsd": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "changePercent24Hr": "str",
                            "vwap24Hr": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of known fiat currencies and also list some of the top cryptocurrency assets?",
        "relevant APIs": [],
        "query_id": 23
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_global_market_overview",
                "api_description": "Returns global market overview metrics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What are the current exchange rates for USD and the global market overview metrics?",
        "relevant APIs": [],
        "query_id": 24
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_sell_price",
                "api_description": "Get the total price to sell one bitcoin or ether.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_markets_by_coin_id",
                "api_description": "Returns all available markets for a given coin.",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the sell price for Bitcoin in USD and the markets where Bitcoin is available?",
        "relevant APIs": [],
        "query_id": 25
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am interested in the latest tick data for Bitcoin and want to see how it compares with the current exchange rates of the USD.",
        "relevant APIs": [],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What are the current price and trading details for Bitcoin?",
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies ranked by their market cap and also give me the current exchange rates for the US dollar?",
        "relevant APIs": [],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_buy_price",
                "api_description": "Get the total price to buy one bitcoin or ether.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What is the buy price for 1 Bitcoin in USD, and can you show me its price data using coin ID?",
        "relevant APIs": [],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_global_market_overview",
                "api_description": "Returns global market overview metrics.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "What is the current global cryptocurrency market cap and how many cryptocurrencies are there in total?",
        "query_id": 30
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What is the current price of Bitcoin and can you provide the details of Delhi Nagrik Sehkari Bank using IFSC code YESB0DNB002?",
        "relevant APIs": [],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "coins_count": "int",
                    "active_markets": "int",
                    "total_market_cap_usd": "float",
                    "total_24h_volume_usd": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "symbol": "string",
                                "price_usd": "float"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide an overview of the global cryptocurrency statistics and also fetch the current USD price of Ethereum on the Ethereum network?",
        "relevant APIs": [],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_markets_for_coin",
                "api_description": "Retrieve top 50 exchanges and markets for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_exchanges_by_coin_id",
                "api_description": "Returns exchanges where a given coin is traded.",
                "required_parameters": [
                    "coin_id"
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            }
        ],
        "query": "Where can Ethereum be traded and what are the top exchanges for it?",
        "query_id": 33
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "price_converter",
                "api_description": "Converts a set amount of base currency to quote currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "base_currency_id",
                        "type": "STRING",
                        "description": ""
                    },
                    {
                        "name": "quote_currency_id",
                        "type": "STRING",
                        "description": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "amount",
                        "type": "FLOAT",
                        "description": "Amount to convert",
                        "default": 0
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/price-converter",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_gold_price",
                "api_description": "Fetch the price of gold.",
                "method": "GET",
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/cenyzlota",
                "statuscode": 200,
                "category_name": "Finance",
                "required_parameters": []
            }
        ],
        "query": "I want to convert 10 Ether to Bitcoin equivalents. Also, show me the current gold price.",
        "relevant APIs": [],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "gemini",
                "api_name": "get_fee_promos",
                "api_description": "Retrieve symbols that currently have fee promos.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What are all the exchanges listed on Coinlore, and which trading pairs have fee promotions on Gemini?",
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ohlc_data",
                "api_description": "Get OHLC (open/high/low/close) data for a given market.",
                "required_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "interval",
                        "type": "INTEGER",
                        "description": "Time frame interval in minutes"
                    },
                    {
                        "name": "since",
                        "type": "INTEGER",
                        "description": "Return up to 720 OHLC data points since given timestamp"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What are the historical price details in OHLC format for the pair BTCUSD on Kraken and BTCEUR on N.exchange for the past 24 hours?",
        "relevant APIs": [],
        "query_id": 36
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "rates": {
                            "string": "string"
                        }
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_fiat_price",
                "api_description": "Get the fiat price of the currencies for the available trading pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base",
                        "type": "STRING",
                        "description": "Base currency ticker symbol (default is 'USD')."
                    },
                    {
                        "name": "currencies",
                        "type": "STRING",
                        "description": "Comma-separated list of cryptocurrencies to be converted into fiat (e.g., 'BTC,ETH')."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "BTC": "string",
                        "ETH": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What are the current cryptocurrency exchange rates against USD on Coinbase, and can you also get the fiat prices of BTC and ETH from Kucoin?",
        "relevant APIs": [],
        "query_id": 37
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_order_book",
                "api_description": "Retrieve the order book for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which the order book is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I want to see the current exchange rate for USD from the NBP service's table A and also check the order book for Bitcoin-USDT trading pair on OKX.",
        "relevant APIs": [],
        "query_id": 38
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    "network",
                    "addresses"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "symbol": "str",
                            "name": "str",
                            "price_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CITY": "str",
                    "IFSC": "str",
                    "CONTACT": "str or null",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "Can you check the current USD price of the Ethereum token on its network? Additionally, I'd like to find the details of a bank branch using its IFSC code, say YESB0DNB002.",
        "relevant APIs": [],
        "query_id": 39
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "price_usd": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_latest_price",
                "api_description": "Gets latest price of the pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pair_name": "str",
                    "timestamp": "str",
                    "price": "float"
                }
            }
        ],
        "query": "Can you provide the current price of Bitcoin (BTC) using Coinlore data and also get the latest price for the BTCLTC pair using N.exchange?",
        "relevant APIs": [],
        "query_id": 40
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "coins_count": "int",
                    "active_markets": "int",
                    "total_mcap": "str",
                    "total_volume": "str",
                    "btc_d": "str",
                    "eth_d": "str",
                    "mcap_change": "str",
                    "volume_change": "str",
                    "avg_change_percent": "str",
                    "volume_ath": "str",
                    "mcap_ath": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_system_status",
                "api_description": "Get the current system status or trading mode.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "status": "string",
                        "timestamp": "string"
                    }
                }
            }
        ],
        "query": "What is the current global status of the cryptocurrency market, and is Kraken's trading system currently operational?",
        "relevant APIs": [],
        "query_id": 41
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "currency": "string",
                    "rates": {
                        "string": "string"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_markets",
                "api_description": "A list of all markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of markets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "exchangeId": "str",
                            "baseId": "str",
                            "quoteId": "str",
                            "baseSymbol": "str",
                            "quoteSymbol": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "volumePercent": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the current exchange rates for USD and can you list the top cryptocurrency markets?",
        "relevant APIs": [],
        "query_id": 42
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_tradable_asset_pairs",
                "api_description": "Get tradable asset pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pairs to get data for"
                    },
                    {
                        "name": "info",
                        "type": "STRING",
                        "description": "Info to retrieve (optional)"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_pairs",
                "api_description": "Get all supported currency pairs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all tradable asset pairs on both Kraken and N.exchange exchanges?",
        "relevant APIs": [],
        "query_id": 43
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ticker_information",
                "api_description": "Get ticker information for all or requested markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for (optional, default: all tradeable exchange pairs)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": {
                        "pair_name": {
                            "a": [
                                "price",
                                "whole lot volume",
                                "lot volume"
                            ],
                            "b": [
                                "price",
                                "whole lot volume",
                                "lot volume"
                            ],
                            "c": [
                                "price",
                                "lot volume"
                            ],
                            "v": [
                                "today",
                                "last 24 hours"
                            ],
                            "p": [
                                "today",
                                "last 24 hours"
                            ],
                            "t": [
                                "today",
                                "last 24 hours"
                            ],
                            "l": [
                                "today",
                                "last 24 hours"
                            ],
                            "h": [
                                "today",
                                "last 24 hours"
                            ],
                            "o": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What is the current market ticker information for BTC-USDT on both Kraken and OKX?",
        "relevant APIs": [],
        "query_id": 44
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    "coin_id"
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma separated list of quotes to return",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of Bitcoin in USD and also give the exchange rate of USD from table 'A'?",
        "relevant APIs": [],
        "query_id": 45
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "Retrieve a list of venues with optional filtering parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": "array",
                    "count": "integer"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_asset_info",
                "api_description": "Get information about the assets that are available for deposit, withdrawal, trading, and earn.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "asset",
                        "type": "STRING",
                        "description": "Comma delimited list of assets to get info on (optional, default all available assets)"
                    },
                    {
                        "name": "aclass",
                        "type": "STRING",
                        "description": "Asset class (optional, default: currency)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "object"
                }
            }
        ],
        "query": "Can you find venues accepting cryptocurrency near New York City and list available trading assets on Kraken?",
        "relevant APIs": [],
        "query_id": 46
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "string",
                    "name": "string",
                    "nameid": "string",
                    "rank": "int",
                    "price_usd": "string",
                    "percent_change_24h": "string",
                    "percent_change_1h": "string",
                    "percent_change_7d": "string",
                    "market_cap_usd": "string",
                    "volume24": "string",
                    "volume24_native": "string",
                    "csupply": "string",
                    "price_btc": "string",
                    "tsupply": "string",
                    "msupply": "string"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ticker_information",
                "api_description": "Get ticker information for all or requested markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for (optional, default: all tradeable exchange pairs)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": {
                        "pair_name": {
                            "a": [
                                "string",
                                "string",
                                "string"
                            ],
                            "b": [
                                "string",
                                "string",
                                "string"
                            ],
                            "c": [
                                "string",
                                "string"
                            ],
                            "v": [
                                "string",
                                "string"
                            ],
                            "p": [
                                "string",
                                "string"
                            ],
                            "t": [
                                "int",
                                "int"
                            ],
                            "l": [
                                "string",
                                "string"
                            ],
                            "h": [
                                "string",
                                "string"
                            ],
                            "o": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide the current market data for Bitcoin from both Coinlore and Kraken?",
        "relevant APIs": [],
        "query_id": 47
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "dexscreener",
                "api_name": "search_pairs",
                "api_description": "Search for pairs matching the query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query that includes pair address, token address, token name, or token symbol."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Give me the tick data of Bitcoin using its coin_id and any related trading pairs based on its token symbol.",
        "query_id": 48
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_candles",
                "api_description": "Retrieves time-intervaled data for the provided symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time_frame",
                        "type": "STRING",
                        "description": "Time range for each candle",
                        "default": "15m"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you retrieve the 15-minute interval trading data for BTC/USD on Gemini and also provide the price history for Bitcoin to Litecoin exchange on N.exchange over the last hour?",
        "relevant APIs": [],
        "query_id": 49
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "url": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_pairs",
                "api_description": "Get all supported currency pairs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "pair": "str",
                    "base": "str",
                    "quote": "str",
                    "is_active": "bool"
                }
            }
        ],
        "query": "List all the cryptocurrency exchanges available on Coinlore and provide the currency pairs supported by N.exchange.",
        "relevant APIs": [],
        "query_id": 50
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "list_exchanges",
                "api_description": "Returns basic information about exchanges.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "Can you provide me with a list of all cryptocurrency exchanges?",
        "query_id": 51
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_social_stats",
                "api_description": "Get social stats for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinmap",
                "api_name": "get_rating",
                "api_description": "Get ratings for a specific venue.",
                "required_parameters": [
                    {
                        "name": "venue_id",
                        "type": "INTEGER",
                        "description": "Venue ID to retrieve ratings for."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            }
        ],
        "query": "I am interested in the social media statistics for Ethereum and also want to know the ratings for a cryptocurrency-accepting venue in my area.",
        "relevant APIs": [],
        "query_id": 52
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieves all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "string",
                    "IFSC": "string",
                    "BRANCH": "string",
                    "ADDRESS": "string",
                    "CONTACT": "string or null",
                    "CITY": "string",
                    "RTGS": "boolean",
                    "MICR": "string or null",
                    "UPI": "boolean",
                    "NEFT": "boolean",
                    "IMPS": "boolean"
                }
            }
        ],
        "query": "Can you provide a list of all available trading symbols and also give me the details of a bank using IFSC code 'YESB0DNB002'?",
        "relevant APIs": [],
        "query_id": 53
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Could you list the Chinese dynasties available in the Chinese Text Project? Additionally, what is the definition of the word 'dynasty' in English?",
        "query_id": 54
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character '\u597d'? Also, what does the English word 'benevolent' mean?",
        "query_id": 55
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word 'serendipity' and also filter profanity from the sentence 'This is a fucking amazing day'?",
        "relevant APIs": [],
        "query_id": 56
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET",
                "category_name": "Language",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_plain",
                "api_description": "Filter profanity from text and return result as plain text.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "category_name": "Language"
            }
        ],
        "query": "Provide a list of dynasties from Chinese history. Additionally, filter out any profanities from the statement 'This dynasty is freaking amazing!' and return the cleaned text in plain format.",
        "relevant APIs": [],
        "query_id": 57
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN 'ctp:analects/xue-er'. Also, I would like to know the definition of the English word 'philosophy'.",
        "query_id": 58
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "category_name": "Language"
            }
        ],
        "query": "Can you retrieve the text content for the chapter with URN 'ctp:analects/xue-er' and check if it contains any profanities? If it does, return the clean text as JSON.",
        "relevant APIs": [],
        "query_id": 59
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character '\u4ec1'? Also, does this sentence 'I went to the park today.' contain any profanity?",
        "relevant APIs": [],
        "query_id": 60
    },
    {
        "api_list": [
            {
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "str",
                        "score": "int"
                    }
                ],
                "category_name": "Language"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "template_response": "true or false",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "I'm typing part of an unfamiliar word and need suggestions to complete it. However, I want to ensure none of the suggested words are profane. Can you provide some suggestions?",
        "relevant APIs": [],
        "query_id": 61
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the 'gb' filter and also find words that mean the same as 'ringing in the ears'?",
        "relevant APIs": [],
        "query_id": 62
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest some words starting with 'hap' and provide the definition for one of them?",
        "relevant APIs": [],
        "query_id": 63
    },
    {
        "api_list": [
            {
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "str",
                        "score": "int"
                    }
                ],
                "category_name": "Language"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "str"
                },
                "category_name": "Language"
            }
        ],
        "query": "I need to find words related to happiness that don't contain any profanity. Can you provide a list of such words?",
        "relevant APIs": [],
        "query_id": 64
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character '\u7231'? Also, give me words that mean the same as 'love' using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 65
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word 'quixotic' and does the sentence 'Great job, now let's make sure everyone's idea is expressed!' contain any profanity?",
        "relevant APIs": [],
        "query_id": 66
    },
    {
        "api_list": [
            {
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                },
                "category_name": "Language"
            },
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "basic_data": {
                        "key": "value"
                    }
                },
                "category_name": "Language"
            }
        ],
        "query": "I am interested in learning more about the Chinese character '\u4ec1'. Can you provide the basic data for this character? Also, list all Chinese characters available in the database.",
        "relevant APIs": [],
        "query_id": 67
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_sounds_mandarin",
                "api_description": "Returns a list of Mandarin sounds, optionally with pitch.",
                "optional_parameters": [
                    {
                        "name": "with_pitch",
                        "type": "BOOLEAN",
                        "description": "Include pitch in sounds."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "mandarin": [
                        "str"
                    ]
                },
                "required_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "resulting text"
                }
            }
        ],
        "query": "List the Mandarin sounds along with their pitch and filter the text 'Shit, what a fantastic day!' for any profane language, replacing the words with '[censored]'.",
        "relevant APIs": [],
        "query_id": 68
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "required_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "string",
                        "label": "string",
                        "start": "string",
                        "end": "string"
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide me a list of Chinese dynasties with their historical periods? Additionally, suggest words that start with 'hist' for autocomplete.",
        "relevant APIs": [],
        "query_id": 69
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_version",
                "api_description": "Returns date information about the CCDB service, the Unicode version, and the PHP/MySQL versions.",
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "unicodeVersion": "str",
                    "phpVersion": "str",
                    "mysqlVersion": "str"
                },
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "template_response": "true or false",
                "optional_parameters": []
            }
        ],
        "query": "What is the current version information of the Chinese Character Web API, and can you check if the phrase 'This is a test!' contains any profanity?",
        "relevant APIs": [],
        "query_id": 70
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number 85 and provide the definition of the English word 'radical'?",
        "relevant APIs": [],
        "query_id": 71
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "What are some words related to 'spoon' and can you provide the definition of one of these words?",
        "relevant APIs": [],
        "query_id": 72
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "author_search",
                "api_description": "Search for authors by name.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term to search for authors.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Who are the characters from the Final Space show, and could you provide information about any authors named 'Hemingway' from Open Library?",
        "relevant APIs": [],
        "query_id": 73
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_episode_by_id",
                "api_description": "Retrieves an episode by its ID.",
                "required_parameters": [
                    {
                        "name": "episode_id",
                        "type": "INTEGER",
                        "description": "The episode ID.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_prayer_by_date",
                "api_description": "Returns a rosary prayer for a specific date.",
                "required_parameters": [
                    "date"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Could you provide the details of the episode with ID 5 from the Final Space series, and the rosary prayer for August 28, 2024?",
        "relevant APIs": [],
        "query_id": 74
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "bytes"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        "dict"
                    ]
                }
            }
        ],
        "query": "I am interested in the latest anime reports that start with the letter 'B'. Can you also search for TV shows related to 'Breaking Bad'?",
        "relevant APIs": [],
        "query_id": 75
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "anime_details": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film from the Star Wars series.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want detailed information on the anime 'Naruto', and I'm interested in finding Star Wars films with 'Empire' in the title.",
        "relevant APIs": [],
        "query_id": 76
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name using a fuzzy search.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Search Wikipedia for articles related to 'Game of Thrones' and find all shows named 'Game of Thrones' or similar from TVmaze API.",
        "relevant APIs": [],
        "query_id": 77
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Could you list all the episodes from Final Space and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 78
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "I'm interested in learning more about the Star Wars character 'Luke Skywalker'. Can you provide information from Wikipedia about Luke Skywalker and retrieve details from the Star Wars API as well?",
        "relevant APIs": [],
        "query_id": 79
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "What is the TV schedule for channel CT2 on August 4, 2024, and can you list journals related to health?",
        "relevant APIs": [
            "get_tv_schedule",
            "list_journals"
        ],
        "query_id": 80
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles starting with 'The New York'? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 81
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of anime reports available on Anime News Network? Also, can you retrieve details about a specific Star Trek character using its unique ID (CHMA0000215045) from STAPI?",
        "relevant APIs": [],
        "query_id": 82
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        {
                            "uid": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prayers": [
                        {
                            "day": "str",
                            "prayer": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you provide a list of characters in the Star Trek universe along with the day and rosary prayer for the year 2024 schedule?",
        "relevant APIs": [],
        "query_id": 83
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Can you list the main characters of Final Space? Also, could you tell me more about the character named Luke Skywalker from Star Wars?",
        "relevant APIs": [],
        "query_id": 84
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Get anime resource by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Mal_id": "int",
                        "title": "str",
                        "url": "str",
                        "images": {
                            "jpg": {
                                "image_url": "str",
                                "small_image_url": "str",
                                "large_image_url": "str"
                            }
                        },
                        "score": "float",
                        "aired": {
                            "from": "string",
                            "to": "string"
                        },
                        "episodes": "int"
                    }
                }
            }
        ],
        "query": "Can you give me some of the latest top news stories from Hacker News, and provide details about an anime with ID 100 from MyAnimeList?",
        "relevant APIs": [],
        "query_id": 85
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_locations",
                "api_description": "Retrieves all locations, with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "get_locations",
                "api_description": "Fetches all locations, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of locations to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter by type."
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "Filter by dimension."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all notable locations from both the Final Space and Rick and Morty shows?",
        "relevant APIs": [],
        "query_id": 86
    },
    {
        "api_list": [
            {
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": {
                    "type": "list of integers",
                    "description": "List of top story IDs."
                },
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "openlibrary_search",
                "api_description": "Search for books by title, author, and other criteria.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term for the search.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to include in the response, use '*' to include all.",
                        "default": "*"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting order (e.g., 'new', 'old', 'random').",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results pagination.",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 10
                    }
                ],
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "Content"
            }
        ],
        "query": "What are the current trending top stories on Hacker News related to 'data science', and can you find some books on 'data science' available in the Open Library?",
        "relevant APIs": [],
        "query_id": 87
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str"
                },
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "I want to know more about Albert Einstein. Could you find some articles about him on Wikipedia and provide information about a specific work with ID 'OL45804W' from the Open Library?",
        "relevant APIs": [],
        "query_id": 88
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters, including anime and manga.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "reports": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person from the Star Wars universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you get a list of all anime reports and find information about people with the name 'Skywalker' in the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 89
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "application/json"
                }
            }
        ],
        "query": "Can you fetch the latest reports about new anime releases and provide me with the TV schedule for channel ct24 on August 4, 2024, in JSON format?",
        "relevant APIs": [],
        "query_id": 90
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_planets",
                "api_description": "Fetch planet resources or a specific planet.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the planet resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter planet resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "rotation_period": "str",
                            "orbital_period": "str",
                            "diameter": "str",
                            "climate": "str",
                            "gravity": "str",
                            "terrain": "str",
                            "surface_water": "str",
                            "population": "str",
                            "residents": [
                                "str"
                            ],
                            "films": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_prayer_by_day",
                "api_description": "Returns rosary prayer for a specific day of the week.",
                "required_parameters": [
                    "day"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the climate like on Tatooine in Star Wars and what's the rosary prayer for Monday?",
        "relevant APIs": [],
        "query_id": 91
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_locations",
                "api_description": "Retrieves all locations with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_planets",
                "api_description": "Fetch planet resources or a specific planet.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the planet resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter planet resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "What are the most significant locations in the Final Space universe? Also, can you give me details about the planet Tatooine in Star Wars?",
        "relevant APIs": [],
        "query_id": 92
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_quotes",
                "api_description": "Retrieves all quotes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "editions_by_work",
                "api_description": "Fetch editions of a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Retrieve all quotes from the Final Space show. Also, list all available editions for the Open Library work ID 'OL45804W'.",
        "relevant APIs": [],
        "query_id": 93
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Could you provide me with a list of all episodes of the Final Space series? Additionally, I want to know more about the film 'A New Hope' from Star Wars.",
        "relevant APIs": [],
        "query_id": 94
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_staff",
                "api_description": "Get staff information for a specific anime.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_main_information",
                "api_description": "Retrieve all primary information for a specific show by its TVmaze ID.",
                "required_parameters": [
                    {
                        "name": "show_id",
                        "type": "INTEGER",
                        "description": "The TVmaze ID of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Tell me about the staff involved in anime ID 10 and get the main information about the show with the TVmaze ID 5.",
        "relevant APIs": [],
        "query_id": 95
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object"
                }
            }
        ],
        "query": "I'm interested in learning more about Star Trek. Can you search Wikipedia for 'Star Trek' and also provide a list of characters from the Star Trek universe?",
        "relevant APIs": [],
        "query_id": 96
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about Luke Skywalker from Star Wars and also provide today's rosary prayer?",
        "relevant APIs": [],
        "query_id": 97
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_location_by_id",
                "api_description": "Retrieves a location by its ID.",
                "required_parameters": [
                    {
                        "name": "location_id",
                        "type": "INTEGER",
                        "description": "The location ID.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide details of the location with ID 1 in the Final Space series, and also tell me about the work with the Open Library ID 'OL45804W'?",
        "relevant APIs": [],
        "query_id": 98
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_full_by_id",
                "api_description": "Get complete anime resource data by ID.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide full details about the anime with ID 1, and also find the TV show named 'Breaking Bad'?",
        "relevant APIs": [],
        "query_id": 99
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you retrieve the full list of characters available from the Final Space universe and also provide today's rosary prayer?",
        "relevant APIs": [],
        "query_id": 100
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_episode",
                "api_description": "Retrieve a single episode.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Episode unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Please provide details about the Star Trek episode with the Uid of 'EPMA0000001002' and the resource id for the Star Wars film 'The Empire Strikes Back' in the Star Wars API (swapi).",
        "relevant APIs": [],
        "query_id": 101
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_character_by_id",
                "api_description": "Retrieves a character by its ID.",
                "required_parameters": [
                    {
                        "name": "character_id",
                        "type": "INTEGER",
                        "description": "The character ID.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "get_character_by_id",
                "api_description": "Fetches a single character by ID.",
                "required_parameters": [
                    {
                        "name": "character_id",
                        "type": "INTEGER",
                        "description": "ID of the character."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide details about the character with ID 3 from both the Final Space and Rick and Morty universes?",
        "relevant APIs": [],
        "query_id": 102
    },
    {
        "api_list": [
            {
                "tool_name": "rickandmorty",
                "api_name": "get_locations",
                "api_description": "Fetches all locations, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of locations to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter by type."
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "Filter by dimension."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you list all locations in the Rick and Morty universe that are a type of planet?",
        "relevant APIs": [
            "get_locations"
        ],
        "query_id": 103
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel from Czech Television.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": "XML | JSON based on format"
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search for topics using the OpenSearch protocol on Wikimedia wikis.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ]
            }
        ],
        "query": "I want to check the TV schedule for the channel CT1 on 04.08.2024, and also find information about pets on Wikipedia.",
        "relevant APIs": [],
        "query_id": 104
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I would like to check the TV schedule for channel ct1 in JSON format on the 4th of August, 2024 using \u010cesk\u00e1 Televize's API. Additionally, I'm interested in finding newspaper titles related to 'historical news' using Chronicling America's API.",
        "relevant APIs": [],
        "query_id": 105
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_book",
                "api_description": "Retrieval of a single book from Star Trek universe.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Book unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "book": {}
                }
            }
        ],
        "query": "I want detailed information about a specific anime title (4658). Additionally, can you fetch details of a specific Star Trek book using its unique ID (BOMA0000154026)?",
        "relevant APIs": [],
        "query_id": 106
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the Chronicling America newspaper directory for articles related to 'World War II'? Also, can you find scholarly works discussing 'nuclear physics'?",
        "relevant APIs": [],
        "query_id": 107
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you parse the content of the Wikipedia page titled 'Python (programming language)', and provide the first 100 characters of the HTML content, additonally provide the infromation from wikipedia about the search for 'Robert Oppenheimer'?",
        "relevant APIs": [],
        "query_id": 108
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed info for anime/manga by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "text/xml"
                }
            }
        ],
        "query": "I am looking for detailed information about the anime titled 'Naruto'. Also, can you get the TV schedule for channel ct1 on August 5, 2024, including regional broadcasts if available?",
        "relevant APIs": [],
        "query_id": 109
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str",
                            "characters": [
                                "str"
                            ],
                            "planets": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Which Star Wars film introduced the first Death Star and can you give me a random rosary prayer?",
        "relevant APIs": [],
        "query_id": 110
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "bytes"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "detail": "dict"
                }
            }
        ],
        "query": "Could you provide detailed information about the anime 'Naruto'? Additionally, find the details for the TV show 'Friends'.",
        "relevant APIs": [],
        "query_id": 111
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters, with options to sort and limit the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Show me newspaper titles related to 'space exploration' and give details of the first 5 characters from the Final Space series.",
        "relevant APIs": [],
        "query_id": 112
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "search_works",
                "api_description": "Search for works by a free text query.",
                "required_parameters": [
                    "query"
                ],
                "optional_parameters": [
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 20
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the TV schedule for channel CT1 on August 4, 2024, and also find scholarly works related to machine learning?",
        "relevant APIs": [],
        "query_id": 113
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "str": "str"
                },
                "category_name": "Content"
            }
        ],
        "query": "Can you search Wikipedia for information about 'Rosary Beads', and in the meantime, share a random rosary prayer with me?",
        "relevant APIs": [],
        "query_id": 114
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_user",
                "api_description": "Retrieve a specific user by their unique username.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The user's unique username (case-sensitive)."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ]
            }
        ],
        "query": "I'd like to know about the user 'pg' on Hacker News and also get the parsed content of the Wikipedia page for 'Python (programming language)'.",
        "relevant APIs": [],
        "query_id": 115
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "species": "str",
                    "status": "str",
                    "gender": "str",
                    "origin": {
                        "name": "str"
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list all the characters from Final Space and provide details about a specific Star Trek character by UID CHMA0000215045?",
        "relevant APIs": [],
        "query_id": 116
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_characters",
                "api_description": "Get characters of a specific anime.",
                "required_parameters": [
                    "id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_people",
                "api_description": "Search for people by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the person to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Who are the characters in the anime with ID 20, and also any TV actors named 'Bryan Cranston'?",
        "relevant APIs": [],
        "query_id": 117
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parser a wiki page and return its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the Wikipedia page content for 'Breaking Bad'? Also, I'd like detailed information about the show 'Breaking Bad' from TVmaze.",
        "relevant APIs": [],
        "query_id": 118
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "parse": {
                        "title": "str",
                        "pageid": "int",
                        "text": {
                            "*": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str",
                            "characters": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide detailed information from Wikipedia about the 'Star Wars' franchise, particularly focusing on its films, along with specific data on all films available in the Star Wars API?",
        "relevant APIs": [],
        "query_id": 119
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "I need to find articles related to 'Machine Learning' on Wikipedia. Can you show me the first 5 results?",
        "relevant APIs": [],
        "query_id": 120
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes, with options to sort and limit the results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "get_episodes",
                "api_description": "Fetches all episodes, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of episodes to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "episode",
                        "type": "STRING",
                        "description": "Filter by episode code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What episodes are available in the Final Space and Rick and Morty universes? Please list them with details.",
        "relevant APIs": [],
        "query_id": 121
    },
    {
        "api_list": [
            {
                "tool_name": "rickandmorty",
                "api_name": "get_character_by_id",
                "api_description": "Fetches a single character by ID.",
                "required_parameters": [
                    {
                        "name": "character_id",
                        "type": "INTEGER",
                        "description": "ID of the character."
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Who is the character with ID number 3 in the Rick and Morty universe?",
        "relevant APIs": [
            "get_character_by_id"
        ],
        "query_id": 122
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "parse": {
                        "title": "str",
                        "pageid": "int",
                        "text": {
                            "*": "str"
                        }
                    }
                },
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you provide me the detailed content of the Wikipedia page for 'Holy Rosary' and also tell me what the rosary prayer for today is?",
        "relevant APIs": [],
        "query_id": 123
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "book_by_isbn",
                "api_description": "Retrieve book information using its ISBN.",
                "required_parameters": [
                    {
                        "name": "isbn",
                        "type": "STRING",
                        "description": "The ISBN of the book.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "I want to see details of all the episodes from the Final Space series. Also, can you give me details of the book with ISBN '9780140328721'?",
        "relevant APIs": [],
        "query_id": 124
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "get_sitematrix",
                "api_description": "Retrieve the list of Wikimedia sites and related information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sitematrix": {
                        "count": "int",
                        "specials": [
                            {
                                "code": "str",
                                "name": "str",
                                "url": "str"
                            }
                        ]
                    }
                },
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "I am looking for a list of all Wikimedia sites available, in the site matrix in the mediawiki API, as well as the prayer schedule for the entire year on the rosary. Could you help with both?",
        "relevant APIs": [],
        "query_id": 125
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_boxes",
                "api_description": "Get information about a single senseBox.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format the sensor data is returned in.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "_id": "57000b8745fd40c8196ad04c"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dataseries": []
                }
            }
        ],
        "query": "Can you provide the latest weather measurements from a specific senseBox, and also give me a weather forecast for a location with coordinates 113.17 longitude and 23.09 latitude?",
        "relevant APIs": [],
        "query_id": 126
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_latest_measurements_for_sensor",
                "api_description": "Get the 10000 latest measurements for a sensor.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    },
                    {
                        "name": "sensor_id",
                        "type": "STRING",
                        "description": "The ID of the sensor you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "from_date",
                        "type": "STRING",
                        "description": "Beginning date of measurement data."
                    },
                    {
                        "name": "to_date",
                        "type": "STRING",
                        "description": "End date of measurement data."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "measurements": "list of measurements"
                }
            }
        ],
        "query": "Can you provide the weather forecast for Berlin, Germany with latitude=52.5200, longitude=13.4050 and also give me the latest 10000 measurements from a temperature sensor in a local senseBox?",
        "relevant APIs": [],
        "query_id": 127
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "awc",
                "api_name": "get_airsigmet",
                "api_description": "Fetches AIRMETs and SIGMETs in decoded format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Product type",
                        "default": null
                    },
                    {
                        "name": "hazard",
                        "type": "STRING",
                        "description": "Hazard type",
                        "default": null
                    },
                    {
                        "name": "level",
                        "type": "NUMBER",
                        "description": "The level +-3000' to search",
                        "default": 0
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specify the date",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "response": "str"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_statistics_descriptive",
                "api_description": "Compute basic descriptive statistics over specified time windows.",
                "required_parameters": [
                    {
                        "name": "box_id",
                        "type": "STRING",
                        "description": "Comma-separated list of senseBox IDs."
                    },
                    {
                        "name": "phenomenon",
                        "type": "STRING",
                        "description": "The name of the phenomenon you want to download the data for."
                    },
                    {
                        "name": "from_date",
                        "type": "STRING",
                        "description": "Beginning date of measurement data."
                    },
                    {
                        "name": "to_date",
                        "type": "STRING",
                        "description": "End date of measurement data."
                    },
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "Statistical operation to perform (e.g., 'mean', 'min', 'max')."
                    },
                    {
                        "name": "window",
                        "type": "STRING",
                        "description": "Time window for statistical aggregation."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format in which data should be returned.",
                        "default": "csv"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "str",
                    "response": "str"
                }
            }
        ],
        "query": "Can you check if there were any significant aviation weather hazards yesterday and also provide descriptive statistics on temperature for a selected region?",
        "relevant APIs": [],
        "query_id": 128
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "hourly": {
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": "Binary content of a PNG image"
            }
        ],
        "query": "What is the current temperature and wind speed forecast at a specific location in Celsius and km/h? Additionally, provide a graphical weather forecast image for the same location.",
        "relevant APIs": [],
        "query_id": 129
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_isigmet",
                "api_description": "Fetch international SIGMETs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "hazard",
                        "type": "STRING",
                        "description": "Hazard type",
                        "default": null
                    },
                    {
                        "name": "level",
                        "type": "NUMBER",
                        "description": "The level +-3000' to search",
                        "default": 0
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specify the date",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            },
            {
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "response_format": {
                    "format": "json or xml",
                    "content": "Weather forecast data"
                },
                "category_name": "Weather"
            }
        ],
        "query": "I need to check for any international SIGMETs related to turbulence. Could you also provide a machine-readable forecast for Paris, France?",
        "relevant APIs": [],
        "query_id": 130
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "string",
                    "response": "string"
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "utc_offset_seconds": "int",
                    "timezone": "str",
                    "timezone_abbreviation": "str",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    },
                    "hourly_units": {
                        "temperature_2m": "str"
                    }
                }
            }
        ],
        "query": "What is the current METAR weather observation at JFK airport? Additionally, can I get a detailed weather forecast for the next week for New York City where latitude=40.730610 and longitude=-73.935242?",
        "relevant APIs": [],
        "query_id": 131
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_metar",
                "api_description": "Fetches decoded aviation weather observations (METAR).",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Station ID(s).",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "taf",
                        "type": "BOOLEAN",
                        "description": "Include TAF information with the METAR.",
                        "default": false
                    },
                    {
                        "name": "hours",
                        "type": "NUMBER",
                        "description": "Hours back to search.",
                        "default": 1
                    },
                    {
                        "name": "bbox",
                        "type": "STRING",
                        "description": "Geographic bounding box.",
                        "default": null
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date to fetch records for.",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            },
            {
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "response_format": "Binary content of a PNG image",
                "category_name": "Weather"
            }
        ],
        "query": "Can you provide the latest METAR report for the Kansas City airport? Additionally, I'd like a graphical weather forecast for the coordinates 38.97\u00b0N, 94.72\u00b0W.",
        "relevant APIs": [],
        "query_id": 132
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_latest_measurements_of_sense_box",
                "api_description": "Get the latest measurements of all sensors of the specified senseBox.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "NUMBER",
                        "description": "Number of measurements to be retrieved for every sensor.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {}
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_graphical_forecast",
                "api_description": "Retrieves an image-based weather forecast for a specified location using the graphical API.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "ac",
                        "type": "INTEGER",
                        "description": "Altitude Correction, applicable in ASTRO",
                        "default": "0"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language",
                        "default": "en"
                    },
                    {
                        "name": "unit",
                        "type": "STRING",
                        "description": "Unit system, either 'metric' or 'british'",
                        "default": "metric"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format, 'internal' for graphical",
                        "default": "internal"
                    },
                    {
                        "name": "tzshift",
                        "type": "INTEGER",
                        "description": "Timezone adjustment",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {}
            }
        ],
        "query": "I want to know the most recent environmental measurements for a senseBox. Also, can you provide me with a graphical weather forecast for a location at 113.17 longitude and 23.09 latitude?",
        "relevant APIs": [],
        "query_id": 133
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "daily": {
                        "temperature_2m_max": "list",
                        "temperature_2m_min": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dataseries": [
                        {
                            "timepoint": "int",
                            "cloudcover": "int",
                            "seeing": "int",
                            "transparency": "int",
                            "rh2m": "int",
                            "wind10m": {
                                "direction": "string",
                                "speed": "int"
                            },
                            "temp2m": "int",
                            "prec_type": "string"
                        }
                    ]
                }
            }
        ],
        "query": "What is the weather forecast for the next 7 days for a given location with maximum and minimum temperatures? Also, retrieve machine-readable weather data including wind and temperature for the same location.",
        "relevant APIs": [],
        "query_id": 134
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            },
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_all_boxes",
                "api_description": "Get all senseBoxes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the search results.",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boxes": "list of senseBoxes"
                }
            }
        ],
        "query": "What's the weather forecast for New York City today with latitude=40.7128, longitude=74.0060? Additionally, provide a list of senseBoxes located around the area.",
        "relevant APIs": [],
        "query_id": 135
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "auction_data_slug",
                "api_description": "List only aggregated data for online auction {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for an auction (e.g., 'catawiki').",
                        "default": "catawiki"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "auctions_data": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "I need to find the nutritional details of this item using its barcode 3017624010701 and at the same time, could you provide me with data on whisky auctions from Catawiki?",
        "relevant APIs": [],
        "query_id": 136
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_by_ingredient",
                "api_description": "Search by ingredient.",
                "required_parameters": [
                    {
                        "name": "ingredient",
                        "type": "STRING",
                        "description": "The ingredient to filter cocktails by.",
                        "default": "Gin"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "slug": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Find me cocktails that can be made using Gin and also list all the distilleries worldwide.",
        "relevant APIs": [],
        "query_id": 137
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            }
        ],
        "query": "Can you tell me about a cocktail called 'Margarita' and also fetch the nutritional information for a product with barcode '3017624010701'?",
        "relevant APIs": [],
        "query_id": 138
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "str",
                            "country": "str",
                            "region": "str",
                            "slug": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am planning a trip and want to visit new places in Mexico. Can you suggest a random brewery to visit? Additionally, I would like to know about some whisky distilleries.",
        "relevant APIs": [],
        "query_id": 139
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        {
                            "strDrink": "string",
                            "strDrinkThumb": "string",
                            "idDrink": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "string",
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "whiskies_count": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide details about the Margarita cocktail recipe and get information about the Ardbeg distillery?",
        "relevant APIs": [],
        "query_id": 140
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "search_cocktail_by_name",
                "api_description": "Search cocktail by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the cocktail to search for.",
                        "default": "margarita"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "Can you find margarita cocktail recipes that are popular along with breweries that serve ale?",
        "relevant APIs": [],
        "query_id": 141
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            }
        ],
        "query": "Please list all cocktails starting with the letter 'C' and search for organic products with a nutrition grade of 'A' specifically from Open Food Facts.",
        "relevant APIs": [],
        "query_id": 142
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "List cocktails starting with the letter 'M' and suggest a random brewery I could visit.",
        "relevant APIs": [],
        "query_id": 143
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": {
                        "type": "array"
                    }
                }
            }
        ],
        "query": "Can you find orange juice products with a nutrition grade of 'C' specifically as defined by the Open Food Facts community, and also provide a list of all the available distilleries' main information from the Whisky Hunter API?",
        "relevant APIs": [],
        "query_id": 144
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "str",
                            "name": "str",
                            "country": "str",
                            "region": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find breweries that specialize in ales? I'm also interested in detailed data for a whisky distillery, particularly Ardbeg.",
        "relevant APIs": [],
        "query_id": 145
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "brewery_type": "string",
                    "city": "string",
                    "state": "string"
                }
            },
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "code": "string",
                            "product_name": "string",
                            "categories_tags_en": [
                                "string"
                            ],
                            "nutrition_grades": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest a random brewery in the United States that I can visit? Also, find some healthy food products with a good nutrition grade that I can enjoy along with the visit, and some bad ones that I should avoid using Open Food Facts.",
        "relevant APIs": [],
        "query_id": 146
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compresses an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "str",
                    "src": "str",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "str"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text using Robohash. Customize via different sets, backgrounds, sizes.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": "binary"
                }
            }
        ],
        "query": "I have an image URL that I want to compress while maintaining its quality. Can you also create a themed avatar using 'creative_ai' as the input text?",
        "relevant APIs": [],
        "query_id": 147
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image_by_breed",
                "api_description": "Retrieve a random image of a specific breed.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed of dog image to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "string"
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "Can you show me a random image of a retriever dog and also create an artistic representation of a 'retriever IRL' using the Robohash API?",
        "relevant APIs": [],
        "query_id": 148
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "images_by_breed",
                "api_description": "Retrieve all images of a specific breed.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed of dog images to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": [
                        "string"
                    ],
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_object_details",
                "api_description": "Returns detailed information of an object.",
                "required_parameters": [
                    {
                        "name": "objectID",
                        "type": "INTEGER",
                        "description": "The unique Object ID for the object."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "objectID": "int",
                    "isHighlight": "boolean",
                    "accessionNumber": "string",
                    "accessionYear": "string",
                    "isPublicDomain": "boolean",
                    "primaryImage": "string",
                    "primaryImageSmall": "string",
                    "additionalImages": [
                        "string"
                    ],
                    "constituents": [
                        {
                            "role": "string",
                            "name": "string"
                        }
                    ],
                    "department": "string",
                    "objectName": "string",
                    "title": "string",
                    "culture": "string",
                    "metadataDate": "string",
                    "repository": "string",
                    "objectURL": "string",
                    "tags": [
                        {
                            "term": "string",
                            "aic:tag_id": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide images of bulldogs and also give me detailed info about a specific artwork from the Met Museum collection with ID 1?",
        "relevant APIs": [],
        "query_id": 149
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection based on certain criteria.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a robohash image for a specific object ID.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": "binary"
                }
            }
        ],
        "query": "Find highlighted objects related to 'sunflowers' in the Met's collection and create a unique image for the object IDs retrieved.",
        "relevant APIs": [],
        "query_id": 150
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents_search",
                "api_description": "Search for artists or agents in the Art Institute of Chicago database.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "john"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Spawn an avatar in a custom style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Find details about artists or agents related to Picasso in the Art Institute of Chicago, and generate a 'lorelei' styled avatar without flipping it.",
        "relevant APIs": [],
        "query_id": 151
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks in the Art Institute of Chicago data.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find Renaissance sculptures made of marble in the Met collection? Also, I'd like to see artworks related to Van Gogh in the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 152
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks",
                "api_description": "Retrieve artworks data from the Art Institute of Chicago.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ids",
                        "type": "STRING",
                        "description": "Comma-separated list of ids.",
                        "default": null
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "default": 2
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "default": 1
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the Dogs API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message": {
                        "breed": "array"
                    }
                }
            }
        ],
        "query": "Can you provide a list of all breeds of dogs and some artworks from the Art Institute of Chicago?",
        "relevant APIs": [],
        "query_id": 153
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents_search",
                "api_description": "Search for agents, such as artists or organizations, associated with the Art Institute of Chicago.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "john"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "images_by_breed",
                "api_description": "Retrieve all images of a specific breed.",
                "required_parameters": [
                    {
                        "name": "breed",
                        "type": "STRING",
                        "description": "The breed of dog images to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message": [
                        "str"
                    ]
                }
            }
        ],
        "query": "I am looking for artists named John associated with the Art Institute of Chicago and images of beagle dogs.",
        "relevant APIs": [],
        "query_id": 154
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artwork_by_id",
                "api_description": "Retrieve artwork by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "default": 4
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Retrieve information about the artwork with ID 1 from the Art Institute of Chicago and create a robot image using the text 'artwork_1_image'.",
        "relevant APIs": [],
        "query_id": 155
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artwork_by_id",
                "api_description": "Retrieve artwork details by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "default": 4
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "int",
                        "title": "str",
                        "artist_display": "str",
                        "place_of_origin": "str",
                        "date_display": "str"
                    }
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "message": "str"
                }
            }
        ],
        "query": "Show me details of an artwork by ID from the Art Institute of Chicago and a random image of a dog.",
        "relevant APIs": [],
        "query_id": 156
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary/str/json"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object"
                    },
                    "status": "success"
                }
            }
        ],
        "query": "Could you generate an avatar in pixel-art style? Additionally, list all available dog breeds.",
        "relevant APIs": [],
        "query_id": 157
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks at the Chicago museum.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find artworks related to Monet in the Art Institute of Chicago and generate a unique robot image from the text 'monet_art'?",
        "relevant APIs": [],
        "query_id": 158
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Searches for objects that match the query.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            }
        ],
        "query": "Find me a random dog image and search the Met Museum for artworks related to dogs with images available.",
        "relevant APIs": [],
        "query_id": 159
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search for artworks in the Art Institute of Chicago's collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": []
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find artworks related to Van Gogh in the Art Institute of Chicago's collection, and generate an avatar with a 'pixel-art' style using the name 'ArtLover' as the seed?",
        "relevant APIs": [],
        "query_id": 160
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks in the Art Institute of Chicago collection.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compresses an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "str",
                    "src": "str",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "str"
                }
            }
        ],
        "query": "Can you find artworks related to Van Gogh in the Art Institute of Chicago's collection and then compress an image from the results for easy sharing?",
        "relevant APIs": [],
        "query_id": 161
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agent_by_id",
                "api_description": "Retrieve detailed information about an agent (artist/organization) by ID.",
                "required_parameters": [
                    {
                        "name": "agent_id",
                        "type": "INTEGER",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "int",
                        "title": "str",
                        "birth_date": "str",
                        "death_date": "str",
                        "description": "str"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_post_method",
                "api_description": "Compresses an image by sending the file using the POST method.",
                "required_parameters": [
                    {
                        "name": "file_path",
                        "type": "STRING",
                        "description": "The local file path of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    }
                ],
                "method": "POST",
                "template_response": {
                    "dest": "str",
                    "src": "str",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "str"
                }
            }
        ],
        "query": "Please provide detailed information about an artist using their ID from the Art Institute of Chicago, and then compress a local image file to include in their digital portfolio.",
        "relevant APIs": [],
        "query_id": 162
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object"
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Returns a list of all departments.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide me with a list of all dog breeds and also a list of all departments in the Met Museum collection?",
        "relevant APIs": [],
        "query_id": 163
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_post_method",
                "api_description": "Compresses an image by sending the file using the POST method.",
                "required_parameters": [
                    {
                        "name": "file_path",
                        "type": "STRING",
                        "description": "The local file path of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    }
                ],
                "method": "POST"
            }
        ],
        "query": "Can you create an avatar in the 'lorelei' style, save it locally, and then compress it using the POST method?",
        "relevant APIs": [],
        "query_id": 164
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artwork_by_id",
                "api_description": "Retrieve artwork details by ID from the Art Institute of Chicago.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "default": 4
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {}
                },
                "optional_parameters": []
            },
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generate a custom avatar with optional parameters like hair, flip and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Provide the details of the artwork with ID 12345 from the Art Institute of Chicago, and create a 'lorelei' style avatar in 'png' format with a 'short01' hair style.",
        "relevant APIs": [],
        "query_id": 165
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Retrieve a list of all departments in the Met's collection.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compress an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "string",
                    "src": "string",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "string"
                }
            }
        ],
        "query": "I wish to know all the departments available in the Met's collection. Additionally, I have a URL (https://resmush.it/wp-content/uploads/2024/02/testimage.jpg) to an image of a painting from this collection that I need to compress to reduce its size.",
        "relevant APIs": [],
        "query_id": 166
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Retrieve a list of all departments in the Met.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique robohash image based on given text.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": "binary"
                }
            }
        ],
        "query": "Can you list all departments in the Met Museum and generate a unique image for each department name?",
        "relevant APIs": [],
        "query_id": 167
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "list_all_breeds",
                "api_description": "List all breeds available in the API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": {
                        "type": "object",
                        "properties": {
                            "breed_name": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "status": "success"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "What are all the breeds of dogs available, and can you generate a unique image of a dog labeled as 'robotic canine' using Robohash?",
        "relevant APIs": [],
        "query_id": 168
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary/str/json"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "status": "success"
                }
            }
        ],
        "query": "Can you generate a lorelei style avatar with the seed 'John' in JPG format? Also, get a random image of a dog.",
        "relevant APIs": [],
        "query_id": 169
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generate a unique avatar based on a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "avatar": "bytes/svg content for the avatar"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection with various filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            }
        ],
        "query": "Can you generate an avatar in the 'pixel-art' style with specific hair options and then search for Renaissance sculptures in the Met's collection that have images?",
        "relevant APIs": [],
        "query_id": 170
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary or object"
                    }
                }
            },
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "I would like to create a pixel-art avatar with a specific seed and flip option, and also generate a unique robot image using the text 'Artificial Intelligence' with a background set 'bg2'.",
        "relevant APIs": [],
        "query_id": 171
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style with options like seed, hair, flip, and format.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compresses an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "How can I generate a pixel-art avatar with a specific hairstyle, convert it to PNG, and then compress the image using a URL?",
        "relevant APIs": [],
        "query_id": 172
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dogs",
                "api_name": "random_image",
                "api_description": "Retrieve a single random image from all dogs collections.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string"
                }
            },
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compresses an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "str"
                }
            }
        ],
        "query": "Can you provide a random image of a dog and then compress it using an online image optimization service?",
        "relevant APIs": [],
        "query_id": 173
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_objects",
                "api_description": "Get a list of object IDs based on department filter.",
                "optional_parameters": [
                    {
                        "name": "metadataDate",
                        "type": "STRING",
                        "description": "Return objects with updated data after this date."
                    },
                    {
                        "name": "departmentIds",
                        "type": "LIST[INTEGER]",
                        "description": "Return objects in specified departments."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                },
                "required_parameters": []
            },
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "agents_search",
                "api_description": "Search agents in the Art Institute of Chicago database.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "john"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "description": "str"
                        }
                    ]
                },
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Retrieve the list of objects from the Met's Egyptian Art department. Moreover, search for agents related to Picasso in the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 174
    },
    {
        "api_list": [
            {
                "category_name": "Jobs",
                "tool_name": "jobicy",
                "api_name": "get_remote_jobs",
                "api_description": "Retrieve the latest remote job listings with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of listings to return.",
                        "default": "50"
                    },
                    {
                        "name": "geo",
                        "type": "STRING",
                        "description": "Filter by job region.",
                        "default": "all regions"
                    },
                    {
                        "name": "industry",
                        "type": "STRING",
                        "description": "Filter by job category.",
                        "default": "all categories"
                    },
                    {
                        "name": "tag",
                        "type": "STRING",
                        "description": "Search by job title and description.",
                        "default": "all jobs"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "jobs": [
                        {
                            "title": "string",
                            "company": "string",
                            "location": "string",
                            "date_posted": "string",
                            "description": "string",
                            "url": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Jobs",
                "tool_name": "jobicy",
                "api_name": "get_rss_feed",
                "api_description": "Retrieve job listings in RSS format with optional filters.",
                "required_parameters": [
                    {
                        "name": "feed",
                        "type": "STRING",
                        "description": "Feed type.",
                        "default": "job_feed"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "job_categories",
                        "type": "STRING",
                        "description": "Filter by job category.",
                        "default": ""
                    },
                    {
                        "name": "job_types",
                        "type": "STRING",
                        "description": "Filter by job type.",
                        "default": ""
                    },
                    {
                        "name": "search_keywords",
                        "type": "STRING",
                        "description": "Search by job title and description.",
                        "default": ""
                    },
                    {
                        "name": "search_region",
                        "type": "STRING",
                        "description": "Filter by job region.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": "RSS Feed Data"
            },
            {
                "category_name": "Jobs",
                "tool_name": "jobicy",
                "api_name": "get_new_jobs_xml",
                "api_description": "Retrieve XML formatted data of the most recent remote jobs.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "XML Data"
            }
        ],
        "query": "I want to find the latest remote job listings in the USA in the marketing industry related to Python. Additionally, can you provide the RSS feed for full-time jobs in the support category in the USA, and retrieve the most recent remote jobs in XML format?",
        "relevant APIs": [],
        "query_id": 175
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "release_group_browse",
                "api_description": "Browse release groups by artist MBID.",
                "required_parameters": [
                    {
                        "name": "artist_mbid",
                        "type": "STRING",
                        "description": "The MBID for the artist.",
                        "default": "b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter release groups by type (album, single, etc.).",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter releases by status (official, etc.).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "release-groups": [
                        {
                            "title": "str",
                            "primary-type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_hot_tracks",
                "api_description": "Fetch the list of hot tracks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "List the latest album releases from the artist 'Beyonc\u00e9' and provide me with the current hot tracks.",
        "relevant APIs": [],
        "query_id": 176
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "name": "str",
                            "mbid": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user.",
                "required_parameters": [
                    "uHandle"
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you search for artists similar to 'Adele' and also fetch the tracks from the Openwhyd user 'john_doe's playlist?",
        "relevant APIs": [],
        "query_id": 177
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_genres",
                "api_description": "Fetch a number of random music genres.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of genres to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "country": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest some random music genres and search for Taylor Swift?",
        "relevant APIs": [],
        "query_id": 178
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_stories",
                "api_description": "Fetch a number of random genre stories",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of stories to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "string"
                ]
            },
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user",
                "required_parameters": [
                    "uHandle"
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "track": "str",
                        "artist": "str",
                        "playlistId": "int"
                    }
                ]
            }
        ],
        "query": "I am curious to read some random stories about music genres and also see what tracks Adrien has recently posted.",
        "relevant APIs": [],
        "query_id": 179
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_stories",
                "api_description": "Fetch a number of random genre stories.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of stories to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "release_group_browse",
                "api_description": "Browse release groups by artist MBID.",
                "required_parameters": [
                    {
                        "name": "artist_mbid",
                        "type": "STRING",
                        "description": "The MBID for the artist.",
                        "default": "b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter release groups by type (album, single, etc.).",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter releases by status (official, etc.).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "release-groups": [
                        {
                            "id": "str",
                            "title": "str",
                            "primary-type": "str",
                            "secondary-types": [
                                "str"
                            ],
                            "first-release-date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me some unique music genre stories and find albums or singles by The Beatles?",
        "relevant APIs": [],
        "query_id": 180
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "query_cep",
                "api_description": "Retrieve information for a given ZIP code in Brazil.",
                "required_parameters": [
                    {
                        "name": "cep",
                        "type": "STRING",
                        "description": "ZIP code in the format of 8 digits."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cep": "string",
                    "logradouro": "string",
                    "complemento": "string",
                    "bairro": "string",
                    "localidade": "string",
                    "uf": "string",
                    "ibge": "string",
                    "gia": "string",
                    "ddd": "string",
                    "siafi": "string"
                }
            }
        ],
        "query": "I want a greeting in Portuguese based on the IP address from Brazil. Also, can you provide the address details for the Brazilian ZIP code 01001000?",
        "relevant APIs": [
            "say_hello",
            "query_cep"
        ],
        "query_id": 181
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_client_ip_location",
                "api_description": "Retrieve complete location information for the client's IP address.",
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str",
                    "region": "str",
                    "city": "str"
                },
                "required_parameters": []
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "search_address",
                "api_description": "Search for a ZIP code based on the address details.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Two-letter state code in Brazil."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city. Must have at least 3 characters."
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "Name of the street. Must have at least 3 characters."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "cep": "str",
                        "logradouro": "str",
                        "bairro": "str",
                        "localidade": "str",
                        "uf": "str"
                    }
                ]
            }
        ],
        "query": "Can you find the current location details for my IP address? Additionally, find the ZIP code for Paulista Avenue in S\u00e3o Paulo, SP, Brazil.",
        "relevant APIs": [],
        "query_id": 182
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "nearest_postcodes",
                "api_description": "Get nearest postcodes for given longitude and latitude.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for the search location."
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for the search location."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "default": 10
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": [
                        {
                            "postcode": "string",
                            "longitude": "float",
                            "latitude": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "string",
                    "state": "string",
                    "city": "string"
                }
            }
        ],
        "query": "Find the nearest UK postcodes to the location with longitude -0.127758 and latitude 51.507351. Also, retrieve location details for the US ZIP code '10001'.",
        "relevant APIs": [],
        "query_id": 183
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "Can you provide the address for a location at latitude 48.8588443 and longitude 2.294351? Furthermore, what is the city, state, and country for ZIP code 30301?",
        "relevant APIs": [],
        "query_id": 184
    },
    {
        "api_list": [
            {
                "tool_name": "opentopodata",
                "api_name": "get_datasets",
                "api_description": "Fetches the list of datasets available on the server.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Geo"
            },
            {
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "method": "GET",
                "category_name": "Geo",
                "optional_parameters": []
            }
        ],
        "query": "What datasets are available for elevation data? And can you give me information about the postal code 90210 in the United States?",
        "relevant APIs": [],
        "query_id": 185
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": {
                        "postcode": "string",
                        "country": "string",
                        "longitude": "float",
                        "latitude": "float"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "string",
                    "state": "string",
                    "city": "string"
                }
            }
        ],
        "query": "What are the details of the UK postcode 'SW1A1AA', and can you fetch the country, state, and city for the US ZIP code '90210'?",
        "relevant APIs": [],
        "query_id": 186
    },
    {
        "api_list": [
            {
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            },
            {
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "method": "GET",
                "category_name": "Geo",
                "optional_parameters": []
            }
        ],
        "query": "Could you find out the elevation of a location in a dataset at coordinates 34.0564,-118.2468? Also, provide postal codes for Beverly Hills, California.",
        "relevant APIs": [],
        "query_id": 187
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "city": "string",
                    "region": "string",
                    "country": "string",
                    "latitude": "float",
                    "longitude": "float"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "float",
                            "location": {
                                "lat": "float",
                                "lng": "float"
                            },
                            "dataset": "string"
                        }
                    ],
                    "status": "string"
                }
            }
        ],
        "query": "Can you find out the location information for the IP address 8.8.8.8 and get the elevation for this location using SRTM dataset?",
        "relevant APIs": [],
        "query_id": 188
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "city": "str",
                    "region": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                },
                "optional_parameters": []
            }
        ],
        "query": "I am trying to find location details for the IP address 8.8.8.8 and also want to know the city, state, and country for the ZIP code 90210.",
        "relevant APIs": [],
        "query_id": 189
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_data_sources_info",
                "api_description": "Retrieve information about the data sources used by the Country.is API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cloudflare": {
                        "enabled": "bool"
                    },
                    "maxmind": {
                        "enabled": "bool",
                        "build": "str"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "I'd like to know what data sources are used by the Country.is API and can you also convert easting and northing coordinates 456789, 789012 to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 190
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional parameters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you find the address for 'Champ de Mars, Paris' and provide detailed information about the postal code '75007' in France?",
        "relevant APIs": [],
        "query_id": 191
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "city": "string",
                    "region": "string",
                    "country": "string",
                    "latitude": "number",
                    "longitude": "number"
                }
            }
        ],
        "query": "I have an IP address 8.8.8.8. What country does it belong to, and can you provide more details about its geographical location?",
        "relevant APIs": [],
        "query_id": 192
    },
    {
        "api_list": [
            {
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            },
            {
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Geo"
            }
        ],
        "query": "Can you provide the location details for the IP address 8.8.8.8 and lookup the details for postcode SW1A1AA?",
        "relevant APIs": [],
        "query_id": 193
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_client_ip_location_field",
                "api_description": "Retrieve a specific location field for the client's IP address.",
                "required_parameters": [
                    {
                        "name": "field",
                        "type": "STRING",
                        "description": "The specific field to retrieve."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "field_value": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "str",
                    "country": "str",
                    "country abbreviation": "str",
                    "places": [
                        {
                            "place name": "str",
                            "longitude": "str",
                            "state": "str",
                            "state abbreviation": "str",
                            "latitude": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Tell me which country I am currently in based on my IP, and also provide the postal codes available in Beverly Hills, California, USA.",
        "relevant APIs": [],
        "query_id": 194
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_client_ip_location",
                "api_description": "Retrieve complete location information for the client's IP address.",
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "city": "str",
                    "region": "str",
                    "country": "str"
                },
                "required_parameters": []
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you provide my current location based on my IP address and also tell me the location details for ZIP code 10001?",
        "relevant APIs": [],
        "query_id": 195
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm planning a trip and found an address 8 bd du port that I want to look up. I also need to know location details for the IP address 8.8.8.8. Can you provide this information?",
        "relevant APIs": [],
        "query_id": 196
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            }
        ],
        "query": "If I give you an IP address of 89.120.120.120, can you find out the country and give a greeting in the local language?",
        "relevant APIs": [],
        "query_id": 197
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "What is a greeting in the native language of someone located in 90210 (Beverly Hills, CA)?",
        "relevant APIs": [
            {
                "api_name": "get_location_by_zip",
                "tool_name": "ziptastic"
            },
            {
                "api_name": "say_hello",
                "tool_name": "hellosalut"
            }
        ],
        "query_id": 198
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "city": "str",
                    "region": "str",
                    "country": "str",
                    "location": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "str",
                    "country": "str",
                    "country abbreviation": "str",
                    "places": [
                        {
                            "place name": "str",
                            "longitude": "str",
                            "state": "str",
                            "state abbreviation": "str",
                            "latitude": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What location details can you provide for the IP address 8.8.8.8? Also, give me the postal code information for 90210 in the US.",
        "relevant APIs": [],
        "query_id": 199
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geojs",
                "api_name": "get_ptr_record",
                "api_description": "Returns PTR (pointer record) information about an IP.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ptr": "string"
                }
            }
        ],
        "query": "Can you tell me which country the IP address 9.9.9.9 belongs to? Additionally, what is the PTR record information for this IP address?",
        "relevant APIs": [],
        "query_id": 200
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": {
                        "country": "string",
                        "region": "string"
                    }
                }
            }
        ],
        "query": "What country is associated with the IP address 8.8.8.8? Also, can you provide details about the postcode SW1A1AA?",
        "relevant APIs": [],
        "query_id": 201
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_datasets",
                "api_description": "Fetches the list of datasets available on the server.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "STRING",
                            "child_datasets": "ARRAY"
                        }
                    ],
                    "status": "STRING"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "search_address",
                "api_description": "Search for a ZIP code based on the address details.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Two-letter state code in Brazil."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city. Must have at least 3 characters."
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "Name of the street. Must have at least 3 characters."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "cep": "string",
                        "logradouro": "string",
                        "complemento": "string",
                        "bairro": "string",
                        "localidade": "string",
                        "uf": "string",
                        "ibge": "string",
                        "gia": "string",
                        "ddd": "string",
                        "siafi": "string"
                    }
                ]
            }
        ],
        "query": "What datasets are available for retrieving elevation data, and can you find the ZIP code for Rua Domingos in Porto Alegre, Rio Grande do Sul?",
        "relevant APIs": [],
        "query_id": 202
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_client_ip_location",
                "api_description": "Retrieve complete location information for the client's IP address.",
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "required_parameters": []
            }
        ],
        "query": "I am currently on a road trip and just stopped at these coordinates: latitude 48.357 and longitude 2.37. What address am I near? Also, can you tell me the location details of my current IP address?",
        "relevant APIs": [],
        "query_id": 203
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "What is the address associated with the name 'Eiffel Tower'? Also, what is the city, state, and country of the ZIP code 10001?",
        "relevant APIs": [],
        "query_id": 204
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "nearest_postcodes",
                "api_description": "Get nearest postcodes for given longitude and latitude.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for the search location."
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for the search location."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "default": 10
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": "array"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "search_address",
                "api_description": "Search for a ZIP code based on the address details.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Two-letter state code in Brazil."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city. Must have at least 3 characters."
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "Name of the street. Must have at least 3 characters."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "cep": "string",
                        "logradouro": "string",
                        "complemento": "string"
                    }
                ]
            }
        ],
        "query": "Please find the nearest UK postcodes for the coordinates of longitude -0.127758 and latitude 51.507351. Also, search for the Brazilian ZIP code based on the address in Minas Gerais, Belo Horizonte, Av. Afonso Pena.",
        "relevant APIs": [],
        "query_id": 205
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "validate_postcode",
                "api_description": "Validate if a postcode is correct.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to validate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "result": "bool"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "str",
                    "country": "str",
                    "country abbreviation": "str",
                    "places": [
                        {
                            "place name": "str",
                            "longitude": "str",
                            "state": "str",
                            "state abbreviation": "str",
                            "latitude": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I recently moved to '90210', Beverly Hills in California. Can you validate if the postcode '90210' is a valid UK postcode? Additionally, I want to check which postcodes are associated with Beverly Hills in California.",
        "relevant APIs": [],
        "query_id": 206
    },
    {
        "api_list": [
            {
                "tool_name": "ipapi",
                "api_name": "get_ip_location_field",
                "api_description": "Retrieve a specific location field for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve the location field for."
                    },
                    {
                        "name": "field",
                        "type": "STRING",
                        "description": "The specific field to retrieve."
                    }
                ],
                "method": "GET",
                "category_name": "Geo",
                "optional_parameters": []
            },
            {
                "tool_name": "postcodes",
                "api_name": "nearest_postcodes",
                "api_description": "Get nearest postcodes for given longitude and latitude.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for the search location."
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for the search location."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "default": 10
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            }
        ],
        "query": "What is the city associated with the IP 8.8.8.8, and can you find the nearest postcodes around the geographical location of London?",
        "relevant APIs": [],
        "query_id": 207
    },
    {
        "api_list": [
            {
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            },
            {
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            }
        ],
        "query": "Could you tell me what address corresponds to the geographic coordinates of the Golden Gate Bridge, and how to say hello to someone in the United States?",
        "query_id": 208
    },
    {
        "api_list": [
            {
                "tool_name": "ipapi",
                "api_name": "get_client_ip_location_field",
                "api_description": "Retrieve a specific location field for the client's IP address.",
                "required_parameters": [
                    {
                        "name": "field",
                        "type": "STRING",
                        "description": "The specific field to retrieve."
                    }
                ],
                "method": "GET",
                "category_name": "Geo",
                "optional_parameters": []
            },
            {
                "tool_name": "postcodes",
                "api_name": "validate_postcode",
                "api_description": "Validate if a postcode is correct.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to validate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Geo"
            }
        ],
        "query": "What country is associated with my current IP address and is the postcode SW1A1AA valid?",
        "relevant APIs": [],
        "query_id": 209
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "int",
                    "result": {
                        "postcode": "str",
                        "quality": "int",
                        "eastings": "int",
                        "northings": "int",
                        "country": "str",
                        "nhs_ha": "str",
                        "admin_district": "str",
                        "parish": "str",
                        "admin_county": "str",
                        "admin_ward": "str",
                        "longitude": "float",
                        "latitude": "float"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "str",
                    "country": "str",
                    "country abbreviation": "str",
                    "places": [
                        {
                            "place name": "str",
                            "longitude": "str",
                            "state": "str",
                            "state abbreviation": "str",
                            "latitude": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am conducting a research project that involves comparing postal information from the UK and the US. Could you provide geographic information for the postal code 'SW1A 1AA' in the UK and '90210' in the US?",
        "relevant APIs": [],
        "query_id": 210
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "search_address",
                "api_description": "Search for a ZIP code based on the address details.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Two-letter state code in Brazil."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city. Must have at least 3 characters."
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "Name of the street. Must have at least 3 characters."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "cep": "string",
                        "logradouro": "string",
                        "complemento": "string",
                        "bairro": "string",
                        "localidade": "string",
                        "uf": "string",
                        "ibge": "string",
                        "gia": "string",
                        "ddd": "string",
                        "siafi": "string"
                    }
                ]
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "string",
                    "state": "string",
                    "city": "string"
                }
            }
        ],
        "query": "I need to find the ZIP code for an address in Porto Alegre, RS, Brazil on a street called Domingos. Additionally, tell me the city and state corresponding to ZIP code 30301 in the USA.",
        "relevant APIs": [],
        "query_id": 211
    },
    {
        "api_list": [
            {
                "tool_name": "adresse",
                "api_name": "search_address",
                "api_description": "Perform a full-text address search with optional filters.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "autocomplete",
                        "type": "INTEGER",
                        "description": "Enable or disable autocomplete.",
                        "default": "1"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for geographic priority.",
                        "default": ""
                    },
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter by type.",
                        "default": ""
                    },
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "Filter by postal code.",
                        "default": ""
                    },
                    {
                        "name": "citycode",
                        "type": "STRING",
                        "description": "Filter by INSEE city code.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            },
            {
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "category_name": "Geo"
            }
        ],
        "query": "I am looking for the address of the Eiffel Tower in Paris and would like to greet people in France in their native language. Can you help with this?",
        "query_id": 212
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "search_address",
                "api_description": "Search for a ZIP code based on the address details.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Two-letter state code in Brazil."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city. Must have at least 3 characters."
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "Name of the street. Must have at least 3 characters."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "cep": "string",
                        "logradouro": "string",
                        "complemento": "string",
                        "bairro": "string",
                        "localidade": "string",
                        "uf": "string"
                    }
                ]
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "string",
                    "country": "string",
                    "country abbreviation": "string",
                    "places": [
                        {
                            "place name": "string",
                            "longitude": "string",
                            "state": "string",
                            "state abbreviation": "string",
                            "latitude": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find the ZIP code for 'Domingos' street located in Porto Alegre, RS in Brazil using ViaCEP? Meanwhile, can you find all ZIP codes associated with Beverly Hills in California, USA using Zippopotamus?",
        "relevant APIs": [],
        "query_id": 213
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "ipapi",
                "api_name": "get_ip_location",
                "api_description": "Retrieve complete location information for a specific IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to retrieve location for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format: json, jsonp, xml, csv, yaml",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str",
                    "region": "str",
                    "city": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "query_cep",
                "api_description": "Retrieve information for a given ZIP code in Brazil.",
                "required_parameters": [
                    {
                        "name": "cep",
                        "type": "STRING",
                        "description": "ZIP code in the format of 8 digits."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cep": "str",
                    "logradouro": "str",
                    "bairro": "str",
                    "localidade": "str",
                    "uf": "str"
                }
            }
        ],
        "query": "What is the location information of the IP address 8.8.8.8? Also, can you provide the details for the Brazilian ZIP code 01001000?",
        "relevant APIs": [],
        "query_id": 214
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "string",
                    "country": "string",
                    "country abbreviation": "string",
                    "places": [
                        {
                            "place name": "string",
                            "longitude": "string",
                            "state": "string",
                            "state abbreviation": "string",
                            "latitude": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you give me a greeting in the native language for the country that uses the postal code 90210?",
        "relevant APIs": [
            {
                "api_name": "get_zip_info_by_postal_code",
                "tool_name": "zippopotamus"
            },
            {
                "api_name": "say_hello",
                "tool_name": "hellosalut"
            }
        ],
        "query_id": 215
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            }
        ],
        "query": "Can you find which country the IP address 8.8.8.8 belongs to? Also, what is the elevation at coordinates 37.7749,-122.4194 using the 'srtm' dataset with bilinear interpolation?",
        "relevant APIs": [],
        "query_id": 216
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Fetches elevation data for specific locations using a specified dataset.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "nearest_postcodes",
                "api_description": "Get nearest postcodes for given longitude and latitude.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude for the search location."
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude for the search location."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "default": 10
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "INTEGER",
                    "result": "ARRAY"
                }
            }
        ],
        "query": "I have the coordinates for a hiking trail. Can you provide the elevation data and find the nearest postcodes to a specific point along the trail?",
        "relevant APIs": [],
        "query_id": 217
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "query_cep",
                "api_description": "Retrieve information for a given ZIP code in Brazil.",
                "required_parameters": [
                    {
                        "name": "cep",
                        "type": "STRING",
                        "description": "ZIP code in the format of 8 digits."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cep": "string",
                    "logradouro": "string",
                    "complemento": "string",
                    "bairro": "string",
                    "localidade": "string",
                    "uf": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_postal_code",
                "api_description": "Fetch detailed postal code information for given postal code and country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code to lookup, such as '90210'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "string",
                    "country": "string",
                    "country abbreviation": "string",
                    "places": [
                        {
                            "place name": "string",
                            "longitude": "string",
                            "state": "string",
                            "state abbreviation": "string",
                            "latitude": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I have a ZIP code 01001000 for a location in Brazil. Can you retrieve the detailed address information for this ZIP code using the ViaCEP API? At the same time, can you provide information about the postal code 90210 in the United States using the Zippopotamus API?",
        "relevant APIs": [],
        "query_id": 218
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "What country am I currently in based on the IP address '8.8.8.8', and can you convert the British National Grid coordinates 326897, 673919 to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 219
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "What is the address of the geographic coordinates latitude 34.0522 and longitude -118.2437? Also, list all postal codes in the city of Los Angeles, California.",
        "relevant APIs": [],
        "query_id": 220
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Reads the elevation from a given dataset based on specified locations.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                },
                "optional_parameters": []
            }
        ],
        "query": "I want to know the elevation at the location of 37.7749, -122.4194 using the SRTM dataset. Can you also tell me which city, state, and country correspond to the ZIP code 90210?",
        "relevant APIs": [],
        "query_id": 221
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_datasets",
                "api_description": "Retrieves a list of available datasets on the Open Topo Data server.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "STRING",
                            "child_datasets": "ARRAY"
                        }
                    ],
                    "status": "STRING"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "validate_postcode",
                "api_description": "Validate if a postcode is correct.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to validate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "INTEGER",
                    "result": "BOOLEAN"
                }
            }
        ],
        "query": "Can you give me a list of datasets available for elevation data? Also, could you validate if SW1A1AA is a correct UK postcode?",
        "relevant APIs": [],
        "query_id": 222
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "adresse",
                "api_name": "reverse_geocode",
                "api_description": "Perform reverse geocoding to get address from coordinates.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the point to reverse geocode.",
                        "default": ""
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the point to reverse geocode.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type_filter",
                        "type": "STRING",
                        "description": "Filter the type of result.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "features": "ARRAY"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            }
        ],
        "query": "I am at a specific latitude and longitude lat=48.357, lon=2.37; can you tell me what the nearest address is? Also, can you identify the country of this IP address '9.9.9.9'?",
        "relevant APIs": [],
        "query_id": 223
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geoplugin",
                "api_name": "currency_converter",
                "api_description": "Converts an amount from one currency to another using real-time rates.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The currency code of the base currency.",
                        "default": "USD"
                    },
                    {
                        "name": "amount",
                        "type": "FLOAT",
                        "description": "The amount in base currency to convert.",
                        "default": 1.0
                    },
                    {
                        "name": "target_currency",
                        "type": "STRING",
                        "description": "The currency code to convert the base currency to.",
                        "default": "EUR"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base_currency": "str",
                    "amount": "float",
                    "local_currency": "str",
                    "local_currency_symbol": "str",
                    "exchange_rate": "float",
                    "converted_amount": "float",
                    "location": {
                        "city": "str",
                        "country": "str"
                    }
                }
            }
        ],
        "query": "Given the IP address 8.8.8.8, can you find out its country and also provide a currency conversion from USD to the local currency?",
        "relevant APIs": [],
        "query_id": 224
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_ip",
                "api_description": "Retrieve the country for a specified IP address.",
                "required_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "The IP address to query.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country": "str"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "getthedata",
                "api_name": "bng2latlong",
                "api_description": "Convert an OSGB36 easting and northing to WGS84 latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "easting",
                        "type": "INTEGER",
                        "description": "The easting coordinate.",
                        "default": "None"
                    },
                    {
                        "name": "northing",
                        "type": "INTEGER",
                        "description": "The northing coordinate.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "response_format",
                        "type": "STRING",
                        "description": "Specify the response format, 'json' or 'xml'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "ok or error",
                    "easting": "int",
                    "northing": "int",
                    "latitude": "float",
                    "longitude": "float"
                }
            }
        ],
        "query": "Can you tell me which country the IP address 8.8.8.8 belongs to and also convert the coordinates 651409, 313177 from easting and northing to latitude and longitude?",
        "relevant APIs": [],
        "query_id": 225
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_data_sources_info",
                "api_description": "Retrieve information about the data sources used by the Country.is API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cloudflare": {
                        "enabled": "bool"
                    },
                    "maxmind": {
                        "enabled": "bool",
                        "build": "string"
                    }
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geojs",
                "api_name": "get_country",
                "api_description": "Returns the country information about an IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "Specific IP address to lookup."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "country": "string",
                    "country_3": "string",
                    "ip": "string",
                    "name": "string"
                }
            }
        ],
        "query": "Could you provide all available information about the data sources country.is uses? Also, please find the country information for IP address 8.8.8.8.",
        "relevant APIs": [],
        "query_id": 226
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "opentopodata",
                "api_name": "get_elevation",
                "api_description": "Fetches elevation data for specific locations using a specified dataset.",
                "required_parameters": [
                    {
                        "name": "dataset_name",
                        "type": "STRING",
                        "description": "The name of the dataset."
                    },
                    {
                        "name": "locations",
                        "type": "STRING",
                        "description": "Coordinates in latitude,longitude format or Google polyline."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "samples",
                        "type": "INTEGER",
                        "description": "Query elevation for sample equally-spaced points."
                    },
                    {
                        "name": "interpolation",
                        "type": "STRING",
                        "description": "Interpolation method (nearest, bilinear, cubic)."
                    },
                    {
                        "name": "nodata_value",
                        "type": "STRING",
                        "description": "Value to return for NODATA."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format (json or geojson)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "elevation": "FLOAT",
                            "location": {
                                "lat": "FLOAT",
                                "lng": "FLOAT"
                            },
                            "dataset": "STRING"
                        }
                    ],
                    "status": "STRING"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "query_cep",
                "api_description": "Retrieve information for a given ZIP code in Brazil.",
                "required_parameters": [
                    {
                        "name": "cep",
                        "type": "STRING",
                        "description": "ZIP code in the format of 8 digits."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cep": "string",
                    "logradouro": "string",
                    "complemento": "string",
                    "bairro": "string",
                    "localidade": "string",
                    "uf": "string",
                    "ibge": "string",
                    "gia": "string",
                    "ddd": "string",
                    "siafi": "string"
                }
            }
        ],
        "query": "Can you provide the elevation for a specific location in Brazil using the 'test-dataset'? Also, I need information about the ZIP code '01001000' in Brazil.",
        "relevant APIs": [],
        "query_id": 227
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "str",
                    "state": "str",
                    "city": "str"
                }
            }
        ],
        "query": "Can you tell me the city and greet me in the local way if I give you the zip code 10001?",
        "relevant APIs": [
            {
                "api_name": "get_location_by_zip",
                "tool_name": "ziptastic"
            },
            {
                "api_name": "say_hello",
                "tool_name": "hellosalut"
            }
        ],
        "query_id": 228
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "postcodes",
                "api_name": "lookup_postcode",
                "api_description": "Lookup a single postcode.",
                "required_parameters": [
                    {
                        "name": "postcode",
                        "type": "STRING",
                        "description": "The postcode to lookup."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": "integer",
                    "result": "object"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "query_cep",
                "api_description": "Retrieve information for a given ZIP code in Brazil.",
                "required_parameters": [
                    {
                        "name": "cep",
                        "type": "STRING",
                        "description": "ZIP code in the format of 8 digits."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cep": "string",
                    "logradouro": "string",
                    "complemento": "string",
                    "bairro": "string",
                    "localidade": "string",
                    "uf": "string",
                    "ibge": "string",
                    "gia": "string",
                    "ddd": "string",
                    "siafi": "string"
                }
            }
        ],
        "query": "Can you provide geographical data for the postcode SW1A1AA in the UK and also the details for the Brazilian ZIP code 01001000?",
        "relevant APIs": [],
        "query_id": 229
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "zippopotamus",
                "api_name": "get_zip_info_by_city",
                "api_description": "Fetch postal codes associated with a given city and state in a specified country.",
                "required_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "Country code such as 'US' for United States."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State code such as 'CA' for California."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "The name of the city, such as 'Belmont'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "post code": "string",
                    "country": "string",
                    "country abbreviation": "string",
                    "places": [
                        {
                            "place name": "string",
                            "longitude": "string",
                            "state": "string",
                            "state abbreviation": "string",
                            "latitude": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Find me all postal codes for the city of Belmont in California, United States, and greet me using my IP address.",
        "relevant APIs": [
            {
                "api_name": "get_zip_info_by_city",
                "tool_name": "zippopotamus"
            },
            {
                "api_name": "say_hello",
                "tool_name": "hellosalut"
            }
        ],
        "query_id": 230
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "hellosalut",
                "api_name": "say_hello",
                "api_description": "Get a greeting based on language code, IP address, or country code. Supports automatic detection.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code.",
                        "default": ""
                    },
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address.",
                        "default": ""
                    },
                    {
                        "name": "cc",
                        "type": "STRING",
                        "description": "Country code.",
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Automatic detection mode.",
                        "default": "auto"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "hello": "string",
                    "cc": "string",
                    "ip": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "search_address",
                "api_description": "Search for a ZIP code based on the address details.",
                "required_parameters": [
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "Two-letter state code in Brazil."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "Name of the city. Must have at least 3 characters."
                    },
                    {
                        "name": "street",
                        "type": "STRING",
                        "description": "Name of the street. Must have at least 3 characters."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "cep": "string",
                        "logradouro": "string",
                        "complemento": "string",
                        "bairro": "string",
                        "localidade": "string",
                        "uf": "string",
                        "ibge": "string",
                        "gia": "string",
                        "ddd": "string",
                        "siafi": "string"
                    }
                ]
            }
        ],
        "query": "Using the automatic detection, greet the user and search for the ZIP code of the address with state RS, city Porto Alegre, and street Domingos.",
        "relevant APIs": [
            "say_hello",
            "search_address"
        ],
        "query_id": 231
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "viacep",
                "api_name": "query_cep",
                "api_description": "Retrieve information for a given ZIP code in Brazil.",
                "required_parameters": [
                    {
                        "name": "cep",
                        "type": "STRING",
                        "description": "ZIP code in the format of 8 digits."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "return_format",
                        "type": "STRING",
                        "description": "Format of the return data (json or xml).",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cep": "string",
                    "logradouro": "string",
                    "complemento": "string",
                    "bairro": "string",
                    "localidade": "string",
                    "uf": "string",
                    "ibge": "string",
                    "gia": "string",
                    "ddd": "string",
                    "siafi": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "ziptastic",
                "api_name": "get_location_by_zip",
                "api_description": "Fetches the country, state, and city for the given ZIP code.",
                "required_parameters": [
                    {
                        "name": "zipcode",
                        "type": "STRING",
                        "description": "The ZIP code to query."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "country": "string",
                    "state": "string",
                    "city": "string"
                }
            }
        ],
        "query": "Can you provide details about a location by using the ZIP code 01001000 in Brazil using ViaCEP and also tell me the location details for the ZIP code 90210 in the USA using Ziptastic?",
        "relevant APIs": [],
        "query_id": 232
    },
    {
        "api_list": [
            {
                "category_name": "Geo",
                "tool_name": "countryis",
                "api_name": "get_country_by_own_ip",
                "api_description": "Retrieve the country for the requester's own IP address.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string"
                }
            },
            {
                "category_name": "Geo",
                "tool_name": "geojs",
                "api_name": "get_geo_info",
                "api_description": "Contains all available geographical information about an IP.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "Specific IP address to lookup."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country": "string",
                    "country_code": "string",
                    "latitude": "string",
                    "longitude": "string",
                    "organization": "string"
                }
            }
        ],
        "query": "What country am I currently in based on the IP '8.8.8.8'? Furthermore, what other geographical information can you provide for my IP?",
        "relevant APIs": [],
        "query_id": 233
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "cards": [
                        {
                            "code": "str",
                            "image": "str",
                            "value": "str",
                            "suit": "str"
                        }
                    ],
                    "deck_id": "str",
                    "remaining": "int"
                },
                "category_name": "Games"
            },
            {
                "tool_name": "hyrulecompendium",
                "api_name": "get_all_entries",
                "api_description": "Retrieves all compendium entries.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "category_name": [
                            {
                                "id": "int",
                                "name": "str",
                                "category": "str",
                                "description": "str",
                                "image": "str"
                            }
                        ]
                    }
                },
                "category_name": "Games"
            }
        ],
        "query": "Please draw 5 cards from a new deck and also retrieve all compendium entries from Hyrule.",
        "relevant APIs": [],
        "query_id": 234
    },
    {
        "api_list": [
            {
                "tool_name": "amiibo",
                "api_name": "get_character",
                "api_description": "Returns character information based on key or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "Key of the character."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the character."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "key": "0x1996",
                            "name": "Mewtwo"
                        }
                    ]
                },
                "category_name": "Games"
            },
            {
                "tool_name": "iseven",
                "api_name": "iseven",
                "api_description": "Returns whether a given number is even.",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number you want to check."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "iseven": "bool",
                    "ad": "str"
                },
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Please fetch information on the character 'Mario' and check if the total number of characters returned is an even number.",
        "relevant APIs": [],
        "query_id": 235
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_item_data",
                "api_description": "Retrieve item data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_equipment",
                "api_description": "Get an equipment item by index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the equipment to get."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "category_range": "string",
                    "cost": "object",
                    "weight": "number"
                },
                "optional_parameters": []
            }
        ],
        "query": "I need to compare the latest item data from League of Legends Data Dragon with the 'longsword' equipment details from Dungeons & Dragons 5th Edition. Can you fetch these for me?",
        "relevant APIs": [],
        "query_id": 236
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "jokeapi",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve all available joke categories.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "System message language",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "boolean",
                    "categories": "array"
                }
            }
        ],
        "query": "What categories of jokes are available on both Chuck Norris Jokes API and JokeAPI?",
        "query_id": 237
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_types",
                "api_description": "List different Pok\u00e9mon types.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "What categories of Chuck Norris jokes are available? Also, what are the different types of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 238
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "cards": [
                        {
                            "code": "string",
                            "image": "string",
                            "images": {
                                "svg": "string",
                                "png": "string"
                            },
                            "value": "string",
                            "suit": "string"
                        }
                    ],
                    "deck_id": "string",
                    "remaining": "integer"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "pokemontcg",
                "api_name": "get_cards",
                "api_description": "Retrieve all cards, or filter them by name, supertype, types, and hp.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name of the card to filter by.",
                        "default": "None"
                    },
                    {
                        "name": "supertype",
                        "type": "STRING",
                        "description": "The supertype of the card, such as Pok\u00e9mon, Energy, or Trainer.",
                        "default": "None"
                    },
                    {
                        "name": "types",
                        "type": "LIST",
                        "description": "The energy types for a card, such as Fire, Water, Grass, etc.",
                        "default": "None"
                    },
                    {
                        "name": "hp",
                        "type": "STRING",
                        "description": "The hit points of the card to filter by.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "name": "string",
                            "supertype": "string",
                            "hp": "string",
                            "types": [
                                "string"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Please draw two cards from a new deck and find information about any Pok\u00e9mon card named Charizard.",
        "relevant APIs": [],
        "query_id": 239
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "get_hot_items",
                "api_description": "Retrieve the list of most active items on BGG.",
                "required_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of hot items (e.g. boardgame)."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "rank": "int",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "sorted_games",
                "api_description": "Sort games by release date, alphabetical or relevance.",
                "required_parameters": [
                    {
                        "name": "sort-by",
                        "type": "STRING",
                        "description": "Sort criteria."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "Can you tell me what the hottest board games are right now on BGG? Additionally, what are the most popular free-to-play games sorted by relevance?",
        "relevant APIs": [],
        "query_id": 240
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "deck_id": "string",
                    "shuffled": "boolean",
                    "remaining": "integer"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "pokemontcg",
                "api_name": "get_sets",
                "api_description": "Retrieve a list of all available sets in the Pok\u00e9mon TCG.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "name": "string",
                            "series": "string",
                            "total": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Can you shuffle a new deck of cards and also tell me how many different sets are available in the Pok\u00e9mon Trading Card Game?",
        "relevant APIs": [],
        "query_id": 241
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": true,
                    "deck_id": "string",
                    "remaining": 52,
                    "shuffled": true
                }
            },
            {
                "category_name": "Games",
                "tool_name": "jokeapi",
                "api_name": "get_joke",
                "api_description": "Fetch jokes based on category, filters and other parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Joke category",
                        "default": "Any"
                    },
                    {
                        "name": "blacklist_flags",
                        "type": "LIST",
                        "description": "Flags to filter out",
                        "default": "None"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code for joke",
                        "default": "en"
                    },
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "Type of joke (single/twopart)",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "String to search within jokes",
                        "default": "None"
                    },
                    {
                        "name": "id_range",
                        "type": "STRING",
                        "description": "ID range for jokes",
                        "default": "None"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER",
                        "description": "Number of jokes to fetch",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "safe_mode",
                        "type": "BOOLEAN",
                        "description": "Fetch only safe jokes",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": false,
                    "jokes": [
                        {
                            "category": "string",
                            "type": "string",
                            "joke": "string"
                        }
                    ],
                    "amount": 1
                }
            }
        ],
        "query": "Can you shuffle a new deck of cards and then tell me a joke?",
        "relevant APIs": [],
        "query_id": 242
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "new_deck",
                "api_description": "Open a brand new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jokers_enabled",
                        "type": "BOOLEAN",
                        "description": "Include jokers in the deck.",
                        "default": false
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_ten_random_jokes",
                "api_description": "Grab ten random jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Open a new deck with jokers and fetch ten random jokes for a poker night with friends.",
        "relevant APIs": [],
        "query_id": 243
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": true,
                    "cards": [
                        {
                            "code": "string",
                            "image": "string",
                            "value": "string",
                            "suit": "string"
                        }
                    ],
                    "deck_id": "string",
                    "remaining": 50
                }
            },
            {
                "category_name": "Games",
                "tool_name": "jokeapi",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve all available joke categories.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "System message language",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": false,
                    "categories": [
                        "string"
                    ]
                }
            }
        ],
        "query": "Draw a card from a new deck and tell me about the different categories of jokes available.",
        "relevant APIs": [],
        "query_id": 244
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_joke_by_id",
                "api_description": "Grab joke by ID.",
                "required_parameters": [
                    {
                        "name": "joke_id",
                        "type": "INTEGER",
                        "description": "ID of the joke to fetch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Shuffle a new deck of cards and tell me the joke with ID 5.",
        "relevant APIs": [],
        "query_id": 245
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "opentriviadb",
                "api_name": "get_random_joke",
                "api_description": "Fetches a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Games"
            }
        ],
        "query": "Can you shuffle a deck of cards and tell me a random joke to start the game?",
        "query_id": 246
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "new_deck",
                "api_description": "Open a brand new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jokers_enabled",
                        "type": "BOOLEAN",
                        "description": "Include jokers in the deck.",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "deck_id": "string",
                    "remaining": "integer",
                    "shuffled": "boolean"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "pokemontcg",
                "api_name": "get_card_by_id",
                "api_description": "Retrieve a specific card by its unique ID.",
                "required_parameters": [
                    {
                        "name": "card_id",
                        "type": "STRING",
                        "description": "The unique identifier for the specific card."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "id": "string",
                        "name": "string",
                        "supertype": "string"
                    }
                }
            }
        ],
        "query": "Generate a new deck of cards that includes jokers and give me details about the Pok\u00e9mon card with ID 'xyz-123'.",
        "relevant APIs": [],
        "query_id": 247
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "new_deck",
                "api_description": "Open a brand new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jokers_enabled",
                        "type": "BOOLEAN",
                        "description": "Include jokers in the deck.",
                        "default": false
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "iseven",
                "api_name": "iseven",
                "api_description": "Returns whether a given number is even.",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number you want to check."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you create a new deck of cards with jokers included and tell me if the remaining card count is an even number?",
        "relevant APIs": [],
        "query_id": 248
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_random_joke",
                "api_description": "Grab a random joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Draw a card from a new deck and tell me a random joke to cheer me up!",
        "relevant APIs": [],
        "query_id": 249
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "cards": [
                        {
                            "code": "str",
                            "image": "str",
                            "value": "str",
                            "suit": "str"
                        }
                    ],
                    "deck_id": "str",
                    "remaining": "int"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "pokeapi",
                "api_name": "get_berry",
                "api_description": "Get information about a specific berry by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "growth_time": "int",
                    "max_harvest": "int",
                    "natural_gift_power": "int",
                    "size": "int",
                    "smoothness": "int",
                    "soil_dryness": "int",
                    "firmness": {
                        "name": "str",
                        "url": "str"
                    },
                    "flavors": [
                        {
                            "flavor": {
                                "name": "str",
                                "url": "str"
                            },
                            "potency": "int"
                        }
                    ]
                }
            }
        ],
        "query": "I want to draw 5 cards from a new deck and get some details about the Chesto berry from Pok\u00e9mon.",
        "relevant APIs": [],
        "query_id": 250
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "deck_id": "str"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "runescape",
                "api_name": "grand_exchange_info",
                "api_description": "Returns the runedate of when the Grand Exchange Database was last updated.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "lastConfigUpdateRuneday": "int"
                }
            }
        ],
        "query": "Can you shuffle a new deck of cards and tell me when the RuneScape Grand Exchange was last updated?",
        "relevant APIs": [],
        "query_id": 251
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_ability",
                "api_description": "Get details about a specific Pok\u00e9mon ability by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "What categories are available for Chuck Norris jokes? Also, can you provide me with information on the Pok\u00e9mon ability 'Overgrow'?",
        "relevant APIs": [],
        "query_id": 252
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "name": "str",
                            "type": "str",
                            "release": {
                                "na": "date"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "barter",
                "api_name": "browse_bundles",
                "api_description": "Browse all available bundles.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bundles": [
                        {
                            "bundle_id": "int",
                            "name": "str",
                            "date": "date"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find amiibos related to the character Mario and also browse available game bundles?",
        "relevant APIs": [],
        "query_id": 253
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "scryfall",
                "api_name": "card_named_exact",
                "api_description": "Retrieve card details based on exact name.",
                "required_parameters": [
                    {
                        "name": "exact",
                        "type": "STRING",
                        "description": "The exact card name to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "A set code to limit the search to one set.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            }
        ],
        "query": "Can you draw 5 cards from a new deck and provide detailed information about the Magic card named 'Black Lotus'?",
        "relevant APIs": [],
        "query_id": 254
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "cards": [
                        {
                            "code": "str",
                            "value": "str",
                            "suit": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_cards_by_name",
                "api_description": "Retrieve cards by name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "cards": [
                        {
                            "name": "str",
                            "set": "str",
                            "type": "str",
                            "rarity": "str",
                            "text": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you draw 5 cards from a standard deck and also find Magic: The Gathering cards named 'Archangel Avacyn'?",
        "relevant APIs": [],
        "query_id": 255
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "new_deck",
                "api_description": "Open a brand new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "jokers_enabled",
                        "type": "BOOLEAN",
                        "description": "Include jokers in the deck.",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "deck_id": "string",
                    "remaining": "int"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "icanhazdadjoke",
                "api_name": "search_jokes",
                "api_description": "Search for dad jokes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Search term to use.",
                        "default": "null"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to fetch.",
                        "default": "1"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results to return per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "current_page": "int",
                    "limit": "int",
                    "next_page": "int",
                    "previous_page": "int",
                    "results": [
                        {
                            "id": "string",
                            "joke": "string"
                        }
                    ],
                    "search_term": "string",
                    "status": "int",
                    "total_jokes": "int",
                    "total_pages": "int"
                }
            }
        ],
        "query": "Create a new deck of cards including jokers and then search for dad jokes related to 'cards'.",
        "relevant APIs": [],
        "query_id": 256
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "deck_id": "str"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_all_sets",
                "api_description": "Retrieve all MTG sets with optional filtering by name and block.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    },
                    {
                        "name": "block",
                        "type": "STRING"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "sets": [
                        {
                            "name": "str",
                            "code": "str",
                            "releaseDate": "str",
                            "block": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want to shuffle a new deck of cards for a game night. Additionally, can you provide me with information on all available Magic: The Gathering sets?",
        "relevant APIs": [],
        "query_id": 257
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "deck_id": "str"
                },
                "category_name": "Games"
            },
            {
                "tool_name": "tcgdex",
                "api_name": "get_card",
                "api_description": "Retrieve information about a single card by its ID.",
                "required_parameters": [
                    {
                        "name": "card_id",
                        "type": "STRING",
                        "description": "The ID of the card."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "id": "str",
                    "image": "str"
                },
                "category_name": "Games"
            }
        ],
        "query": "Could you shuffle two decks of cards and tell me more about a specific Pok\u00e9mon card, for example, 'swsh3-136'?",
        "relevant APIs": [],
        "query_id": 258
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "cards": [
                        {
                            "image": "string",
                            "value": "string",
                            "suit": "string",
                            "code": "string"
                        }
                    ],
                    "deck_id": "string",
                    "remaining": "int"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "icanhazdadjoke",
                "api_name": "fetch_joke_by_id",
                "api_description": "Fetch a specific dad joke by its ID.",
                "required_parameters": [
                    {
                        "name": "joke_id",
                        "type": "STRING",
                        "description": "The ID of the joke to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "accept",
                        "type": "STRING",
                        "description": "The format to accept the joke in.",
                        "default": "application/json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "joke": "string",
                    "status": "int"
                }
            }
        ],
        "query": "Please draw two cards from a new deck and then fetch me a specific dad joke using its ID.",
        "relevant APIs": [],
        "query_id": 259
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_latest_version",
                "api_description": "Retrieve the latest version of Data Dragon.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "list",
                    "items": "str"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "I want to know the latest version of League of Legends Data Dragon, and while you're at it, can you generate a humorous insult for me in English?",
        "relevant APIs": [],
        "query_id": 260
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_rarities",
                "api_description": "List different card rarities.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "Find me Chuck Norris jokes related to 'warrior'. Additionally, could you list the different rarities of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 261
    },
    {
        "api_list": [
            {
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on filters such as name, type, game series, etc.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "Legend Of Zelda",
                            "character": "Zelda",
                            "gameSeries": "The Legend of Zelda",
                            "head": "01010000",
                            "image": "URL to the image",
                            "name": "Amiibo name",
                            "release": {
                                "au": "Date",
                                "eu": "Date",
                                "jp": "Date",
                                "na": "Date"
                            },
                            "tail": "03560902",
                            "type": "Figure"
                        }
                    ]
                },
                "category_name": "Games"
            },
            {
                "tool_name": "iseven",
                "api_name": "iseven",
                "api_description": "Returns whether a given number is even.",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number you want to check."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "iseven": "bool",
                    "ad": "str"
                },
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you list all amiibos from the Super Mario game series, and tell me if the number of these amiibos is an even number?",
        "relevant APIs": [],
        "query_id": 262
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "cards": [
                        {
                            "code": "string",
                            "suit": "string",
                            "value": "string",
                            "images": {
                                "svg": "string",
                                "png": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "imgflip",
                "api_name": "get_memes",
                "api_description": "Gets an array of popular memes that may be captioned with this API.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "data": {
                        "memes": [
                            {
                                "id": "string",
                                "name": "string",
                                "url": "string",
                                "width": "integer",
                                "height": "integer",
                                "box_count": "integer"
                            }
                        ]
                    }
                }
            }
        ],
        "query": "Can you show me a couple of cards from a deck, and find some popular meme templates that I can use to caption?",
        "relevant APIs": [],
        "query_id": 263
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with specified quantity, either 'random' or 'ten'.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "I want to find jokes that are about Chuck Norris and also some jokes of a specific type from the Official Joke API. Can you provide some?",
        "relevant APIs": [],
        "query_id": 264
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a random Chuck Norris joke and give me details about Pok\u00e9mon Pikachu?",
        "relevant APIs": [],
        "query_id": 265
    },
    {
        "api_list": [
            {
                "tool_name": "cheapshark",
                "api_name": "get_alerts",
                "api_description": "Retrieve all existing alerts.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "The key parameter from the manage link received via email.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            },
            {
                "tool_name": "scryfall",
                "api_name": "card_random",
                "api_description": "Retrieve a random card.",
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "A fulltext search query to filter random cards.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "I'd like to get a list of all my game price alerts from CheapShark. In addition, can you show me a random Magic card?",
        "relevant APIs": [],
        "query_id": 266
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "opentriviadb",
                "api_name": "get_joke_types",
                "api_description": "Retrieves the types of jokes available",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Games"
            }
        ],
        "query": "Draw two cards for me and show me the types of jokes I can pick from.",
        "query_id": 267
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "icon_url": "str",
                    "id": "str",
                    "url": "str",
                    "value": "str"
                },
                "category_name": "Games"
            },
            {
                "tool_name": "magicthegathering",
                "api_name": "get_all_cards",
                "api_description": "Retrieve all MTG cards with pagination and optional filtering.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "default": "1"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "default": "100"
                    },
                    {
                        "name": "name",
                        "type": "STRING"
                    },
                    {
                        "name": "set",
                        "type": "STRING"
                    },
                    {
                        "name": "colors",
                        "type": "STRING"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "cards": [
                        {
                            "name": "str",
                            "manaCost": "str",
                            "type": "str",
                            "text": "str",
                            "set": "str"
                        }
                    ]
                },
                "category_name": "Games"
            }
        ],
        "query": "Please tell me a random funny Chuck Norris joke. Also, could you list some Magic: The Gathering cards for me?",
        "relevant APIs": [],
        "query_id": 268
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "amiibo",
                "api_name": "get_amiibos",
                "api_description": "Returns a list of amiibos or specific amiibo based on the filters provided.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name of the amiibo."
                    },
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "ID of the amiibo."
                    },
                    {
                        "name": "head",
                        "type": "STRING",
                        "description": "Head hexadecimal of the amiibo."
                    },
                    {
                        "name": "tail",
                        "type": "STRING",
                        "description": "Tail hexadecimal of the amiibo."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of amiibo, e.g., figure, card."
                    },
                    {
                        "name": "game_series",
                        "type": "STRING",
                        "description": "Game series of the amiibo."
                    },
                    {
                        "name": "amiibo_series",
                        "type": "STRING",
                        "description": "Amiibo series of the amiibo."
                    },
                    {
                        "name": "character",
                        "type": "STRING",
                        "description": "Character of the amiibo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "amiibo": [
                        {
                            "amiiboSeries": "str",
                            "character": "str",
                            "gameSeries": "str",
                            "head": "str",
                            "image": "str",
                            "name": "str",
                            "release": {
                                "au": "str",
                                "eu": "str",
                                "jp": "str",
                                "na": "str"
                            },
                            "tail": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "gamerpower",
                "api_name": "get_all_giveaways",
                "api_description": "Fetch all ongoing giveaways.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "List of giveaway objects"
            }
        ],
        "query": "I'm a fan of the Legend of Zelda series and want to know if there are any amiibos related to this game. Also, are there any ongoing giveaways for free games or in-game loot that I could participate in?",
        "relevant APIs": [],
        "query_id": 269
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "Generate an insult from the API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "insult": "str",
                    "number": "str",
                    "language": "str",
                    "created": "str"
                }
            }
        ],
        "query": "Can you provide the champion data of League of Legends for the latest version in English? And also, give me a cheeky insult in German.",
        "relevant APIs": [],
        "query_id": 270
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_all_resources",
                "api_description": "Get list of all available resources for a specified DnD 5E endpoint.",
                "required_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint to query for available resources."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_random_joke",
                "api_description": "Fetches a random joke.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "string",
                    "setup": "string",
                    "punchline": "string"
                }
            }
        ],
        "query": "Can you provide a list of all available DnD 5E classes, and also tell me a random joke to lighten the mood?",
        "relevant APIs": [],
        "query_id": 271
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "cards": [
                        {
                            "code": "str",
                            "image": "str",
                            "value": "str",
                            "suit": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "runescape",
                "api_name": "grand_exchange_items",
                "api_description": "Returns items given the category, starting letter, and page number.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "INTEGER",
                        "description": "The category identification number."
                    },
                    {
                        "name": "alpha",
                        "type": "STRING",
                        "description": "The starting letter for items."
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page number starting from 1.",
                        "default": 1
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "id": "int",
                            "name": "str",
                            "icon": "str",
                            "icon_large": "str",
                            "type": "str",
                            "typeIcon": "str",
                            "description": "str",
                            "current": {
                                "trend": "str",
                                "price": "str|int"
                            },
                            "today": {
                                "trend": "str",
                                "price": "str|int"
                            },
                            "members": "bool"
                        }
                    ]
                }
            }
        ],
        "query": "Draw 5 cards from the deck and find all items in the RuneScape Grand Exchange starting with the letter 'A' from category 1.",
        "relevant APIs": [],
        "query_id": 272
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "partial_deck",
                "api_description": "Create a partial deck with specific cards.",
                "required_parameters": [
                    {
                        "name": "cards",
                        "type": "STRING",
                        "description": "Comma separated card codes for the partial deck."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "opentriviadb",
                "api_name": "get_ten_random_jokes",
                "api_description": "Fetches ten random jokes",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Games"
            }
        ],
        "query": "Create a deck with the Ace of Spades, Two of Hearts, and King of Diamonds and entertain me with ten jokes.",
        "query_id": 273
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "string",
                            "id": "string",
                            "url": "string",
                            "value": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "jokeapi",
                "api_name": "get_joke",
                "api_description": "Fetch jokes based on category, filters and other parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Joke category",
                        "default": "Any"
                    },
                    {
                        "name": "blacklist_flags",
                        "type": "LIST",
                        "description": "Flags to filter out",
                        "default": "None"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code for joke",
                        "default": "en"
                    },
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "Type of joke (single/twopart)",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "String to search within jokes",
                        "default": "None"
                    },
                    {
                        "name": "id_range",
                        "type": "STRING",
                        "description": "ID range for jokes",
                        "default": "None"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER",
                        "description": "Number of jokes to fetch",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "safe_mode",
                        "type": "BOOLEAN",
                        "description": "Fetch only safe jokes",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "boolean",
                    "jokes": "array",
                    "amount": "integer"
                }
            }
        ],
        "query": "Can you search for any jokes about cats using both the Chuck Norris Jokes API and the JokeAPI?",
        "query_id": 274
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_platform",
                "api_description": "Retrieve a list of all available games from a specific platform.",
                "required_parameters": [
                    {
                        "name": "platform",
                        "type": "STRING",
                        "description": "The platform name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_region",
                "api_description": "Retrieves information on a single region given its name.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The name of the region."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "I want to find all free-to-play games available for PC and get information about the Eldin region in the Hyrule Compendium.",
        "relevant APIs": [],
        "query_id": 275
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_cards_by_name",
                "api_description": "Retrieve cards by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "officaljoke",
                "api_name": "grab_random_joke",
                "api_description": "Grab a random joke",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you tell me a joke after finding the details of the Magic: The Gathering card named 'Black Lotus'?",
        "relevant APIs": [
            "get_cards_by_name",
            "grab_random_joke"
        ],
        "query_id": 276
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "search_items",
                "api_description": "Search for items by name from the BGG database.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of items to return."
                    },
                    {
                        "name": "exact",
                        "type": "INTEGER",
                        "description": "Exact match for search."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "type": "str",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "I'm looking for a board game like 'Catan' and also want to explore some free-to-play shooter games. Can you provide me with information on both?",
        "relevant APIs": [],
        "query_id": 277
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "deck_id": "str",
                    "remaining": "int",
                    "shuffled": "bool"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    "id or name"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "abilities": [
                        {
                            "ability": {
                                "name": "str",
                                "url": "str"
                            },
                            "is_hidden": "bool",
                            "slot": "int"
                        }
                    ],
                    "base_experience": "int",
                    "height": "int",
                    "weight": "int",
                    "types": [
                        {
                            "slot": "int",
                            "type": {
                                "name": "str",
                                "url": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you shuffle two decks of cards and also provide details about the Pok\u00e9mon Clefairy?",
        "relevant APIs": [],
        "query_id": 278
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "draw_cards",
                "api_description": "Draw cards from a deck.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_id",
                        "type": "STRING",
                        "description": "The deck id to draw cards from.",
                        "default": "new"
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of cards to draw.",
                        "default": 2
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Games",
                "tool_name": "iseven",
                "api_name": "iseven",
                "api_description": "Returns whether a given number is even.",
                "required_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number you want to check."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Draw 5 cards from a shuffled deck. Then, tell me if the total remaining cards in the deck are even.",
        "relevant APIs": [],
        "query_id": 279
    },
    {
        "api_list": [
            {
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "scryfall",
                "api_name": "card_random",
                "api_description": "Retrieve a random card.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "A fulltext search query to filter random cards.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            }
        ],
        "query": "I'd like to shuffle a deck of cards. Also, can you get a random Magic: The Gathering card for me?",
        "relevant APIs": [],
        "query_id": 280
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "boolean",
                    "deck_id": "string",
                    "remaining": "integer",
                    "shuffled": "boolean"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "imgflip",
                "api_name": "caption_image",
                "api_description": "Add a caption to an Imgflip meme template.",
                "required_parameters": [
                    {
                        "name": "template_id",
                        "type": "STRING",
                        "description": "The ID of the template to use."
                    },
                    {
                        "name": "username",
                        "type": "STRING",
                        "description": "Imgflip account username."
                    },
                    {
                        "name": "password",
                        "type": "STRING",
                        "description": "Imgflip account password."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "text0",
                        "type": "STRING",
                        "description": "Top text for the meme."
                    },
                    {
                        "name": "text1",
                        "type": "STRING",
                        "description": "Bottom text for the meme."
                    },
                    {
                        "name": "font",
                        "type": "STRING",
                        "description": "Font family to use for the text. Defaults to 'impact'."
                    },
                    {
                        "name": "max_font_size",
                        "type": "INTEGER",
                        "description": "Maximum font size in pixels. Defaults to 50."
                    },
                    {
                        "name": "boxes",
                        "type": "LIST",
                        "description": "Configurations for creating memes with more than two text boxes."
                    }
                ],
                "method": "POST",
                "template_response": {
                    "success": "boolean",
                    "data": {
                        "url": "string",
                        "page_url": "string"
                    }
                }
            }
        ],
        "query": "I want to start a fresh game with a shuffled deck of cards, and create a meme with top text 'Game On' and bottom text 'Let the Fun Begin!' using a popular template.",
        "relevant APIs": [],
        "query_id": 281
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_ability_score",
                "api_description": "Get an ability score by its index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the ability score to get."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "desc": "string[]",
                    "full_name": "string",
                    "skills": "object[]"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with a specified quantity.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "Could you tell me what the 'Strength' ability score means in DnD, and also share a random programming joke?",
        "relevant APIs": [],
        "query_id": 282
    },
    {
        "api_list": [
            {
                "tool_name": "boardgamesgeek",
                "api_name": "get_user_info",
                "api_description": "Retrieve information about a user by username from BGG.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The username."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "buddies",
                        "type": "INTEGER",
                        "description": "Include buddies information."
                    },
                    {
                        "name": "guilds",
                        "type": "INTEGER",
                        "description": "Include guilds information."
                    },
                    {
                        "name": "hot",
                        "type": "INTEGER",
                        "description": "Include the user's hot 10 list."
                    },
                    {
                        "name": "top",
                        "type": "INTEGER",
                        "description": "Include the user's top 10 list."
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain for hot and top lists."
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            },
            {
                "tool_name": "evilinsultgenerator",
                "api_name": "generate_insult",
                "api_description": "This endpoint serves to generate insults from the API.",
                "optional_parameters": [
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "The language of the insult you want.",
                        "default": "en"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "The response type. Supports 'text', 'XML', and 'JSON'.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "required_parameters": []
            }
        ],
        "query": "Can you provide some details about the user 'eekspider' on BoardGameGeek and also generate a hilarious insult?",
        "query_id": 283
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "deckofcards",
                "api_name": "shuffle_deck",
                "api_description": "Shuffle a new deck of cards.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "deck_count",
                        "type": "INTEGER",
                        "description": "Number of decks to use.",
                        "default": 1
                    }
                ],
                "method": "GET",
                "template_response": {
                    "success": "bool",
                    "deck_id": "string",
                    "remaining": "int",
                    "shuffled": "bool"
                }
            },
            {
                "category_name": "Games",
                "tool_name": "icanhazdadjoke",
                "api_name": "fetch_random_joke",
                "api_description": "Fetch a random dad joke in the specified format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "accept",
                        "type": "STRING",
                        "description": "The format to accept the joke in.",
                        "default": "application/json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "joke": "string",
                    "status": "int"
                }
            }
        ],
        "query": "Can you shuffle a fresh deck of cards for me and then tell me a funny dad joke to lighten the mood?",
        "relevant APIs": [],
        "query_id": 284
    },
    {
        "api_list": [
            {
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "category_name": "Games",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            },
            {
                "tool_name": "jokeapi",
                "api_name": "get_joke",
                "category_name": "Games",
                "api_description": "Fetch jokes based on category, filters, and other parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Joke category",
                        "default": "Any"
                    },
                    {
                        "name": "blacklist_flags",
                        "type": "LIST",
                        "description": "Flags to filter out",
                        "default": "None"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language code for joke",
                        "default": "en"
                    },
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "Type of joke (single/twopart)",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "String to search within jokes",
                        "default": "None"
                    },
                    {
                        "name": "id_range",
                        "type": "STRING",
                        "description": "ID range for jokes",
                        "default": "None"
                    },
                    {
                        "name": "amount",
                        "type": "INTEGER",
                        "description": "Number of jokes to fetch",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "safe_mode",
                        "type": "BOOLEAN",
                        "description": "Fetch only safe jokes",
                        "default": false
                    }
                ],
                "method": "GET",
                "template_response": {
                    "error": "boolean",
                    "jokes": "array",
                    "amount": "integer"
                }
            }
        ],
        "query": "I would like to know about the latest League of Legends champions in English. Also, can you get me some funny programming jokes?",
        "relevant APIs": [],
        "query_id": 285
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "properties": {
                        "id": "int",
                        "title": "str",
                        "thumbnail": "str",
                        "short_description": "str",
                        "game_url": "str"
                    }
                }
            },
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_category_entries",
                "api_description": "Retrieves all entries in a given category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category to retrieve entries from."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "Can you list some free-to-play shooter games and also find entries related to monsters in the Hyrule Compendium?",
        "relevant APIs": [],
        "query_id": 286
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_alerts",
                "api_description": "List active and upcoming system alerts.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_activity",
                        "type": "STRING",
                        "description": "Filter to alerts for only those activities matching."
                    },
                    {
                        "name": "filter_route_type",
                        "type": "STRING",
                        "description": "Filter by route type."
                    },
                    {
                        "name": "filter_direction_id",
                        "type": "STRING",
                        "description": "Filter by direction ID."
                    },
                    {
                        "name": "filter_route",
                        "type": "STRING",
                        "description": "Filter by route id."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "filter_trip",
                        "type": "STRING",
                        "description": "Filter by trip."
                    },
                    {
                        "name": "filter_facility",
                        "type": "STRING",
                        "description": "Filter by facility."
                    },
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by alert ID."
                    },
                    {
                        "name": "filter_banner",
                        "type": "STRING",
                        "description": "Filter by banner."
                    },
                    {
                        "name": "filter_datetime",
                        "type": "STRING",
                        "description": "Filter by datetime."
                    },
                    {
                        "name": "filter_lifecycle",
                        "type": "STRING",
                        "description": "Filter by lifecycle."
                    },
                    {
                        "name": "filter_severity",
                        "type": "STRING",
                        "description": "Filter by severity."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_alert",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you find some major transport stations in Berlin and check if there are any alerts on Route 1 using the MBTA data?",
        "relevant APIs": [],
        "query_id": 287
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "locations",
                "api_description": "Find stops/stations, POIs and addresses matching a query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query for locations.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fuzzy",
                        "type": "BOOLEAN",
                        "description": "Find more than exact matches?",
                        "default": "true"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "How many stations to show?",
                        "default": "10"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "What are the public transport options available at Alexanderplatz right now, and what trains are departing from Gent-Sint-Pieters station currently?",
        "query_id": 288
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "radar",
                "api_description": "Find all vehicles currently in an area and their movements.",
                "required_parameters": [
                    {
                        "name": "north",
                        "type": "FLOAT",
                        "description": "Northern latitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "west",
                        "type": "FLOAT",
                        "description": "Western longitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "south",
                        "type": "FLOAT",
                        "description": "Southern latitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "east",
                        "type": "FLOAT",
                        "description": "Eastern longitude of bounding box.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of vehicles.",
                        "default": "256"
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Compute frames for how many seconds?",
                        "default": "30"
                    },
                    {
                        "name": "frames",
                        "type": "INTEGER",
                        "description": "Number of frames to compute.",
                        "default": "3"
                    },
                    {
                        "name": "polylines",
                        "type": "BOOLEAN",
                        "description": "Return a polyline for each vehicle?",
                        "default": "true"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_lines",
                "api_description": "List lines.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by line ID."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_line",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need to monitor the vehicles currently moving in the central Berlin area with boundaries north=52.52411, west=13.41002, south=52.51942, east=13.41709 and could you list the details of the Red Line from the MBTA data?",
        "relevant APIs": [],
        "query_id": 289
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "stop_departures",
                "api_description": "Get departures at a stop/station.",
                "required_parameters": [
                    {
                        "name": "stop_id",
                        "type": "STRING",
                        "description": "ID of the stop/station.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "when",
                        "type": "STRING",
                        "description": "Departure time (ISO 8601 format).",
                        "default": ""
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Filter by direction.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Show departures for how many minutes.",
                        "default": "10"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of results.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            },
            {
                "tool_name": "irail",
                "api_name": "connections",
                "api_description": "Get routes between two stations.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Departure station"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "Destination station"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "timesel",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "typeOfTransport",
                        "type": "STRING",
                        "description": "Type of transport",
                        "default": "automatic"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Number of results",
                        "default": 6
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "Can you give me the next departures from the Zoologischer Garten station in Berlin and the available train connections from Brussels to Liege tomorrow at 10am?",
        "query_id": 290
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_facilities",
                "api_description": "Retrieve information about facilities.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_type",
                        "type": "STRING",
                        "description": "Filter by facility type."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_facility",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What is the current liveboard information for Gent-Sint-Pieters station in Belgium? Additionally, can you provide details about facilities at a specific stop in the MBTA system?",
        "relevant APIs": [],
        "query_id": 291
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "string",
                    "found": "boolean",
                    "number": "number",
                    "type": "string",
                    "date": "string"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "timestamp": "integer",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            }
        ],
        "query": "Can you provide a random math fact and also tell me the current location of the International Space Station?",
        "relevant APIs": [],
        "query_id": 292
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "timestamp": "int",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "metadata": "object"
                }
            }
        ],
        "query": "Where is the International Space Station currently located? Additionally, can you provide details about any significant earthquakes that have occurred in the past week with a minimum magnitude of 5?",
        "relevant APIs": [],
        "query_id": 293
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "I need to get the TLE data for the satellite with catalog number 25544. Additionally, could you simplify the expression 2^2 + 2*2?",
        "relevant APIs": [],
        "query_id": 294
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "timestamp": "int",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            }
        ],
        "query": "Where is the International Space Station currently located, and can you also find recent articles about satellite technology on arXiv?",
        "relevant APIs": [],
        "query_id": 295
    },
    {
        "api_list": [
            {
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "I'm interested in articles on 'machine learning' from arXiv sorted by the latest submission date. Also, what's a fun fact about the year 1969?",
        "query_id": 296
    },
    {
        "api_list": [
            {
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            }
        ],
        "query": "How many earthquakes with a magnitude over 5 occurred on January 1, 2023?",
        "query_id": 297
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_all_capsules",
                "api_description": "Retrieve all capsules information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "serial": "str",
                        "status": "str"
                    }
                ]
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "sunrise": "str",
                        "sunset": "str"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "I'd like to know about all the SpaceX capsules currently in service and also get today's sunrise and sunset times for San Francisco.",
        "relevant APIs": [],
        "query_id": 298
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_special",
                "api_description": "Query GP data using special datasets.",
                "required_parameters": [
                    {
                        "name": "SPECIAL",
                        "type": "STRING",
                        "description": "Special dataset identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "1": "1 is the number of dimensions of a line.",
                    "2": "2 is the number of polynucleotide strands in a DNA double helix.",
                    "3": "3 is the number of sets needed to be won to win the whole match in volleyball."
                }
            }
        ],
        "query": "I am interested in the special dataset of the GEO Protected Zone. Can you also provide me with facts about the numbers 1, 2, and 3?",
        "relevant APIs": [],
        "query_id": 299
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "I want to know about any new research on machine learning available on arXiv and also get the sunrise time in Sydney, Australia (longitude 151.215297, latitude -33.856784) for tomorrow in 24-hour format.",
        "relevant APIs": [],
        "query_id": 300
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "operation": "string",
                    "expression": "string",
                    "result": "string"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "string",
                    "found": "boolean",
                    "number": "number",
                    "type": "string",
                    "date": "string"
                }
            }
        ],
        "query": "Can you help me solve and simplify the mathematical expression 2^2 + 2(2) using Newton's API? Also, tell me a trivia fact about the number 8 using the Numbers API.",
        "query_id": 301
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "timestamp": "int",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_next_launch",
                "api_description": "Retrieve information about the next launch.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "date_utc": "str",
                    "rocket": "str",
                    "launchpad": "str",
                    "payloads": [
                        "str"
                    ]
                }
            }
        ],
        "query": "What is the current location of the International Space Station, and when is the next SpaceX launch?",
        "relevant APIs": [],
        "query_id": 302
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_next_launch",
                "api_description": "Retrieve information about the next SpaceX launch.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "date_utc": "str",
                    "details": "str",
                    "rocket": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "sunrise": "str",
                        "sunset": "str"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "Can you tell me about the next SpaceX launch and provide the sunrise and sunset times for the day of the launch at the Kennedy Space Center?",
        "relevant APIs": [],
        "query_id": 303
    },
    {
        "api_list": [
            {
                "tool_name": "spacex",
                "api_name": "get_all_launches",
                "api_description": "Retrieve all launch information.",
                "category_name": "Science",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "category_name": "Science",
                "required_parameters": []
            }
        ],
        "query": "Can you provide a summary of all past SpaceX launches? Additionally, I am interested in recent earthquake data, specifically earthquakes with a minimum magnitude of 5 in the past month.",
        "relevant APIs": [],
        "query_id": 304
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am interested in knowing how many people are currently in space and reading the latest arXiv articles on human space exploration.",
        "relevant APIs": [],
        "query_id": 305
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "operation": "string",
                    "expression": "string",
                    "result": "string"
                }
            }
        ],
        "query": "Can you find the latest articles about quantum physics from arXiv, and while you're at it, could you calculate the derivative of the function f(x) = x^3 + 2x?",
        "relevant APIs": [],
        "query_id": 306
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int"
                }
            }
        ],
        "query": "How many people are currently in space and what are their names? Additionally, count the number of earthquakes that occurred in the last day with a magnitude of at least 4.5.",
        "relevant APIs": [],
        "query_id": 307
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "description": "Query GP data using Catalog Number (CATNR).",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "usgs",
                "api_name": "query",
                "description": "Submit a data request for earthquake events.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "Can you find information about the satellite with catalog number 25544 and also provide details about earthquakes that occurred on January 1, 2023 with a magnitude greater than 5?",
        "relevant APIs": [],
        "query_id": 308
    },
    {
        "api_list": [
            {
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "I have these arXiv paper IDs: '2103.00020', '2103.00021'. Can you provide summaries of these papers? Additionally, can you provide interesting facts about the numbers 7, 42, and 100?",
        "query_id": 309
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "get_tsn_by_vernacular_language",
                "api_description": "Provide a listing of TSNs with vernaculars entered in the requested language.",
                "required_parameters": [
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The vernacular language for TSNs."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "response": "json"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you list the Taxonomic Serial Numbers (TSNs) of species with French names and tell me how many people are currently in space?",
        "relevant APIs": [],
        "query_id": 310
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "I need reference papers on quantum computing. Also, could you provide data for the satellite with catalog number 25544?",
        "relevant APIs": [],
        "query_id": 311
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "count",
                "api_description": "Perform a count on a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int"
                }
            }
        ],
        "query": "Retrieve the latest three papers on quantum computing from arXiv and count the number of earthquakes with a magnitude above 6.0 that happened in the past week.",
        "relevant APIs": [],
        "query_id": 312
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "catfacts",
                "api_name": "get_cat_facts",
                "api_description": "Retrieve daily cat facts.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "text": "string",
                            "_id": "string",
                            "updatedAt": "string",
                            "createdAt": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide some recent scientific articles related to quantum computing from arXiv? Also, I would love to learn a fun cat fact for a break.",
        "relevant APIs": [],
        "query_id": 313
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "uuid": "str",
                            "data": "dict"
                        }
                    ],
                    "itemCount": "int"
                }
            }
        ],
        "query": "Can you provide the latest research papers on quantum computing available on arXiv, and also give me details of any biodiversity records related to 'Panthera leo' using iDigBio?",
        "relevant APIs": [],
        "query_id": 314
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "timestamp": "int",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "sunrise": "str",
                        "sunset": "str",
                        "timezone": "str"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "What is the current location of the International Space Station and what are the sunrise and sunset times for this location today?",
        "relevant APIs": [],
        "query_id": 315
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "number": "str",
                    "fact": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_all_rockets",
                "api_description": "Retrieve all rocket information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "name": "str",
                        "description": "str",
                        "height": {
                            "meters": "float",
                            "feet": "float"
                        }
                    }
                ]
            }
        ],
        "query": "Can you give me fun facts about the numbers 7, 42, and 100? Also, I want detailed information about all SpaceX rockets and their characteristics.",
        "relevant APIs": [],
        "query_id": 316
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_company_info",
                "api_description": "Retrieve general info about SpaceX.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "founder": "str",
                    "founded": "int",
                    "employees": "int",
                    "vehicles": "int",
                    "launch_sites": "int",
                    "test_sites": "int",
                    "ceo": "str",
                    "cto": "str",
                    "cto_propulsion": "str",
                    "valuation": "float"
                }
            }
        ],
        "query": "How many people are currently in space and on which spacecraft? Also, can you give me some information about SpaceX as a company?",
        "relevant APIs": [],
        "query_id": 317
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "found": "bool",
                    "number": "int",
                    "type": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_next_launch",
                "api_description": "Retrieve information about the next SpaceX launch.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "date_utc": "str",
                    "details": "str"
                }
            }
        ],
        "query": "Can you give me an interesting fact about the number 42? Also, when is the next SpaceX launch and what should we expect from that mission?",
        "relevant APIs": [],
        "query_id": 318
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": []
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_iss_location",
                "api_description": "Returns the current location of the International Space Station (ISS).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "timestamp": "int",
                    "iss_position": {
                        "latitude": "float",
                        "longitude": "float"
                    }
                }
            }
        ],
        "query": "Can you show me the latest datasets related to biodiversity available in the US and also provide the current location of the International Space Station (ISS)?",
        "relevant APIs": [],
        "query_id": 319
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all GBIF datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find the latest research articles about 'quantum computing' on arXiv? Also, could you fetch datasets pertaining to 'biodiversity' using the GBIF API?",
        "relevant APIs": [],
        "query_id": 320
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            },
            {
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "category_name": "Science",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the XML format data for the satellite group 'STATIONS'? Also, find the derivative of the expression x^2 + 2x.",
        "relevant APIs": [],
        "query_id": 321
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "get_dataset_details",
                "api_description": "Get details of a single dataset.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "Key of the dataset"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "key": "string",
                    "title": "string",
                    "description": "string",
                    "countryCoverage": [
                        "string"
                    ],
                    "created": "string"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "view_basic_access",
                "api_description": "Returns iDigBio record format from legacy API.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The unique identifier for the record."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "view_type",
                        "type": "STRING",
                        "description": "The type of object to view.",
                        "default": "records"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "uuid": "string",
                    "data": {
                        "dwc:scientificName": "string",
                        "dwc:municipality": "string",
                        "idigbio:geoPoint": {
                            "lat": "float",
                            "lon": "float"
                        }
                    }
                }
            }
        ],
        "query": "I would like to know more details about a specific dataset identified by key '6d52d3ee-d375-4daa-8c3b-c94e0ef4eb76' using the GBIF API. Also, can you provide me with a detailed view of a specific record from iDigBio using the UUID 'c5e7b8fe-7f33-404e-96cc-35a201a4b1d9'?",
        "relevant APIs": [],
        "query_id": 322
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Please search for datasets containing information about birds. Additionally, integrate the expression x^2.",
        "relevant APIs": [],
        "query_id": 323
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "sunrise": "str",
                        "sunset": "str",
                        "timezone": "str"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "How many people are currently in space and what are their names? Also, can you tell me the sunrise and sunset times for a city like New York?",
        "relevant APIs": [],
        "query_id": 324
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "found": "bool",
                    "number": "int",
                    "type": "str"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_company_info",
                "api_description": "Retrieve general info about SpaceX.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "founder": "str",
                    "founded": "int",
                    "employees": "int",
                    "vehicles": "int",
                    "launch_sites": "int",
                    "test_sites": "int",
                    "ceo": "str",
                    "cto": "str"
                }
            }
        ],
        "query": "Tell me a random trivia about numbers. Also, could you provide an overview of SpaceX as a company?",
        "relevant APIs": [],
        "query_id": 325
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": [
                        {
                            "name": "str",
                            "craft": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want to check the current TLE data for the Hubble Space Telescope and also find out how many people are currently in space.",
        "relevant APIs": [],
        "query_id": 326
    },
    {
        "api_list": [
            {
                "tool_name": "spacex",
                "api_name": "get_company_info",
                "api_description": "Retrieve general info about SpaceX.",
                "category_name": "Science",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "usgs",
                "api_name": "contributors",
                "api_description": "Request available contributors.",
                "category_name": "Science",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "I want to know more about the SpaceX company. Also, can you list the contributors available for earthquake data according to the USGS?",
        "relevant APIs": [],
        "query_id": 327
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "FeatureCollection",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str",
                        "status": "int"
                    },
                    "features": [
                        {
                            "type": "Feature",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find recent articles on AI safety from arXiv? Also, provide earthquake data for events that occurred this year with a magnitude greater than 5.0.",
        "relevant APIs": [],
        "query_id": 328
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "2012 is the year that the century's second and last solar transit of Venus occurs on June 6.",
                    "found": true,
                    "number": 2012,
                    "type": "year",
                    "date": "June 6"
                }
            }
        ],
        "query": "Can you provide information about the satellite named 'MICROSAT-R'? Also, what is a trivia fact about the number 42?",
        "relevant APIs": [],
        "query_id": 329
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "required_parameters": []
            }
        ],
        "query": "Can you provide me with the sunrise and sunset times for Tokyo, Japan today, and also find out if there were any earthquakes with a magnitude greater than 5.0 that occurred worldwide today?",
        "relevant APIs": [],
        "query_id": 330
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "Can you provide the latest articles related to quantum computing on arXiv and also find out when the sun sets in Kyoto, Japan (Latitude 35.011665, Longitude 135.768111) today?",
        "relevant APIs": [],
        "query_id": 331
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                },
                "category_name": "Science"
            },
            {
                "tool_name": "spacex",
                "api_name": "get_next_launch",
                "api_description": "Retrieve information about the next launch.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fairings": "object",
                    "links": "object",
                    "static_fire_date_utc": "string",
                    "rocket": "string",
                    "success": "boolean",
                    "details": "string",
                    "crew": [
                        "string"
                    ],
                    "ships": [
                        "string"
                    ],
                    "capsules": [
                        "string"
                    ],
                    "payloads": [
                        "string"
                    ],
                    "launchpad": "string"
                },
                "category_name": "Science"
            }
        ],
        "query": "What's the latest update on the satellite with catalog number 25544? Also, when is the next SpaceX launch scheduled?",
        "relevant APIs": [],
        "query_id": 332
    },
    {
        "api_list": [
            {
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "category_name": "Science"
            },
            {
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "category_name": "Science"
            }
        ],
        "query": "Can you find recent articles related to quantum computing on arXiv? Also, tell me an interesting trivia about the number 42.",
        "query_id": 333
    },
    {
        "api_list": [
            {
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            }
        ],
        "query": "Can you provide a random trivia fact about a number?",
        "query_id": 334
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "usgs",
                "api_name": "query",
                "api_description": "Submit a data request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Specify the output format.",
                        "default": "geojson"
                    },
                    {
                        "name": "starttime",
                        "type": "STRING",
                        "description": "Limit events on or after the specified start time.",
                        "default": "NOW - 30 days"
                    },
                    {
                        "name": "endtime",
                        "type": "STRING",
                        "description": "Limit the events on or before the specified end time.",
                        "default": "present"
                    },
                    {
                        "name": "minmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude larger than the specified minimum.",
                        "default": "null"
                    },
                    {
                        "name": "maxmagnitude",
                        "type": "DECIMAL",
                        "description": "Limit to events with a magnitude smaller than the specified maximum.",
                        "default": "null"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "metadata": {
                        "generated": "int",
                        "url": "str",
                        "title": "str"
                    },
                    "features": [
                        {
                            "type": "str",
                            "properties": {
                                "mag": "float",
                                "place": "str",
                                "time": "int"
                            },
                            "geometry": {
                                "type": "str",
                                "coordinates": [
                                    "float",
                                    "float",
                                    "float"
                                ]
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am researching biodiversity datasets related to marine life. Can you find some datasets using this keyword? Also, I need data on earthquakes that happened in the last month with a magnitude of at least 5.",
        "relevant APIs": [],
        "query_id": 335
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you list some datasets related to occurrences in the US? Also, could you find the derivative of the function 2x^3 + 3x^2?",
        "relevant APIs": [],
        "query_id": 336
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "search_by_scientific_name",
                "api_description": "Returns matches found by comparing the search key to the ITIS full Scientific Names.",
                "required_parameters": [
                    {
                        "name": "srchKey",
                        "type": "STRING",
                        "description": "The scientific name to search."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matches": "list of scientific names"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "spacex",
                "api_name": "get_all_rockets",
                "api_description": "Retrieve all rocket information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "rockets": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "active": "bool",
                            "stages": "int",
                            "boosters": "int",
                            "cost_per_launch": "int",
                            "success_rate_pct": "int",
                            "first_flight": "str",
                            "country": "str",
                            "company": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide information on the scientific classification for the genus 'ursus'? Additionally, I would like to know about all the rockets developed by SpaceX.",
        "relevant APIs": [],
        "query_id": 337
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find a historical fact about the year 1969, and also provide the sunrise and sunset times on the same date in Washington, D.C.?",
        "relevant APIs": [],
        "query_id": 338
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "limit": "int",
                    "offset": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "type": "str",
                            "pub": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "found": "bool",
                    "number": "int",
                    "type": "str"
                }
            }
        ],
        "query": "Can you search for datasets related to climate change and also provide me with a random trivia fact?",
        "relevant APIs": [],
        "query_id": 339
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query the Celestrak GP Data using Satellite Name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "description": "Returns satellite data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "description": "str",
                            "type": "str",
                            "countryCoverage": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the latest telemetry data for the Hubble Space Telescope and also find datasets related to bird species worldwide?",
        "relevant APIs": [],
        "query_id": 340
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            },
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "search_records",
                "api_description": "Searches for record objects.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "rq",
                        "type": "DICT",
                        "description": "Search Query in iDigBio Query Format."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort on."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "List of fields to return."
                    },
                    {
                        "name": "fields_exclude",
                        "type": "LIST",
                        "description": "List of fields to exclude."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Max results.",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip results.",
                        "default": 0
                    },
                    {
                        "name": "no_attribution",
                        "type": "BOOLEAN",
                        "description": "Disable the attribution block."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "itemCount": "int",
                    "results": "list of dict"
                }
            }
        ],
        "query": "Please get the TLE data for all satellites in the 'Science' group using Celestrak. At the same time, could you search iDigBio records for any related to 'Homo sapiens'?",
        "relevant APIs": [],
        "query_id": 341
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": []
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "str",
                    "number": "int",
                    "people": []
                }
            }
        ],
        "query": "I would like to know about any datasets with information on biodiversity and also find out how many people are currently in space and their details.",
        "relevant APIs": [],
        "query_id": 342
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_batch_number_facts",
                "api_description": "Get facts for multiple numbers in one request.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "numbers",
                        "type": "STRING",
                        "description": "A comma separated list of numbers or number ranges.",
                        "default": "1..3"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the facts in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "number": "string"
                }
            },
            {
                "category_name": "Science",
                "tool_name": "opennotify",
                "api_name": "get_people_in_space",
                "api_description": "Returns the current number of people in space, along with their names and spacecraft.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "message": "string",
                    "number": "integer",
                    "people": [
                        {
                            "name": "string",
                            "craft": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you give me interesting facts about numbers 1 to 3, and also tell me how many people are currently in space and their names?",
        "relevant APIs": [],
        "query_id": 343
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "list_datasets",
                "api_description": "Lists all current datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The 2-letter country code"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Primary type of the dataset"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        "object"
                    ]
                }
            },
            {
                "category_name": "Science",
                "tool_name": "itis",
                "api_name": "search_for_any_match",
                "api_description": "Returns matches by comparing the search key to ITIS names and TSNs.",
                "required_parameters": [
                    {
                        "name": "srchKey",
                        "type": "STRING",
                        "description": "The search key for matching."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "matches": [
                        "object"
                    ]
                }
            }
        ],
        "query": "Can you list biodiversity datasets available in the US, and find any taxonomic matches related to 'Panthera'?",
        "relevant APIs": [],
        "query_id": 344
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v4_uuid",
                "api_description": "Generate version-4 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you get details of two random female users, and generate five version-4 UUIDs to be assigned to different profiles?",
        "relevant APIs": [],
        "query_id": 345
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user",
                "api_description": "Retrieve a set of random users.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "The number of users to return.",
                        "default": "1"
                    },
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed to get repeatable results.",
                        "default": "None"
                    },
                    {
                        "name": "gender",
                        "type": "STRING",
                        "description": "Filter results by gender. Values can be 'male' or 'female'.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v1_uuid",
                "api_description": "Generate version-1 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you provide me with details of three random users and also generate three version-1 UUIDs for unique identification?",
        "relevant APIs": [],
        "query_id": 346
    },
    {
        "api_list": [
            {
                "tool_name": "randomuser",
                "api_name": "get_random_user_in_format",
                "api_description": "Retrieve a random user in a specified format.",
                "required_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format to return the data in. Values can be 'json', 'xml', 'csv', 'yaml'.",
                        "default": "json"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            },
            {
                "tool_name": "uuidandguidgen",
                "api_name": "decode_uuid",
                "api_description": "Decode UUID to find its version and variant.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The UUID to decode."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "I need a random user profile in CSV format. Also, decode this UUID 'b01eb720-171a-11ea-b949-73c91bba743d' to find its version and variant.",
        "relevant APIs": [],
        "query_id": 347
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_houses",
                "api_description": "Get the list of Game of Thrones houses.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Which houses are there in Game of Thrones? And could you share some thoughts from Ron Swanson about government?",
        "relevant APIs": [],
        "query_id": 348
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve multiple quotes from Breaking Bad.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_random_quotes",
                "api_description": "Get multiple random quotes from Game of Thrones.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of random quotes to return.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            }
        ],
        "query": "Please fetch 3 quotes each from Breaking Bad and Game of Thrones.",
        "query_id": 349
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a single random quote with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "string",
                    "author": "string"
                }
            }
        ],
        "query": "Can you give me an inspirational quote from Kanye West and another random quote from any author to start my day?",
        "relevant APIs": [],
        "query_id": 350
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I am working on improving my life. Can you search for any advice on 'motivation' and provide me with a Kanye West quote?",
        "relevant APIs": [],
        "query_id": 351
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": {
                        "rendered": "str"
                    },
                    "content": {
                        "rendered": "str"
                    }
                }
            }
        ],
        "query": "I need a positive start to my morning. Could you give me a daily affirmation and a quote to set a good tone for the day?",
        "relevant APIs": [],
        "query_id": 352
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_advice_by_id",
                "api_description": "Returns a specific advice slip by slip_id.",
                "required_parameters": [
                    {
                        "name": "slip_id",
                        "type": "INTEGER",
                        "description": "The unique ID of the advice slip.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_house_details",
                "api_description": "Get details of a specific Game of Thrones house.",
                "required_parameters": [
                    {
                        "name": "house_slug",
                        "type": "STRING",
                        "description": "Slug of the house."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "slug": "str",
                        "name": "str",
                        "members": [
                            {
                                "name": "str",
                                "slug": "str"
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you find the advice slip with ID 100? Also, provide me with details about House Stark from Game of Thrones.",
        "relevant APIs": [],
        "query_id": 353
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_random_quote",
                "api_description": "Get a random quote from Game of Thrones.",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "list_tags",
                "api_description": "Get a list of all tags with sorting options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "name"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    }
                ]
            }
        ],
        "query": "Can you provide me a random Game of Thrones quote and also give me a list of available tags from the Quotable API?",
        "query_id": 354
    },
    {
        "api_list": [
            {
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "I need a little motivation. Can you provide me with a random quote from Kanye and three random quotes from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 355
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_random_quote",
                "api_description": "Get a random quote from Game of Thrones.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "Can you give me a random quote from both Breaking Bad and Game of Thrones?",
        "query_id": 356
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_random_quote",
                "api_description": "Get a random quote from Game of Thrones.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sentence": "str",
                    "character": {
                        "name": "str",
                        "slug": "str",
                        "house": {
                            "name": "str",
                            "slug": "str"
                        }
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "Can you give me an inspiring quote from Game of Thrones along with a random design quote?",
        "relevant APIs": [],
        "query_id": 357
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I'm looking for some advice related to 'happiness'. Could you search for it for me?",
        "relevant APIs": [],
        "query_id": 358
    },
    {
        "api_list": [
            {
                "tool_name": "quotable",
                "api_name": "list_quotes",
                "api_description": "Get all quotes matching a given query with pagination and sorting options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    },
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "dateAdded"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "Provide a list of 5 motivational quotes and 3 random quotes from Ron Swanson.",
        "relevant APIs": [],
        "query_id": 359
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I'd like to see three quotes from Breaking Bad and also hear something unique Kanye West has said.",
        "relevant APIs": [],
        "query_id": 360
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_house_details",
                "api_description": "Get details of a specific Game of Thrones house.",
                "required_parameters": [
                    {
                        "name": "house_slug",
                        "type": "STRING",
                        "description": "Slug of the house."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Tell me all you can about House Stark and entertain me with three Ron Swanson quotes.",
        "relevant APIs": [],
        "query_id": 361
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "category_name": "Inspiration",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ]
            }
        ],
        "query": "Get me a random quote from Breaking Bad and quotes by Tyrion Lannister from Game of Thrones.",
        "query_id": 362
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "Can you give me a motivational quote from the Breaking Bad series, and also something thought-provoking Kanye West has said?",
        "relevant APIs": [],
        "query_id": 363
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "I need to organize a quote session. Can you fetch 3 quotes from Breaking Bad and a random one from the Quotes on Design?",
        "relevant APIs": [],
        "query_id": 364
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": {
                        "rendered": "str"
                    },
                    "content": {
                        "rendered": "str"
                    }
                }
            }
        ],
        "query": "I'd like to share a blend of creativity and insight. Can you provide one random quote by Kanye West along with a random inspirational quote from famous designers?",
        "relevant APIs": [],
        "query_id": 365
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve multiple quotes from Breaking Bad.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            },
            {
                "tool_name": "gameofthrones",
                "api_name": "get_characters",
                "api_description": "Get the list of Game of Thrones characters with their quotes.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "Fetch 5 quotes from Breaking Bad and a list of Game of Thrones characters.",
        "query_id": 366
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "str",
                    "author": "str"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "Can you share a random quote from Breaking Bad alongside a Ron Swanson quote to brighten my day?",
        "relevant APIs": [],
        "query_id": 367
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "sentence": "str",
                        "character": {
                            "name": "str",
                            "slug": "str",
                            "house": {
                                "name": "str",
                                "slug": "str"
                            }
                        }
                    }
                ]
            }
        ],
        "query": "I'm looking for advice related to happiness, can you find some advice slips mentioning 'happiness'? Also, provide me with some quotes from Tyrion Lannister.",
        "relevant APIs": [],
        "query_id": 368
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "Can you provide me with a random quote from Breaking Bad, and also share a random design quote? I need something inspirational.",
        "relevant APIs": [],
        "query_id": 369
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "list_authors",
                "api_description": "Get all authors matching the given query, with several options for sorting and filtering.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING"
                    },
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "name"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you list some popular authors and find a random quote that might be related to design?",
        "relevant APIs": [],
        "query_id": 370
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "Can you provide me with a motivational affirmation to start my day?",
        "relevant APIs": [],
        "query_id": 371
    },
    {
        "api_list": [
            {
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "I'm feeling uninspired. Can you give me a random quote from Kanye West and another from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 372
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "template_response": {
                    "id": "int",
                    "title": {
                        "rendered": "str"
                    },
                    "content": {
                        "rendered": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "Ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I am looking for some humorous and insightful quotes to start my day. Can you provide me with one random quote from the Quotes on Design API and another from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 373
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "content": "string",
                            "author": "string",
                            "tags": [
                                "string"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "I'd like a random Kanye West quote and a quote that mentions 'success'.",
        "relevant APIs": [],
        "query_id": 374
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ]
            }
        ],
        "query": "I'd like to get a couple of quotes from Tyrion Lannister. Also, can you find some quotes related to 'wisdom' using the Quotable API?",
        "query_id": 375
    },
    {
        "api_list": [
            {
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "Can you find me a random quote from Kanye West and search for Ron Swanson quotes that mention 'breakfast'?",
        "relevant APIs": [],
        "query_id": 376
    },
    {
        "api_list": [
            {
                "tool_name": "quotable",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a single random quote with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    }
                ],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "Can you give me an inspiring quote from any author and a humorous quote from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 377
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_houses",
                "api_description": "Get the list of Game of Thrones houses.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "slug": "str",
                        "name": "str",
                        "members": [
                            {
                                "name": "str",
                                "slug": "str"
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "What are the houses in Game of Thrones? Also, provide a random quote about design.",
        "relevant APIs": [],
        "query_id": 378
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "string",
                        "author": "string"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "list_quotes",
                "api_description": "Get all quotes matching a given query with pagination and sorting options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    },
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "dateAdded"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "content": "string",
                            "author": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I need 5 quotes from Breaking Bad and 5 inspirational quotes from different authors, can you provide them?",
        "relevant APIs": [],
        "query_id": 379
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string",
                    "author": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "content": "string",
                            "author": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a popular Breaking Bad quote and a famous quote about happiness from different authors?",
        "relevant APIs": [],
        "query_id": 380
    },
    {
        "api_list": [
            {
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                },
                "category_name": "Inspiration"
            },
            {
                "tool_name": "ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Inspiration"
            }
        ],
        "query": "I need some positive reinforcement. Can you provide me with an inspirational affirmation and two Ron Swanson quotes for some humor?",
        "relevant APIs": [],
        "query_id": 381
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I'm looking for some inspiration. Can you give me a random affirmation or a thoughtful Kanye West quote?",
        "relevant APIs": [],
        "query_id": 382
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_house_details",
                "api_description": "Get details of a specific Game of Thrones house.",
                "required_parameters": [
                    {
                        "name": "house_slug",
                        "type": "STRING",
                        "description": "Slug of the house."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "list_authors",
                "api_description": "Get all authors matching the given query, with several options for sorting and filtering.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING"
                    },
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "name"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ]
            }
        ],
        "query": "Can you provide details about House Stark from Game of Thrones? Also, can you give me a list of authors from the Quotable API?",
        "query_id": 383
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "sentence": "string",
                        "character": {
                            "name": "string",
                            "slug": "string",
                            "house": {
                                "name": "string",
                                "slug": "string"
                            }
                        }
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "What are two quotes from Tyrion Lannister from Game of Thrones, and what does Kanye West have to say today?",
        "relevant APIs": [],
        "query_id": 384
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": {
                        "rendered": "str"
                    },
                    "content": {
                        "rendered": "str"
                    }
                }
            }
        ],
        "query": "I'm in need of some inspiration today. Can you give me a random quote from Kanye West and also a random quote from the design world?",
        "relevant APIs": [],
        "query_id": 385
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_advice_by_id",
                "api_description": "Returns a specific advice slip by slip_id.",
                "required_parameters": [
                    {
                        "name": "slip_id",
                        "type": "INTEGER",
                        "description": "The unique ID of the advice slip.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I saw an advice with ID 5 a long time ago and it really inspired me. Can you fetch it for me?",
        "relevant APIs": [],
        "query_id": 386
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I'm having a tough day. Give me a few wise words from Tyrion Lannister and a Ron Swanson quote to cheer me up.",
        "relevant APIs": [],
        "query_id": 387
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "search_advice",
                "api_description": "Search for advice slips containing the given query term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for advice slips.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total_results": "int",
                    "query": "str",
                    "slips": [
                        {
                            "slip_id": "int",
                            "advice": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            }
        ],
        "query": "I'm looking for advice related to 'courage' and could you also share 3 quotes from Breaking Bad?",
        "relevant_APIs": [],
        "query_id": 388
    },
    {
        "api_list": [
            {
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                },
                "category_name": "Inspiration"
            },
            {
                "tool_name": "ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Inspiration"
            }
        ],
        "query": "Can you give me a random affirmation to motivate me today alongside a humorous Ron Swanson quote?",
        "relevant APIs": [],
        "query_id": 389
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "sentence": "str",
                        "character": {
                            "name": "str",
                            "slug": "str",
                            "house": {
                                "name": "str",
                                "slug": "str"
                            }
                        }
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "title": {
                            "rendered": "str"
                        },
                        "content": {
                            "rendered": "str"
                        }
                    }
                ]
            }
        ],
        "query": "I'd like to see some quotes by Tyrion Lannister and mix them with random quotes from design.",
        "relevant APIs": [],
        "query_id": 390
    },
    {
        "api_list": [
            {
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                },
                "category_name": "Inspiration"
            },
            {
                "tool_name": "ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Inspiration"
            }
        ],
        "query": "I'm feeling a bit down and I also want to laugh. Get me a random positive affirmation and search for Ron Swanson quotes that include the word 'bacon'.",
        "relevant APIs": [],
        "query_id": 391
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_random_advice",
                "api_description": "Returns a random advice slip as a slip object.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            }
        ],
        "query": "I need some inspiration. Can you give me a piece of random advice and a random quote from Breaking Bad?",
        "relevant_APIs": [],
        "query_id": 392
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve a specified number of quotes from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "quote": "str",
                        "author": "str"
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "get_quotes",
                "api_description": "Fetches a specified number of random Ron Swanson quotes.",
                "required_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of quotes to fetch.",
                        "default": "1"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I'm compiling inspirational quotes for a presentation. Can you fetch 3 quotes from Breaking Bad and 2 quotes from Ron Swanson?",
        "relevant APIs": [],
        "query_id": 393
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Search for quotes related to 'innovation' and provide me with some random quotes from the design perspective.",
        "relevant APIs": [],
        "query_id": 394
    },
    {
        "api_list": [
            {
                "tool_name": "quotable",
                "api_name": "search_quotes",
                "api_description": "Search for quotes by keywords, content, and/or author name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "default": "content,author,tags"
                    },
                    {
                        "name": "fuzzyMaxEdits",
                        "type": "INT",
                        "default": "0"
                    },
                    {
                        "name": "fuzzyMaxExpansions",
                        "type": "INT",
                        "default": "50"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "Inspiration"
            },
            {
                "tool_name": "Ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Inspiration"
            }
        ],
        "query": "Find quotes about leadership by any author and also specifically from Ron Swanson.",
        "relevant APIs": [],
        "query_id": 395
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "str",
                    "author": "str"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "ronswanson",
                "api_name": "search_quotes",
                "api_description": "Searches for Ron Swanson quotes that match a given term.",
                "required_parameters": [
                    {
                        "name": "term",
                        "type": "STRING",
                        "description": "Term to search within quotes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ]
            }
        ],
        "query": "I need a random Breaking Bad quote and a Ron Swanson quote that contains the word 'meat' for a themed night.",
        "relevant APIs": [],
        "query_id": 396
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_houses",
                "api_description": "Get the list of Game of Thrones houses.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "slug": "string",
                        "name": "string",
                        "members": [
                            {
                                "name": "string",
                                "slug": "string"
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "Can you provide me with a list of all the houses in Game of Thrones and a random Kanye West quote for some inspiration?",
        "relevant APIs": [],
        "query_id": 397
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "gameofthrones",
                "api_name": "get_random_quote",
                "api_description": "Get a random quote from Game of Thrones.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sentence": "string",
                    "character": {
                        "name": "string",
                        "slug": "string",
                        "house": {
                            "name": "string",
                            "slug": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "Can you give me an inspirational quote from Game of Thrones and one from Kanye West?",
        "relevant APIs": [],
        "query_id": 398
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string",
                    "author": "string"
                }
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a single random quote with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "string",
                    "author": "string"
                }
            }
        ],
        "query": "Can you get me a random quote from Breaking Bad and another random quote from any other source?",
        "relevant APIs": [],
        "query_id": 399
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a single random quote with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide me with a random quote about wisdom and also get a few random design-related quotes?",
        "relevant APIs": [],
        "query_id": 400
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "forces": [
                        {
                            "id": "string",
                            "name": "string"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "waybackmachine",
                "api_name": "wayback_availability",
                "api_description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to check for availability in the Wayback Machine.",
                        "default": "example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timestamp",
                        "type": "STRING",
                        "description": "Timestamp to look up in Wayback in YYYYMMDDhhmmss format.",
                        "default": ""
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Callback function for JSONP response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "archived_snapshots": {
                        "closest": {
                            "available": "boolean",
                            "url": "string",
                            "timestamp": "string",
                            "status": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide me with a list of all available police forces in the UK, excluding the British Transport Police, and also check if 'example.com' has any snapshots archived in the Wayback Machine?",
        "relevant APIs": [],
        "query_id": 401
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "transactions": {
                            "type": "array"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide me with all the stock transactions from the U.S. House of Representatives?",
        "query_id": 402
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "I need to find the models available for a specific car brand using its brand code from the FIPE database and also get a daily stock transaction report for the date '01_01_2021'.",
        "query_id": 403
    },
    {
        "api_list": [
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array"
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you find universities with 'Middle' in their name in Turkey?",
        "query_id": 404
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_by_date",
                "api_description": "Get Carbon Intensity data for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "recent_changes",
                "api_description": "Get recent changes across Open Library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of entries."
                    },
                    {
                        "name": "kind",
                        "type": "STRING",
                        "description": "Type of change."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date for changes in YYYY/MM/DD format."
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Can you tell me the carbon intensity on 2021-05-01 and also what were the recent changes in the Open Library around that date?",
        "query_id": 405
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_project_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the devices in the specified project.",
                "required_parameters": [
                    {
                        "name": "project",
                        "type": "STRING",
                        "description": "Project name.",
                        "default": "airbox"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "feeds": "array"
                }
            }
        ],
        "query": "What are the stock transactions reported on January 1st, 2021, and what is the latest measurement from the 'airbox' project?",
        "relevant APIs": [],
        "query_id": 406
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_analysis_adf_pollution",
                "api_description": "Returns the list of devices with suspicious pollution ongoing in their nearby areas detected by ADF (updated hourly).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "List all the police forces in the UK. Also, find out which areas have ongoing pollution warnings as detected by PM2.5 monitoring devices.",
        "query_id": 407
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            }
        ],
        "query": "I'd like to know the carbon intensity statistics over the past week in the UK and also get the current market price of a 2018 Volkswagen Golf in Brazil.",
        "relevant APIs": [],
        "query_id": 408
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_brands",
                "api_description": "Fetch the brands for the specified vehicle type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "device_id": {
                            "type": "string"
                        },
                        "feeds": {
                            "type": "object"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I want to know which car brands are available for motorcycles in the Brazilian market. Additionally, can you provide me with the latest air quality measurements from device ID '08BEAC0A08AE'?",
        "relevant APIs": [],
        "query_id": 409
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "string"
                        ],
                        "domains": [
                            "string"
                        ],
                        "country": "string",
                        "alpha_two_code": "string",
                        "name": "string"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Can you tell me the current carbon intensity and also find universities with the name 'Oxford'?",
        "relevant APIs": [],
        "query_id": 410
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "category": "string",
                            "location": {
                                "type": "object",
                                "properties": {
                                    "latitude": "string",
                                    "longitude": "string"
                                }
                            }
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "web_pages": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "domains": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "country": {
                                "type": "string"
                            },
                            "alpha_two_code": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        ],
        "query": "Could you provide details of street-level crimes around Oxford longitude -1.25 and latitude 51.75, including any universities named 'Oxford' in the UK?",
        "relevant APIs": [],
        "query_id": 411
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": [
                    {
                        "category": "string",
                        "location": {
                            "latitude": "string",
                            "longitude": "string",
                            "street": {
                                "id": "number",
                                "name": "string"
                            }
                        },
                        "context": "string",
                        "persistent_id": "string",
                        "id": "string",
                        "location_type": "string",
                        "month": "string"
                    }
                ]
            }
        ],
        "query": "What is the current carbon intensity in Great Britain? Also, can you provide a list of street-level crimes near latitude 51.509865 and longitude -0.118092 for the current month?",
        "relevant APIs": [],
        "query_id": 412
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "identifier": "str",
                            "title": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "modelos": [
                        {
                            "code": "str",
                            "name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Search for items related to NASA on Archive.org and get models for the Volkswagen brand from the FIPE database.",
        "relevant APIs": [],
        "query_id": 413
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_brands",
                "api_description": "Fetch the brands for the specified vehicle type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide a list of car brands available in the FIPE database and also fetch all the stock transactions recorded by members of the U.S. House of Representatives?",
        "query_id": 414
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "string"
                        ],
                        "domains": [
                            "string"
                        ],
                        "country": "string",
                        "alpha_two_code": "string",
                        "name": "string"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me with carbon intensity statistics from 2023-01-01T00:00Z to 2023-01-02T00:00Z. Also, find some universities starting with 'Stanford' but limit the results to 3.",
        "relevant APIs": [],
        "query_id": 415
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_by_date",
                "api_description": "Get Carbon Intensity data for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me the carbon intensity for December 1st, 2022 in Great Britain and provide the stock transaction report for that day from the U.S. House of Representatives?",
        "relevant APIs": [],
        "query_id": 416
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_all_makes",
                "api_description": "Get a list of all vehicle makes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "Make_ID": "integer",
                            "Make_Name": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the carbon intensity statistics for London from January 1st, 2022 to January 2nd, 2022? Furthermore, I would like a list of all vehicle makes available.",
        "relevant APIs": [],
        "query_id": 417
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "get_work_by_id",
                "api_description": "Retrieve a specific work by its Open Library work ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The work's Open Library ID."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "I need to know the current market value for a 2018 Volkswagen Golf and also get detailed information about the book 'The Machine That Changed the World' in Open Library.",
        "relevant APIs": [],
        "query_id": 418
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "decode_vin",
                "api_description": "Decode a VIN to get detailed vehicle information.",
                "required_parameters": [
                    {
                        "name": "vin",
                        "type": "STRING",
                        "description": "Vehicle Identification Number"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "modelyear",
                        "type": "INTEGER",
                        "description": "Year of the Vehicle model"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "VIN": "string",
                            "Make": "string",
                            "Model": "string",
                            "Year": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "What's the current carbon intensity level in the UK? Also, can you decode the VIN 5UXWX7C5*BA to get more details about the vehicle?",
        "relevant APIs": [],
        "query_id": 419
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "waybackmachine",
                "api_name": "wayback_availability",
                "api_description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to check for availability in the Wayback Machine.",
                        "default": "example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timestamp",
                        "type": "STRING",
                        "description": "Timestamp to look up in Wayback in YYYYMMDDhhmmss format.",
                        "default": ""
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Callback function for JSONP response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "archived_snapshots": {
                        "closest": {
                            "available": "boolean",
                            "url": "string",
                            "timestamp": "string",
                            "status": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I need to know the stock transactions reported on 01_01_2021 by the U.S. House members. Simultaneously, can you verify if there is an archive available for the URL 'example.com' on January 1, 2023?",
        "relevant APIs": [],
        "query_id": 420
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "device_id": "string",
                    "feeds": "object"
                }
            }
        ],
        "query": "Can you provide me with all the stock transactions by members of the U.S. House of Representatives and also show me the latest PM2.5 measurement from the device with ID 08BEAC0A08AE?",
        "relevant APIs": [],
        "query_id": 421
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model, and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "web_pages": [
                            "str"
                        ],
                        "domains": [
                            "str"
                        ],
                        "country": "str",
                        "alpha_two_code": "str",
                        "name": "str"
                    }
                ]
            }
        ],
        "query": "Can you tell me the current market value of a specific car model from the FIPE table, and also find universities named 'Middle' in Turkey?",
        "relevant APIs": [],
        "query_id": 422
    },
    {
        "api_list": [
            {
                "tool_name": "openlibrary",
                "api_name": "get_author_by_id",
                "api_description": "Retrieve author details and their works by author identifier.",
                "required_parameters": [
                    {
                        "name": "author_id",
                        "type": "STRING",
                        "description": "The author's Open Library ID."
                    }
                ],
                "category_name": "OpenData",
                "optional_parameters": []
            },
            {
                "tool_name": "vehicles",
                "api_name": "get_models_for_make",
                "api_description": "Get Models for a specified make.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "Make name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "category_name": "OpenData"
            }
        ],
        "query": "Provide me the list of works by the author with the ID 'OL23919A'. Additionally, what vehicle models are available under the make 'Toyota'?",
        "relevant APIs": [],
        "query_id": 423
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "OpenData",
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide me with the latest air quality measurement from the specific device with ID 08BEAC0A08AE? Meanwhile, I am also interested to find all universities that contain 'Middle' in their name.",
        "relevant APIs": [],
        "query_id": 424
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am researching the impact of technological advancements on carbon emissions. Can you find NASA-related items in the Archive.org collection and also provide the current carbon intensity data for Great Britain?",
        "relevant APIs": [],
        "query_id": 425
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_all_manufacturers",
                "api_description": "Get all manufacturers, with optional Manufacturer Type filter.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "manufacturer_type",
                        "type": "STRING",
                        "description": "Type of manufacturer"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number",
                        "default": 1
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "Mfr_ID": "int",
                            "Mfr_Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I need the transaction report for January 15, 2022, and also a list of all vehicle manufacturers.",
        "relevant APIs": [],
        "query_id": 426
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "get_author_by_id",
                "api_description": "Retrieve details of an author by their Open Library author ID.",
                "required_parameters": [
                    {
                        "name": "author_id",
                        "type": "STRING",
                        "description": "The author's Open Library ID."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "key": "str",
                    "name": "str",
                    "work_count": "int",
                    "top_subjects": [
                        "str"
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide the stock transaction report for the date 05_15_2023 from the housestockwatcher API? Also, retrieve details about an author identified by 'OL23919A' from Open Library.",
        "relevant APIs": [],
        "query_id": 427
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "search_authors",
                "api_description": "Search for authors using the Open Library Authors API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string for author's name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Please get me the available car models from Ford and also find authors related to automotive topics in the Open Library.",
        "relevant APIs": [],
        "query_id": 428
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "waybackmachine",
                "api_name": "wayback_availability",
                "api_description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to check for availability in the Wayback Machine.",
                        "default": "example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timestamp",
                        "type": "STRING",
                        "description": "Timestamp to look up in Wayback in YYYYMMDDhhmmss format.",
                        "default": ""
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Callback function for JSONP response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "archived_snapshots": {
                        "closest": {
                            "available": "boolean",
                            "url": "string",
                            "timestamp": "string",
                            "status": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you tell me the current market price for a 2014 Volkswagen model from the FIPE table? Additionally, is the website 'example.com' archived in the Wayback Machine at a specific date?",
        "relevant APIs": [],
        "query_id": 429
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_available_disclosures",
                "api_description": "Fetches the list of available disclosures as JSON files.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Can you find the current market price for a specific vehicle using FIPE and also list all the available disclosure files for stock transactions?",
        "query_id": 430
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "crime_categories",
                "api_description": "Returns a list of valid crime categories for a given date.",
                "required_parameters": [],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_analysis_dcf_nearest",
                "api_description": "Returns the nearest reference site with DCF model to the specified GPS coordinates and sensor type.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "GPS latitude.",
                        "default": 25.04
                    },
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "GPS longitude.",
                        "default": 121.614
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sensor",
                        "type": "STRING",
                        "description": "PM2.5 sensor model.",
                        "default": "PMS5003"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "What are the valid crime categories available around October 2022? Also, can you provide the nearest reference site with DCF calibration models around London using a PMS5003 sensor?",
        "query_id": 431
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "Valor": {
                            "type": "string"
                        },
                        "Marca": {
                            "type": "string"
                        },
                        "Modelo": {
                            "type": "string"
                        },
                        "AnoModelo": {
                            "type": "integer"
                        },
                        "Combustivel": {
                            "type": "string"
                        },
                        "CodigoFipe": {
                            "type": "string"
                        },
                        "MesReferencia": {
                            "type": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_analysis_adf_emission",
                "api_description": "Returns the list of devices that are probably located near emission sources detected by ADF (updated daily).",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "feeds": {
                            "type": "array"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you find the FIPE table value for a 2019 Volkswagen Golf in Brazil? Also, list devices near emission sources detected by ADF in air quality monitoring.",
        "relevant APIs": [],
        "query_id": 432
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "modelos": [
                        {
                            "code": "int",
                            "name": "str"
                        }
                    ],
                    "anos": [
                        {
                            "code": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "get_wmis_for_manufacturer",
                "api_description": "Get the World Manufacturer Identifier for a specified manufacturer.",
                "required_parameters": [
                    {
                        "name": "manufacturer",
                        "type": "STRING",
                        "description": "Manufacturer name or ID"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "ManufacturerName": "str",
                            "WMI": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the different models available for the Honda brand in the FIPE database? Also, can you provide the World Manufacturer Identifier for Honda?",
        "relevant APIs": [],
        "query_id": 433
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all the police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str"
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "vehicles",
                "api_name": "get_makes_for_vehicle_type",
                "api_description": "Get all the Makes for a specified vehicle type.",
                "required_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "MakeId": "int",
                            "MakeName": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you list all the police forces in the UK? Additionally, I'd like to know the vehicle makes available for cars.",
        "relevant APIs": [],
        "query_id": 434
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "source": "string",
                    "device_id": "string",
                    "feeds": "object"
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide the current carbon intensity for the UK along with the latest PM2.5 measurement using device ID '08BEAC0A08AE'?",
        "query_id": 435
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_generation_mix_current",
                "api_description": "Get generation mix for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "generationmix": [
                            {
                                "fuel": "string",
                                "perc": "number"
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "string",
                        "name": "string"
                    }
                ]
            }
        ],
        "query": "Can you provide the current electricity generation mix in Great Britain? Also, could you list all the police forces in the UK?",
        "relevant APIs": [],
        "query_id": 436
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": "string",
                            "name": "string"
                        }
                    }
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "universitysearch",
                "api_name": "search_universities",
                "api_description": "Search for universities by name and filter by country with pagination capabilities.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name or part of the name of the university to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country",
                        "type": "STRING",
                        "description": "The country to filter results by."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit on the number of results to return."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Number of results to skip for pagination."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "web_pages": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "domains": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "country": {
                                "type": "string"
                            },
                            "alpha_two_code": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        ],
        "query": "Can you provide me with a list of police forces in the UK and also find universities named 'Oxford' located in the UK?",
        "relevant APIs": [],
        "query_id": 437
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_brands",
                "api_description": "Fetch the brands for the specified vehicle type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search for books using the Open Library Search API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort order."
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language preference."
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for pagination."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page."
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Could you tell me about the car brands available in Brazil and also search for books related to automotive engineering?",
        "relevant APIs": [],
        "query_id": 438
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "crimes": [
                        {
                            "category": "string",
                            "location": {
                                "latitude": "string",
                                "longitude": "string",
                                "street": {
                                    "id": "integer",
                                    "name": "string"
                                }
                            },
                            "outcome_status": {
                                "category": "string",
                                "date": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "waybackmachine",
                "api_name": "wayback_availability",
                "api_description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to check for availability in the Wayback Machine.",
                        "default": "example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timestamp",
                        "type": "STRING",
                        "description": "Timestamp to look up in Wayback in YYYYMMDDhhmmss format.",
                        "default": ""
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Callback function for JSONP response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "archived_snapshots": {
                        "closest": {
                            "available": "boolean",
                            "url": "string",
                            "timestamp": "string",
                            "status": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you check if there are any recent street-level crimes in London, possibly around January 2023, and also verify if the URL 'example.com' has been archived in the Wayback Machine?",
        "relevant APIs": [],
        "query_id": 439
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_device_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the device.",
                "required_parameters": [
                    {
                        "name": "device_id",
                        "type": "STRING",
                        "description": "Device ID, usually the MAC address.",
                        "default": "08BEAC0A08AE"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output data format.",
                        "default": "JSON"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "What are the latest street-level crimes around central London longitude -0.1278 and latitude 51.5074, and what is the latest PM2.5 measurement recorded by device 08BEAC0A08AE?",
        "query_id": 440
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "category": "str",
                    "location_type": "str",
                    "location": {
                        "latitude": "float",
                        "street": {
                            "id": "int",
                            "name": "str"
                        },
                        "longitude": "float"
                    },
                    "context": "str",
                    "outcome_status": {
                        "category": "str",
                        "date": "str"
                    },
                    "persistent_id": "str",
                    "id": "int",
                    "location_subtype": "str",
                    "month": "str"
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "vehicles",
                "api_name": "get_vehicle_types_for_make",
                "api_description": "Get all the Vehicle Types for a specified Make.",
                "required_parameters": [
                    {
                        "name": "make",
                        "type": "STRING",
                        "description": "Make name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "MakeName": "str",
                            "MakeId": "int",
                            "VehicleTypeId": "int",
                            "VehicleTypeName": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I want to know about the types of vehicles manufactured by Honda. Also, can you find out street-level crimes reported near the London Eye in longitude -0.1195 and latitude 51.5, September 2023?",
        "relevant APIs": [],
        "query_id": 441
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "available_datasets",
                "api_description": "Returns a list of available datasets.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_project_all",
                "api_description": "Returns the list of the projects.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide me with a list of all available police datasets in the UK and the projects from the LASS PM2.5 open data API?",
        "query_id": 442
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search for books using the Open Library Search API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort order."
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language preference."
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for pagination."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page."
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "What is the current carbon intensity in Great Britain and can you suggest books related to climate change?",
        "query_id": 443
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "transactions": {
                            "type": "array"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "What were the stock transactions disclosed by members of the U.S. House of Representatives on January 1, 2021?",
        "query_id": 444
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "specific_force",
                "api_description": "Returns detailed information about a specific police force given its ID.",
                "required_parameters": [
                    "force_id"
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "description": "str",
                    "url": "str"
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I need detailed information about the Leicestershire police force. Additionally, can you fetch the stock transaction report for 01/01/2021?",
        "relevant APIs": [],
        "query_id": 445
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_value",
                "api_description": "Fetch the current price from FIPE table for a specified vehicle, model and year.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    },
                    {
                        "name": "model_code",
                        "type": "STRING",
                        "description": "Code of the model."
                    },
                    {
                        "name": "year_code",
                        "type": "STRING",
                        "description": "Code of the year."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Valor": "str",
                    "Marca": "str",
                    "Modelo": "str",
                    "AnoModelo": "int",
                    "Combustivel": "str",
                    "CodigoFipe": "str",
                    "MesReferencia": "str"
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "decode_vin",
                "api_description": "Decode a VIN to get detailed vehicle information.",
                "required_parameters": [
                    {
                        "name": "vin",
                        "type": "STRING",
                        "description": "Vehicle Identification Number"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "modelyear",
                        "type": "INTEGER",
                        "description": "Year of the Vehicle model"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "Variable": "str",
                            "Value": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you help me determine the current market value of my 2018 Volkswagen Polo using the FIPE data? I've got the VIN number for it.",
        "relevant APIs": [],
        "query_id": 446
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "get_metadata",
                "api_description": "Retrieve metadata for an Archive.org item.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "The identifier for the Archive.org item.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "metadata": "object"
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "fipe",
                "api_name": "get_brands",
                "api_description": "Fetch the brands for the specified vehicle type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "brands": [
                        {
                            "code": "str",
                            "name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide metadata for a particular item from the Internet Archive, and also fetch a list of car brands available in the FIPE database?",
        "relevant APIs": [],
        "query_id": 447
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "waybackmachine",
                "api_name": "wayback_availability",
                "api_description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to check for availability in the Wayback Machine.",
                        "default": "example.com"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "timestamp",
                        "type": "STRING",
                        "description": "Timestamp to look up in Wayback in YYYYMMDDhhmmss format.",
                        "default": ""
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Callback function for JSONP response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "archived_snapshots": {
                        "closest": {
                            "available": "boolean",
                            "url": "string",
                            "timestamp": "string",
                            "status": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you provide me with a list of all transcribed stock transactions by U.S. House of Representatives members and also check if the URL 'example.com' is archived in the Wayback Machine?",
        "relevant APIs": [],
        "query_id": 448
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            },
            {
                "category_name": "OpenData",
                "tool_name": "openlibrary",
                "api_name": "search_authors",
                "api_description": "Search for authors using the Open Library Authors API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string for author's name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "docs": [
                        {
                            "name": "str",
                            "key": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me the list of police forces available in the UK and find authors known for writing detective novels similar to Agatha Christie?",
        "relevant APIs": [],
        "query_id": 449
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search for books using the Open Library Search API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort order."
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language preference."
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for pagination."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "docs": [
                        {
                            "key": "str",
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I want to analyze recent stock transaction trends by members of the U.S. House of Representatives while also seeking books about stock trading available through Open Library.",
        "relevant APIs": [],
        "query_id": 450
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        {
                            "identifier": "str",
                            "title": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    "lat",
                    "lng"
                ],
                "optional_parameters": [
                    "date"
                ],
                "method": "GET",
                "template_response": {
                    "crimes": [
                        {
                            "category": "str",
                            "location": {
                                "latitude": "str",
                                "longitude": "str",
                                "street": {
                                    "id": "int",
                                    "name": "str"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "query": "I am interested in finding items from the NASA collection on Archive.org. Could you help me search for these items? Also, what street-level crimes have been reported around latitude 51.5074, longitude -0.1278 in the last month?",
        "relevant APIs": [],
        "query_id": 451
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "OpenData",
                "tool_name": "vehicles",
                "api_name": "decode_vin",
                "api_description": "Decode a VIN to get detailed vehicle information.",
                "required_parameters": [
                    {
                        "name": "vin",
                        "type": "STRING",
                        "description": "Vehicle Identification Number"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "modelyear",
                        "type": "INTEGER",
                        "description": "Year of the Vehicle model"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "Variable": "str",
                            "Value": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide me with a complete list of all transcribed stock transactions and also decode the VIN 3VWB17AJ5HM508219 to provide detailed vehicle information?",
        "relevant APIs": [],
        "query_id": 452
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "modelos": {
                            "type": "array"
                        },
                        "anos": {
                            "type": "array"
                        }
                    }
                },
                "category_name": "OpenData"
            },
            {
                "tool_name": "pmtwentyfive",
                "api_name": "get_project_latest",
                "api_description": "Returns the latest measurement (within 2 hours) of the devices in the specified project.",
                "required_parameters": [
                    {
                        "name": "project",
                        "type": "STRING",
                        "description": "Project name.",
                        "default": "airbox"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string"
                        },
                        "feeds": {
                            "type": "array"
                        }
                    }
                },
                "category_name": "OpenData",
                "optional_parameters": []
            }
        ],
        "query": "What car models are available for Toyota in Brazil? Additionally, I want to see the latest air quality measurements of the 'airbox' project.",
        "relevant APIs": [],
        "query_id": 453
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_player_game_log",
                "api_description": "Retrieve game log data for the specified player, season, and game type.",
                "required_parameters": [
                    {
                        "name": "player_id",
                        "type": "INTEGER",
                        "description": "The ID of the player.",
                        "default": null
                    },
                    {
                        "name": "season",
                        "type": "INTEGER",
                        "description": "The season (e.g., 20212022).",
                        "default": null
                    },
                    {
                        "name": "game_type",
                        "type": "INTEGER",
                        "description": "The game type (e.g., 2 for playoffs, 1 for regular season).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "games": [
                        {
                            "date": "str",
                            "opponent": "str",
                            "points": "int",
                            "assists": "int",
                            "goals": "int"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "Can you provide the game log for a specific NHL player for the current season including both regular season and playoff games? Additionally, list all football competitions available worldwide.",
        "relevant APIs": [],
        "query_id": 454
    },
    {
        "api_list": [
            {
                "tool_name": "citybikes",
                "api_name": "get_networks",
                "api_description": "Retrieve a list of all available bike sharing networks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Sports"
            },
            {
                "tool_name": "nhl",
                "api_name": "get_schedule",
                "api_description": "Get schedule data for a specified date range or current day.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you list all the bike-sharing networks available right now? Also, could you provide the NHL schedule for the dates 9/25/2023-9/28/2023?",
        "query_id": 455
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike-sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "network": {
                        "id": "str",
                        "name": "str",
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "free_bikes": "int",
                                "empty_slots": "int"
                            }
                        ]
                    }
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available football competitions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "int",
                            "name": "str",
                            "area": {
                                "id": "int",
                                "name": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you give me the details of the 'velib' bike-sharing network and a list of all football competitions?",
        "relevant APIs": [],
        "query_id": 456
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "citybikes",
                "api_name": "get_networks",
                "api_description": "Retrieve a list of all available bike-sharing networks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "networks": [
                        {
                            "id": "str",
                            "name": "str",
                            "href": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available football competitions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "int",
                            "name": "str",
                            "area": {
                                "id": "int",
                                "name": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of all the bike-sharing networks worldwide and all available football competitions?",
        "relevant APIs": [],
        "query_id": 457
    },
    {
        "api_list": [
            {
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Sports"
            },
            {
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve NHL standings for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you provide the bike sharing network details for 'velib' and also let me know what the NHL standings were on November 8, 2023?",
        "query_id": 458
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve standings for the specified date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "standings": [
                        {
                            "team_name": "str",
                            "points": "int",
                            "wins": "int",
                            "losses": "int"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "What were the NHL standings on November 8, 2023, and what football competitions are currently available in Europe?",
        "relevant APIs": [],
        "query_id": 459
    },
    {
        "api_list": [
            {
                "tool_name": "federalregister",
                "api_name": "get_agency_data",
                "api_description": "Get basic data about agencies. Optionally filter by agency ID.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "agency_id",
                        "type": "STRING",
                        "description": "ID of the agency.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Government"
            },
            {
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Government"
            }
        ],
        "query": "Where can I find information about the HHS (Department of Health and Human Services) including basic agency data and an overview of its operations?",
        "relevant APIs": [],
        "query_id": 460
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "Year": "str",
                            "Population": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "I would like to know the latest population data of the United States and also get the current FBI Wanted list from the Miami field office.",
        "relevant APIs": [],
        "query_id": 461
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "fetch_single_document",
                "api_description": "Fetch single Federal Register document using the FR document number.",
                "required_parameters": [
                    {
                        "name": "fr_document_number",
                        "type": "STRING",
                        "description": "Federal Register document number."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "document_number": "string",
                    "title": "string",
                    "agency": "array",
                    "abstract": "string",
                    "action": "string",
                    "dates": "string",
                    "page_range": "string",
                    "type": "string",
                    "html_url": "string",
                    "pdf_url": "string"
                }
            }
        ],
        "query": "Can you provide detailed information from the entire election polls database and fetch the document details from the Federal Register document with the number 2021-12345?",
        "relevant APIs": [],
        "query_id": 462
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": [
                        {
                            "document_number": "str",
                            "title": "str",
                            "abstract": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "list_indicators",
                "api_description": "List all indicators available in the World Bank API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "page": "int",
                        "pages": "int",
                        "per_page": "int",
                        "total": "int"
                    },
                    "indicators": [
                        {
                            "id": "str",
                            "name": "str",
                            "source": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you help me find federal register documents related to health policy? Also, I would like to explore the various development indicators available from the World Bank.",
        "relevant APIs": [],
        "query_id": 463
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            }
        ],
        "query": "Can you provide the latest U.S. population data and also give me detailed information about current election polls in Germany?",
        "relevant APIs": [
            "get_population_data",
            "get_database"
        ],
        "query_id": 464
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide details of all wanted individuals from the FBI's Miami field office and also give me basic information about Brazil?",
        "relevant APIs": [],
        "query_id": 465
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_elections",
                "api_description": "Get one page of elections.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "objects": []
                }
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide me with a list of upcoming elections in Canada and the most recent population data for California, USA?",
        "relevant APIs": [],
        "query_id": 466
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Fetches the agency overview information for a specific agency.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "toptier_agency": {
                        "toptier_agency_id": "int",
                        "name": "string",
                        "abbreviation": "string"
                    },
                    "fiscal_year": "int"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "country": {
                        "id": "string",
                        "iso2Code": "string",
                        "name": "string",
                        "region": {
                            "id": "string",
                            "iso2code": "string",
                            "value": "string"
                        }
                    }
                }
            }
        ],
        "query": "Could you provide an overview of a specific government agency in the United States and also give me information about the country using the World Bank API?",
        "relevant APIs": [],
        "query_id": 467
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "What are the details of persons wanted by the FBI from the Miami field office?",
        "relevant APIs": [],
        "query_id": 468
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "document_number": "str",
                            "document_title": "str",
                            "publication_date": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": {
                        "type": "Point",
                        "coordinates": [
                            "float",
                            "float"
                        ]
                    },
                    "representatives": [
                        {
                            "name": "str",
                            "party_name": "str",
                            "elected_office": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find information on recent Federal documents related to climate change? Additionally, I want to know who represents the postal code K1A0B1.",
        "relevant APIs": [],
        "query_id": 469
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm researching the legal implications of water legislation in British Columbia. Can you search for all contents related to the term 'water'? Also, could you get the latest national population statistics for the U.S.?",
        "relevant APIs": [],
        "query_id": 470
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_boundaries",
                "api_description": "Get one page of boundaries, optionally filtering by boundary sets, names, or geospatial queries.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets.",
                        "default": "None"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Name to filter boundaries.",
                        "default": "None"
                    },
                    {
                        "name": "contains",
                        "type": "STRING",
                        "description": "Latitude and longitude for geospatial query.",
                        "default": "None"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need to search for the term 'environmental protection' in British Columbia's legal documents and also find the boundaries of Niagara Falls.",
        "relevant APIs": [],
        "query_id": 471
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "fetch_single_document",
                "api_description": "Fetch single Federal Register document using the FR document number.",
                "required_parameters": [
                    {
                        "name": "fr_document_number",
                        "type": "STRING",
                        "description": "Federal Register document number."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "document_number": "str",
                    "title": "str",
                    "abstract": "str"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "region": "str",
                    "income_level": "str"
                }
            }
        ],
        "query": "I am researching a specific legal document from the Federal Register with the document number 2021-12345. Additionally, I need some basic information about the United States like its region and income level.",
        "relevant APIs": [],
        "query_id": 472
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the database for election polls.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Last_Update": "string"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "results": "array"
                }
            }
        ],
        "query": "When was the last time the election polls database was updated, and can you search for documents related to 'climate change' in the Federal Register?",
        "relevant APIs": [],
        "query_id": 473
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": [
                        {
                            "Award ID": "int",
                            "Recipient Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the population data for California for the year 2020? Additionally, search for government spending awards related to 'infrastructure' projects and list them by recipient name in descending order.",
        "relevant APIs": [],
        "query_id": 474
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_agency_data",
                "api_description": "Get basic data about agencies. Optionally filter by agency ID.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "agency_id",
                        "type": "STRING",
                        "description": "ID of the agency.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "id": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Are there any wanted fugitives listed by the FBI's Los Angeles field office, and can you provide basic details about U.S. government agencies from the Federal Register?",
        "relevant APIs": [],
        "query_id": 475
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide information about the representatives in the postal code K1A 0B1 in Canada? Also, can you retrieve general country data for Canada using its ISO code?",
        "relevant APIs": [],
        "query_id": 476
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": "object"
                }
            }
        ],
        "query": "I want to access the comprehensive election polls database for various polls in Germany. Additionally, can you provide information about representatives and boundaries for the postal code K1A0B1?",
        "relevant APIs": [],
        "query_id": 477
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_pi_documents_by_date",
                "api_description": "Get all the documents that were on public inspection on a given date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in format YYYY-MM-DD."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you tell me about any crimes committed by individuals on the FBI wanted list retrieved on page 3? Also, provide details on public inspection documents available on October 1, 2023.",
        "relevant APIs": [],
        "query_id": 478
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Search for legal documents related to 'water rights' in the British Columbia content library, and also obtain detailed information about Brazil from the World Bank API.",
        "relevant APIs": [],
        "query_id": 479
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "document_number": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of individuals currently on the FBI's most wanted list in New York, and also search for any recent Federal Register documents related to new immigration policies?",
        "relevant APIs": [],
        "query_id": 480
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "search_results": "str"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "Search for all occurrences of the term 'privacy' in the British Columbia laws and then get the list of suspected criminals from the San Francisco FBI field office.",
        "relevant APIs": [],
        "query_id": 481
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": {},
                    "representatives_centroid": {},
                    "boundaries": [],
                    "representatives": []
                }
            }
        ],
        "query": "I want to know the current population of the United States and find representatives for the postal code L5G4L3 in Canada.",
        "relevant APIs": [],
        "query_id": 482
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_content",
                "api_description": "Retrieve a list of documents within a specific aspect of the content library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to retrieve content from.",
                        "default": "complete"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "list_countries",
                "api_description": "List all countries available in the World Bank API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all available documents from the British Columbia law content library and also retrieve the list of all countries available from the World Bank database?",
        "relevant APIs": [],
        "query_id": 483
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_elections",
                "api_description": "Get one page of elections.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "list_income_levels",
                "api_description": "List all income levels available in the World Bank API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What elections are upcoming or have recently occurred? Additionally, provide me with a list of income levels available from the World Bank.",
        "relevant APIs": [],
        "query_id": 484
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_content",
                "api_description": "Retrieve a list of documents within a specific aspect of the content library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to retrieve content from.",
                        "default": "complete"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "XML"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fiscal_year": "integer",
                    "toptier_code": "string",
                    "agency_name": "string"
                }
            }
        ],
        "query": "Can you provide a list of legal documents from the British Columbia law content library and also fetch the details of the U.S. Department of Treasury agency?",
        "relevant APIs": [],
        "query_id": 485
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": "dict",
                    "representatives": "list"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fiscal_year": "int",
                    "agency_data": "dict"
                }
            }
        ],
        "query": "Can you find the representatives for the postal code L5G4L3, and also provide details for the top-level U.S. government agency with code 012?",
        "relevant APIs": [],
        "query_id": 486
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_indicator_data",
                "api_description": "Retrieve indicator data for a specific country and indicator.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "ISO code of the country.",
                        "default": "BR"
                    },
                    {
                        "name": "indicator_code",
                        "type": "STRING",
                        "description": "Code of the indicator.",
                        "default": "NY.GDP.MKTP.CD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date or date range for the data.",
                        "default": ""
                    },
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Find out if there are any wanted individuals in the FBI system and provide the GDP data for Brazil for the year 2022.",
        "relevant APIs": [],
        "query_id": 487
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_awards_summary",
                "api_description": "Fetches agency summary information like number of transactions and award obligations.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total_transaction_amount": "float",
                    "award_counts": {
                        "contract_count": "int",
                        "grant_count": "int"
                    }
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_indicator_data",
                "api_description": "Retrieve indicator data for a specific country and indicator.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "ISO code of the country.",
                        "default": "BR"
                    },
                    {
                        "name": "indicator_code",
                        "type": "STRING",
                        "description": "Code of the indicator.",
                        "default": "NY.GDP.MKTP.CD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date or date range for the data.",
                        "default": ""
                    },
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "indicator_data": [
                        {
                            "country_id": "string",
                            "indicator_id": "string",
                            "date": "string",
                            "value": "float"
                        }
                    ]
                }
            }
        ],
        "query": "I would like to know about the award summary for a specific U.S. agency and also see the GDP data for Brazil from 2010 to 2020 using World Bank's indicators.",
        "relevant APIs": [],
        "query_id": 488
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": "Search results as XML"
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "document_number": "str",
                            "title": "str",
                            "html_url": "str",
                            "pdf_url": "str"
                        }
                    ],
                    "total_pages": "int",
                    "current_page": "int"
                }
            }
        ],
        "query": "Find content related to 'water regulations' in the British Columbia CiviX and also look for documents on the Federal Register related to 'water policy'.",
        "relevant APIs": [],
        "query_id": 489
    },
    {
        "api_list": [
            {
                "tool_name": "federalregister",
                "api_name": "fetch_single_document",
                "api_description": "Fetch a single Federal Register document using the FR document number.",
                "required_parameters": [
                    {
                        "name": "fr_document_number",
                        "type": "STRING",
                        "description": "Federal Register document number."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Government"
            },
            {
                "tool_name": "usaspending",
                "api_name": "get_agency_awards_summary",
                "api_description": "Returns summary information about agency awards.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Government"
            }
        ],
        "query": "I need detailed information on a specific Federal Register document with the document number 2022-09876, and I also want to know about the award summary for the Department of Education. How can I find this information?",
        "relevant APIs": [],
        "query_id": 490
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetches the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "License": "object",
                    "Publisher": "string",
                    "Author": "string",
                    "Last_Update": "string",
                    "Parliaments": "array",
                    "Institutes": "array",
                    "Taskers": "array",
                    "Methods": "array",
                    "Parties": "array",
                    "Surveys": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "pages": "int",
                    "per_page": "int",
                    "total": "int",
                    "countries": [
                        {
                            "id": "str",
                            "name": "str",
                            "region": "str",
                            "incomeLevel": "str",
                            "lendingType": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide information on the latest German election polls? Also, what are some key statistics about Germany according to the World Bank with ISO code 'DEU'?",
        "relevant APIs": [],
        "query_id": 491
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the database for election polls.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Last_Update": "string"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_indicator_data",
                "api_description": "Retrieve indicator data for a specific country and indicator.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "ISO code of the country.",
                        "default": "BR"
                    },
                    {
                        "name": "indicator_code",
                        "type": "STRING",
                        "description": "Code of the indicator.",
                        "default": "NY.GDP.MKTP.CD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date or date range for the data.",
                        "default": ""
                    },
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "page": "int",
                    "pages": "int",
                    "per_page": "int",
                    "total": "int",
                    "indicators": [
                        {
                            "indicator": {
                                "id": "str",
                                "value": "str"
                            },
                            "country": {
                                "id": "str",
                                "value": "str"
                            },
                            "value": "float",
                            "date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the latest update date for the election polls, and what was the GDP of the United States in 2020?",
        "relevant APIs": [],
        "query_id": 492
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "list_countries",
                "api_description": "List all countries available in the World Bank API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you show me a list of all countries available in the World Bank database and also check if there are any wanted individuals in the FBI's records?",
        "relevant APIs": [],
        "query_id": 493
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": "object"
                }
            }
        ],
        "query": "Can you find me any wanted criminals who may be in the Miami field office area and also get the civic representatives for the postal code L5G4L3?",
        "relevant APIs": [],
        "query_id": 494
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_elections",
                "api_description": "Get one page of elections.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "objects": "list",
                    "meta": "dict"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": "list",
                    "page_metadata": "dict"
                }
            }
        ],
        "query": "I need to see the list of upcoming elections. Additionally, could you search for the spending on awards with type code '10' and provide the results sorted by the 'Recipient Name' in descending order?",
        "relevant APIs": [],
        "query_id": 495
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need the legal document with index ID 'statreg' and document ID '01009_01' in XML format from British Columbia's repository. Additionally, can you provide the population data for the state level of the U.S. for the year 2016?",
        "relevant APIs": [],
        "query_id": 496
    },
    {
        "api_list": [
            {
                "tool_name": "federalregister",
                "api_name": "search_documents",
                "api_description": "Search Federal Register documents using query parameters.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for paginated results.",
                        "default": "1"
                    },
                    {
                        "name": "per_page",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    }
                ],
                "method": "GET",
                "category_name": "Government"
            },
            {
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "category_name": "Government"
            }
        ],
        "query": "Can you help me find all documents related to climate change published in the Federal Register? Additionally, I want to search for federal spending awards related to renewable energy.",
        "relevant APIs": [],
        "query_id": 497
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "total": "int",
                    "results": "array"
                }
            }
        ],
        "query": "Can you find the latest wanted individuals by the FBI? Also, I am interested in searching for government awards related to contracts - could you provide details on that?",
        "relevant APIs": [
            "get_wanted_list",
            "search_spending_by_award"
        ],
        "query_id": 498
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "get_agency_data",
                "api_description": "Get basic data about agencies. Optionally filter by agency ID.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "agency_id",
                        "type": "STRING",
                        "description": "ID of the agency.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "id": "str",
                            "name": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_candidates",
                "api_description": "Get one page of candidates.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "objects": [
                        {
                            "name": "str",
                            "district_name": "str",
                            "election_date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want to know about government agencies and any electoral candidates available. Could you provide information on these?",
        "relevant APIs": [],
        "query_id": 499
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "agency_name": "string",
                    "fiscal_year": "integer",
                    "homepage_url": "string",
                    "agency_code": "string"
                }
            }
        ],
        "query": "I want to know if there's any update on the FBI's list of wanted individuals from the Miami field office. Also, can you provide the overview of the agency with the top-tier agency code '012'?",
        "relevant APIs": [
            "get_wanted_list",
            "get_agency_details"
        ],
        "query_id": 500
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "worldbank",
                "api_name": "get_country_data",
                "api_description": "Retrieve information about a specific country using its ISO2 country code.",
                "required_parameters": [
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Two-letter ISO code of the country.",
                        "default": "BR"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format_type",
                        "type": "STRING",
                        "description": "The format in which to receive the data.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "iso2Code": "str",
                    "name": "str",
                    "region": {
                        "id": "str",
                        "value": "str"
                    },
                    "adminregion": {
                        "id": "str",
                        "value": "str"
                    },
                    "incomeLevel": {
                        "id": "str",
                        "value": "str"
                    },
                    "lendingType": {
                        "id": "str",
                        "value": "str"
                    },
                    "capitalCity": "str",
                    "longitude": "str",
                    "latitude": "str"
                }
            }
        ],
        "query": "What is the latest population data for the United States? Also, can you provide information about Brazil using its ISO code 'BR'?",
        "relevant APIs": [],
        "query_id": 501
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "Year": "str",
                            "Population": "int"
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "Can you provide the population data for Florida state and list the most wanted individuals from the FBI's page 3?",
        "relevant APIs": [],
        "query_id": 502
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_content",
                "api_description": "Retrieve a list of documents within a specific aspect of the British Columbia law and bylaw content library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to retrieve content from.",
                        "default": "complete"
                    }
                ],
                "method": "GET",
                "template_response": "Content data in XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_database",
                "api_description": "Fetch the entire election polls database, with comprehensive poll data.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Database": "object",
                    "Parliaments": "array",
                    "Surveys": "array",
                    "Last_Update": "string"
                }
            }
        ],
        "query": "Can you provide me with the full list of documents related to British Columbia's legal content and also get the latest comprehensive election polls database from DAWUM?",
        "relevant APIs": [],
        "query_id": 503
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": "Document content in XML or HTML format"
            },
            {
                "category_name": "Government",
                "tool_name": "federalregister",
                "api_name": "fetch_single_document",
                "api_description": "Fetch single Federal Register document using the FR document number.",
                "required_parameters": [
                    {
                        "name": "fr_document_number",
                        "type": "STRING",
                        "description": "Federal Register document number."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "document_number": "str",
                    "title": "str",
                    "published_at": "str",
                    "branches": [
                        "str"
                    ],
                    "agencies": [
                        "str"
                    ],
                    "abstract": "str",
                    "html_url": "str",
                    "pdf_url": "str"
                }
            }
        ],
        "query": "Can you retrieve the document related to British Columbia's 'statreg' from CiviX and also get the Federal Register document with number '2021-12345'?",
        "relevant APIs": [],
        "query_id": 504
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_content",
                "api_description": "Retrieve a list of documents within a specific aspect of the content library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to retrieve content from.",
                        "default": "complete"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of documents related to British Columbia laws and also fetch the representatives for the area with postal code 'L5G4L3'?",
        "relevant APIs": [],
        "query_id": 505
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Search for occurrences of a query term within an aspect of the British Columbia law and bylaw content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": "Search results data in XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the DAWUM election polls database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "Last update date as a string"
            }
        ],
        "query": "Search the British Columbia legal documents for any mentions of 'environmental policies' and also check when the DAWUM database of election polls was last updated.",
        "relevant APIs": [],
        "query_id": 506
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_elections",
                "api_description": "Get one page of elections.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "objects": "array"
                }
            }
        ],
        "query": "I want to know about recent wanted criminals listed in the FBI records and also to see the upcoming elections in Canada.",
        "relevant APIs": [],
        "query_id": 507
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": "XML"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_award_details",
                "api_description": "Returns details about a specific award.",
                "required_parameters": [
                    {
                        "name": "award_id",
                        "type": "INTEGER",
                        "description": "The ID of the award."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "generated_unique_award_id": "string",
                    "recipient": "object",
                    "total_obligation": "integer"
                }
            }
        ],
        "query": "I'd like to search for content related to 'climate change' in British Columbia's law library and get detailed information about the specific government award with ID 123456.",
        "relevant APIs": [],
        "query_id": 508
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_document",
                "api_description": "Retrieve a document from the repository by its index and document identifier in the British Columbia law content.",
                "required_parameters": [
                    {
                        "name": "index_id",
                        "type": "STRING",
                        "description": "Unique index identifier."
                    },
                    {
                        "name": "document_id",
                        "type": "STRING",
                        "description": "Unique document identifier."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect of the document.",
                        "default": "complete"
                    },
                    {
                        "name": "xml",
                        "type": "BOOLEAN",
                        "description": "Retrieve document in XML format if true.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": "Document content in either HTML or XML format"
            },
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the DAWUM election polls database.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "Last update date as a string"
            }
        ],
        "query": "Retrieve the specific document with index ID 'statreg' and document ID '01009_01' from the British Columbia law repository, and check when the DAWUM database was last updated for any new election poll information.",
        "relevant APIs": [],
        "query_id": 509
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            },
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fiscal_year": "int",
                    "name": "str",
                    "abbreviation": "str",
                    "budget_authority_amount": "float",
                    "obligation": "float",
                    "outlay": "float",
                    "children": []
                }
            }
        ],
        "query": "What is the latest population of the United States? Also, can you provide an overview of the Department of Defense using the top-tier agency code '012'?",
        "relevant APIs": [],
        "query_id": 510
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "get_content",
                "api_description": "Retrieve a list of documents within a specific aspect of the content library.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to retrieve content from.",
                        "default": "complete"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "str"
                }
            },
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "Can you provide a list of all the documents available in the CiviX content library, and also, could you retrieve the current FBI Wanted list?",
        "relevant APIs": [],
        "query_id": 511
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "public_holidays",
                "api_description": "Retrieve public holidays for a given year and country.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "INTEGER",
                        "description": "The year to retrieve public holidays for."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "date": "str",
                        "localName": "str",
                        "name": "str",
                        "countryCode": "str",
                        "fixed": "bool",
                        "global": "bool",
                        "counties": [
                            "str"
                        ],
                        "launchYear": "int",
                        "types": [
                            "str"
                        ]
                    }
                ]
            },
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about the public holidays next year in the United States and also provide me the bank holidays for Scotland?",
        "relevant APIs": [],
        "query_id": 512
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "nagerdate",
                "api_name": "long_weekends",
                "api_description": "Retrieve long weekends for a given year and country.",
                "required_parameters": [
                    {
                        "name": "year",
                        "type": "INTEGER",
                        "description": "The year to check for long weekends."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "The ISO 3166-1 alpha-2 country code."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "startDate": "str",
                        "endDate": "str",
                        "dayCount": "int",
                        "needExtraDay": "bool"
                    }
                ]
            },
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I need information on long weekends in France for the year 2023. Additionally, could you provide the bank holidays for Northern Ireland this year?",
        "relevant APIs": [],
        "query_id": 513
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "gender": "str",
                    "probability": "float",
                    "country_id": "str"
                }
            }
        ],
        "query": "Can you provide an overview of the current status of DigitalOcean's services, including any ongoing incidents or maintenances? Additionally, could you predict the gender based on the name 'Alex'?",
        "relevant APIs": [],
        "query_id": 514
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Are there any unresolved incidents on DigitalOcean's services currently, and what are the possible nationalities for the names 'Emma' and 'Liam'?",
        "relevant APIs": [],
        "query_id": 515
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "gender": "str",
                        "probability": "float",
                        "country_id": "str"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {
                        "url": "str",
                        "screenshot_url": "str"
                    }
                }
            }
        ],
        "query": "Can you predict the genders for the names 'Chris', 'Jordan', and 'Sam'? Also, I need a screenshot of the home page of 'https://example.org'.",
        "relevant APIs": [],
        "query_id": 516
    },
    {
        "api_list": [
            {
                "tool_name": "quickchart",
                "api_name": "generate_chart",
                "api_description": "Generates a chart image from a given Chart.js configuration.",
                "required_parameters": [
                    {
                        "name": "chart_config",
                        "type": "STRING",
                        "description": "The Chart.js configuration object in Javascript or JSON format."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "width",
                        "type": "INTEGER",
                        "description": "Width of image in pixels.",
                        "default": "500"
                    },
                    {
                        "name": "height",
                        "type": "INTEGER",
                        "description": "Height of image in pixels.",
                        "default": "300"
                    },
                    {
                        "name": "device_pixel_ratio",
                        "type": "INTEGER",
                        "description": "Device pixel ratio, 1 for normal resolution, 2 for retina.",
                        "default": "2"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "Background color of the chart.",
                        "default": "transparent"
                    },
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "Chart.js version to use.",
                        "default": "2"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format for the chart.",
                        "default": "png"
                    },
                    {
                        "name": "encoding",
                        "type": "STRING",
                        "description": "Output encoding, url or base64.",
                        "default": "url"
                    },
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "HTTP method to use, 'GET' or 'POST'.",
                        "default": "GET"
                    }
                ],
                "method": "GET or POST",
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "urlhaus",
                "api_name": "query_recent_urls",
                "api_description": "Get a list of recent URLs added to URLhaus.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned (max 1000).",
                        "default": "1000"
                    }
                ],
                "method": "GET",
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you generate a bar chart to display user growth over the years, and find the most recent URLs flagged by URLhaus?",
        "relevant APIs": [],
        "query_id": 517
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you estimate the nationality for a list of names: 'Anna', 'Raj', and 'Wei'? Also, I want to know the various color formats and contrasting text colors for the color 'coral'.",
        "relevant APIs": [],
        "query_id": 518
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "gender": "str",
                    "probability": "float",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "What is the predicted gender for the name 'Alex' and can you fetch the favicon for the domain 'example.com'?",
        "relevant APIs": [],
        "query_id": 519
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "gender": "str",
                    "probability": "float",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {
                        "title": "str",
                        "description": "str",
                        "url": "str",
                        "image": "str",
                        "logo": "str"
                    }
                }
            }
        ],
        "query": "I want to know the gender prediction for the name 'Alex', and I would also like to retrieve metadata from the website 'https://example.com'.",
        "relevant APIs": [],
        "query_id": 520
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_upcoming_maintenances",
                "api_description": "Get a list of any upcoming scheduled maintenances for DigitalOcean.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "urlhaus",
                "api_name": "query_payload_info",
                "api_description": "Get information about a specific payload in URLhaus.",
                "method": "POST",
                "required_parameters": [
                    {
                        "name": "md5_hash",
                        "type": "STRING",
                        "description": "The MD5 hash of the payload."
                    },
                    {
                        "name": "sha256_hash",
                        "type": "STRING",
                        "description": "The SHA256 hash of the payload."
                    }
                ],
                "category_name": "DeveloperTools",
                "optional_parameters": []
            }
        ],
        "query": "Please provide details on any upcoming maintenances for DigitalOcean, and also retrieve information about a payload with this SHA256 hash: 254ca6a7a7ef7f17d9884c4a86f88b5d5fd8fe5341c0996eaaf1d4bcb3b2337b.",
        "relevant APIs": [],
        "query_id": 521
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the DigitalOcean status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": "string or JSON depending on the format"
            }
        ],
        "query": "What is the current status of DigitalOcean services, and can you provide me with a shortened link to their status page?",
        "relevant APIs": [],
        "query_id": 522
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "What is the current status of DigitalOcean's services, and can you provide the color information for aquamarine, including its complementary and grayscale versions?",
        "relevant APIs": [],
        "query_id": 523
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you estimate the age of someone named 'Sarah' from France, and also retrieve the metadata of her favorite website 'www.example.com'?",
        "relevant APIs": [],
        "query_id": 524
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I need a screenshot of the YouTube homepage, 'youtube.com'. Also, can you predict the nationalities for the names 'emma' and 'liam'?",
        "relevant APIs": [],
        "query_id": 525
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents on DigitalOcean.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a provided URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": "string or JSON depending on the format"
            }
        ],
        "query": "Can you tell me what unresolved incidents are currently affecting DigitalOcean, and also give me a shortened URL to an incident report I've hosted online?",
        "relevant APIs": [],
        "query_id": 526
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_upcoming_maintenances",
                "api_description": "Retrieve a list of any upcoming scheduled maintenances on DigitalOcean.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "scheduled_maintenances": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "quickchart",
                "api_name": "generate_chart",
                "api_description": "Create an image of a chart using a specific Chart.js configuration.",
                "required_parameters": [
                    {
                        "name": "chart_config",
                        "type": "STRING",
                        "description": "The Chart.js configuration object in Javascript or JSON format."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "width",
                        "type": "INTEGER",
                        "description": "Width of image in pixels.",
                        "default": "500"
                    },
                    {
                        "name": "height",
                        "type": "INTEGER",
                        "description": "Height of image in pixels.",
                        "default": "300"
                    },
                    {
                        "name": "device_pixel_ratio",
                        "type": "INTEGER",
                        "description": "Device pixel ratio, 1 for normal resolution, 2 for retina.",
                        "default": "2"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "Background color of the chart.",
                        "default": "transparent"
                    },
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "Chart.js version to use.",
                        "default": "2"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format for the chart.",
                        "default": "png"
                    },
                    {
                        "name": "encoding",
                        "type": "STRING",
                        "description": "Output encoding, url or base64.",
                        "default": "url"
                    },
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "HTTP method to use, 'GET' or 'POST'.",
                        "default": "GET"
                    }
                ],
                "method": "GET or POST",
                "template_response": "The chart image in bytes or as a base64 string."
            }
        ],
        "query": "I want to see a timeline of all upcoming maintenances for DigitalOcean. Can you illustrate this information with a line chart showing dates and counts of maintenances?",
        "relevant APIs": [],
        "query_id": 527
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Are there any unresolved incidents in DigitalOcean, and could you tell me about the color information for the RGB code 85,102,119?",
        "relevant APIs": [],
        "query_id": 528
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "gender": "str",
                        "probability": "float",
                        "country_id": "str"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "Predict the gender for names 'Sam', 'Jamie', and 'Jordan' with localization for 'US', and retrieve a 128x128 favicon for 'openai.com'.",
        "relevant APIs": [],
        "query_id": 529
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "ip_geolocation",
                "api_description": "Get geolocation information for a given IP address.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address to lookup.",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Translation language in ISO639-1, applicable for certain plans.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "country_code": "str",
                    "country_name": "str",
                    "region_name": "str",
                    "city_name": "str",
                    "latitude": "float",
                    "longitude": "float",
                    "zip_code": "str",
                    "time_zone": "str",
                    "asn": "str",
                    "is_proxy": "bool"
                }
            }
        ],
        "query": "I am trying to determine the status of DigitalOcean services and also need to find out the geolocation details for the IP address 8.8.8.8.",
        "relevant APIs": [],
        "query_id": 530
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Fetch a list of any unresolved incidents currently affecting the DigitalOcean services.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "quickchart",
                "api_name": "generate_chart",
                "api_description": "Generate a chart image based on a given Chart.js configuration.",
                "required_parameters": [
                    {
                        "name": "chart_config",
                        "type": "STRING",
                        "description": "The Chart.js configuration object in Javascript or JSON format."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "width",
                        "type": "INTEGER",
                        "description": "Width of image in pixels.",
                        "default": "500"
                    },
                    {
                        "name": "height",
                        "type": "INTEGER",
                        "description": "Height of image in pixels.",
                        "default": "300"
                    },
                    {
                        "name": "device_pixel_ratio",
                        "type": "INTEGER",
                        "description": "Device pixel ratio, 1 for normal resolution, 2 for retina.",
                        "default": "2"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "Background color of the chart.",
                        "default": "transparent"
                    },
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "Chart.js version to use.",
                        "default": "2"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format for the chart.",
                        "default": "png"
                    },
                    {
                        "name": "encoding",
                        "type": "STRING",
                        "description": "Output encoding, url or base64.",
                        "default": "url"
                    },
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "HTTP method to use, 'GET' or 'POST'.",
                        "default": "GET"
                    }
                ],
                "method": "GET or POST",
                "template_response": "Image data, typically in bytes or as a base64 string."
            }
        ],
        "query": "Can you check if there are any unresolved issues affecting DigitalOcean's services and summarize them in a pie chart showing the status of each?",
        "relevant APIs": [],
        "query_id": 531
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents on DigitalOcean.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "urlhaus",
                "api_name": "query_host_info",
                "api_description": "Retrieve information about a specific host from URLhaus.",
                "method": "POST",
                "required_parameters": [
                    {
                        "name": "host",
                        "type": "STRING",
                        "description": "The host to query (IPv4 address, hostname, or domain name)."
                    }
                ],
                "category_name": "DeveloperTools",
                "optional_parameters": []
            }
        ],
        "query": "Can you identify any unresolved incidents for DigitalOcean and also provide information about the host example.com from URLhaus?",
        "relevant APIs": [],
        "query_id": 532
    },
    {
        "api_list": [
            {
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "ipify",
                "api_name": "get_public_ip_v4",
                "api_description": "Get the public IPv4 address in JSON, JSONP, or text format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('json', 'jsonp', 'text').",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "DeveloperTools"
            }
        ],
        "query": "What is the predicted gender of the name 'Alex' in the US, and what is my current public IPv4 address?",
        "relevant APIs": [],
        "query_id": 533
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "What is the estimated age of someone named John in the US and what detailed information can you provide about the user agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36'?",
        "relevant APIs": [],
        "query_id": 534
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "string",
                    "gender": "string",
                    "probability": "number",
                    "country_id": "string"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "ip_geolocation",
                "api_description": "Get geolocation information for a given IP address.",
                "optional_parameters": [
                    {
                        "name": "ip",
                        "type": "STRING",
                        "description": "IP address to lookup.",
                        "default": null
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Translation language in ISO639-1, applicable for certain plans.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string",
                    "country_code": "string",
                    "country_name": "string",
                    "region_name": "string",
                    "city_name": "string",
                    "latitude": "float",
                    "longitude": "float",
                    "zip_code": "string",
                    "time_zone": "string",
                    "asn": "string",
                    "is_proxy": "bool"
                },
                "required_parameters": []
            }
        ],
        "query": "I have a list of names: 'Chris', 'Jordan', 'Taylor'. Can you tell me their likely genders without specifying a country? Additionally, please provide the geolocation for IP address '8.8.8.8'.",
        "relevant APIs": [],
        "query_id": 535
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names using the Genderize API, with optional localization by country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "name": "str",
                        "gender": "str",
                        "probability": "float",
                        "count": "int",
                        "country_id": "str"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "shorturl": "string"
                }
            }
        ],
        "query": "I have a list of names: [Jane, Dylan, Sam] and I want to find out the predicted genders as per Canadian data. Additionally, can you provide me with a short link for the webpage that allows new users to sign up?",
        "relevant APIs": [],
        "query_id": 536
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents in DigitalOcean.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {}
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Are there any unresolved issues with DigitalOcean services, and could you provide a screenshot of GitHub's homepage?",
        "relevant APIs": [],
        "query_id": 537
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "I want to check if DigitalOcean has any unresolved incidents and also get the favicon of google.com in size 128.",
        "relevant APIs": [],
        "query_id": 538
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the DigitalOcean status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                },
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "success",
                    "data": {}
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "What is the current status of DigitalOcean services, and can you get metadata for the homepage of GitHub?",
        "relevant APIs": [],
        "query_id": 539
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name using the Genderize API, with optional localization by country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "gender": "str",
                    "probability": "float",
                    "count": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "shorturl": "string"
                }
            }
        ],
        "query": "Can you tell me the likely gender of the name 'Alex' based on data from the US? Also, I have a really long link to a blog post about gender studies. Can you shorten it using a URL shortener?",
        "relevant APIs": [],
        "query_id": 540
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "name": "str",
                        "gender": "str",
                        "probability": "float",
                        "count": "int",
                        "country_id": "str"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "quickchart",
                "api_name": "generate_chart",
                "api_description": "Generates a chart image from a given Chart.js configuration.",
                "required_parameters": [
                    {
                        "name": "chart_config",
                        "type": "STRING",
                        "description": "The Chart.js configuration object in Javascript or JSON format."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "width",
                        "type": "INTEGER",
                        "description": "Width of image in pixels.",
                        "default": "500"
                    },
                    {
                        "name": "height",
                        "type": "INTEGER",
                        "description": "Height of image in pixels.",
                        "default": "300"
                    },
                    {
                        "name": "device_pixel_ratio",
                        "type": "INTEGER",
                        "description": "Device pixel ratio, 1 for normal resolution, 2 for retina.",
                        "default": "2"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "Background color of the chart.",
                        "default": "transparent"
                    },
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "Chart.js version to use.",
                        "default": "2"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format for the chart.",
                        "default": "png"
                    },
                    {
                        "name": "encoding",
                        "type": "STRING",
                        "description": "Output encoding, url or base64.",
                        "default": "url"
                    },
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "HTTP method to use, 'GET' or 'POST'.",
                        "default": "GET"
                    }
                ],
                "method": "GET or POST",
                "template_response": {
                    "binary_image_data": "bytes"
                }
            }
        ],
        "query": "I have a list of names: 'Alice', 'Bob', 'Charlie'. Can you determine their gender probabilities and create a bar chart comparing them?",
        "relevant APIs": [],
        "query_id": 541
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary",
                    "description": "Favicon data in PNG format."
                }
            }
        ],
        "query": "Can you provide me with a summary of the current DigitalOcean status and also retrieve the favicon for the dev.to domain?",
        "relevant APIs": [],
        "query_id": 542
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "name": "str",
                        "gender": "str",
                        "probability": "float",
                        "count": "int",
                        "country_id": "str"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "name": "str",
                        "country": [
                            {
                                "country_id": "str",
                                "probability": "float"
                            }
                        ]
                    }
                ],
                "optional_parameters": []
            }
        ],
        "query": "Identify the genders and possible nationalities for the names 'Michael', 'Samantha', and 'Jos\u00e9'.",
        "relevant APIs": [
            "check_genders",
            "predict_nationality"
        ],
        "query_id": 543
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you determine the genders of the names 'Taylor' and 'Jordan', and provide details on the color 'indigo'?",
        "relevant APIs": [],
        "query_id": 544
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you provide an overview of the current status, incidents, and scheduled maintenance of DigitalOcean services and predict the possible nationalities for the name 'Alex'?",
        "relevant APIs": [],
        "query_id": 545
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide me with the metadata information for GitHub's homepage 'https://github.com'? Also, can you tell me the possible nationalities associated with the name 'johnson'?",
        "relevant APIs": [],
        "query_id": 546
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "What is the predicted gender of the name 'Alex', and can you also provide information about the complementary and grayscale version of the color 'skyblue'?",
        "relevant APIs": [],
        "query_id": 547
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the status page, including component statuses and incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "status": {
                        "indicator": "str",
                        "description": "str"
                    },
                    "components": [
                        {
                            "id": "str",
                            "name": "str",
                            "status": "str"
                        }
                    ],
                    "incidents": [],
                    "scheduled_maintenances": []
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "ipify",
                "api_name": "get_public_ip",
                "api_description": "Get the public IP address (IPv4/IPv6) in JSON, JSONP, or text format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('json', 'jsonp', 'text').",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string"
                }
            }
        ],
        "query": "Is there any incident reported currently on DigitalOcean services? And also, what is my current public IP address?",
        "relevant APIs": [],
        "query_id": 548
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age",
                "api_description": "Estimate the age of a person based on their first name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The first name to estimate age for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "str",
                    "age": "int"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary"
                }
            }
        ],
        "query": "How old is someone likely to be if their first name is Michael, and can you show me the favicon for dev.to?",
        "relevant APIs": [],
        "query_id": 549
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "gender": "str",
                    "probability": "float",
                    "count": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you determine the gender and potential nationalities for the name 'Alex'?",
        "relevant APIs": [
            "check_gender",
            "predict_nationality"
        ],
        "query_id": 550
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get the requested color, its complementary, and its grayscale in different formats and the black or white text corresponding to each color according to its brightness.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "urlhaus",
                "api_name": "query_url_info",
                "api_description": "Retrieve information about a specific URL or URL ID.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to query."
                    },
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the URL to query."
                    }
                ],
                "method": "POST",
                "template_response": {
                    "query_status": "str",
                    "data": {
                        "url": "str",
                        "host": "str",
                        "date_added": "str",
                        "threat": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Could you provide me details about the color 'teal' and also check if the URL 'http://example.com/infected' is listed on URLhaus?",
        "relevant APIs": [
            "get_color_info",
            "query_url_info"
        ],
        "query_id": 551
    },
    {
        "api_list": [
            {
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    "url"
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "I have a list of names: ['Emma', 'Olivia', 'Liam']. Can you estimate their ages while also taking a screenshot of the website 'www.news.com'?",
        "relevant APIs": [],
        "query_id": 552
    },
    {
        "api_list": [
            {
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "ipify",
                "api_name": "get_public_ip",
                "api_description": "Get the public IP address (IPv4/IPv6) in JSON, JSONP, or text format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('json', 'jsonp', 'text').",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you determine the genders of the names 'Taylor', 'Jordan', and 'Alex' localized in Canada? Additionally, can you tell me my current public IP address?",
        "relevant APIs": [],
        "query_id": 553
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "googlefavicons",
                "api_name": "get_favicon",
                "api_description": "Retrieve the favicon for a specified domain. Optionally, specify the size of the favicon image.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "The domain to retrieve the favicon from.",
                        "default": "dev.to"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sz",
                        "type": "INTEGER",
                        "description": "A size hint for the favicon (e.g., 128, 256). Defaults to None, which returns the default size (usually 16x16).",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "binary"
                }
            }
        ],
        "query": "I have a list of names: Ethan, Olivia, and Sophia. What are their estimated ages? Also, can you provide the favicon for the website 'example.com' in size 128x128?",
        "relevant APIs": [],
        "query_id": 554
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "agify",
                "api_name": "estimate_age_batch",
                "api_description": "Estimate the age for a batch of names.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "ARRAY",
                        "description": "A list of first names (up to 10) to estimate ages for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "The country code to improve estimation accuracy across all names."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "age": "int"
                    }
                ]
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "Can you estimate the ages of Emily, Michael, and Emma in the UK? Also, can you provide the detailed browser and device information for the user agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'?",
        "relevant APIs": [],
        "query_id": 555
    },
    {
        "api_list": [
            {
                "tool_name": "quickchart",
                "api_name": "generate_chart",
                "api_description": "Generates a chart image from a given Chart.js configuration.",
                "required_parameters": [
                    {
                        "name": "chart_config",
                        "type": "STRING",
                        "description": "The Chart.js configuration object in Javascript or JSON format."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "width",
                        "type": "INTEGER",
                        "description": "Width of image in pixels.",
                        "default": "500"
                    },
                    {
                        "name": "height",
                        "type": "INTEGER",
                        "description": "Height of image in pixels.",
                        "default": "300"
                    },
                    {
                        "name": "device_pixel_ratio",
                        "type": "INTEGER",
                        "description": "Device pixel ratio, 1 for normal resolution, 2 for retina.",
                        "default": "2"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "Background color of the chart.",
                        "default": "transparent"
                    },
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "Chart.js version to use.",
                        "default": "2"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format for the chart.",
                        "default": "png"
                    },
                    {
                        "name": "encoding",
                        "type": "STRING",
                        "description": "Output encoding, url or base64.",
                        "default": "url"
                    },
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "HTTP method to use, 'GET' or 'POST'.",
                        "default": "GET"
                    }
                ],
                "method": "GET or POST",
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "urlhaus",
                "api_name": "query_host_info",
                "api_description": "Get information about a specific host.",
                "required_parameters": [
                    {
                        "name": "host",
                        "type": "STRING",
                        "description": "The host to query (IPv4 address, hostname, or domain name)."
                    }
                ],
                "method": "POST",
                "category_name": "DeveloperTools",
                "optional_parameters": []
            }
        ],
        "query": "I need a pie chart to show traffic distribution among several regions, and I also need the host info for a suspicious domain.",
        "relevant APIs": [],
        "query_id": 556
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get the requested color, its complementary, and its grayscale in different formats and the black or white text corresponding to each color according to its brightness.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "urlhaus",
                "api_name": "query_recent_urls",
                "api_description": "Retrieve a list of recent URLs added to URLhaus.",
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned (max 1000).",
                        "default": "1000"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "query_status": "str",
                    "urls": [
                        {
                            "url": "str",
                            "date_added": "str",
                            "threat": "str"
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "I am working on a graphic project and need the color details for 'forestgreen'. Additionally, can you list the most recent 5 URLs flagged by URLhaus?",
        "relevant APIs": [
            "get_color_info",
            "query_recent_urls"
        ],
        "query_id": 557
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "country": "str",
                    "http": "str",
                    "tls": "str",
                    "warp": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "isgd",
                "api_name": "shorten_url",
                "api_description": "Shortens a given URL using the is.gd service.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL you want to shorten."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('web', 'simple', 'xml', 'json').",
                        "default": "simple"
                    },
                    {
                        "name": "shorturl",
                        "type": "STRING",
                        "description": "Custom shortened URL you would like to use (5 to 30 characters)."
                    },
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Used only with format 'json' to specify a callback function."
                    },
                    {
                        "name": "logstats",
                        "type": "INTEGER",
                        "description": "If 1, enables logging of detailed statistics."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "shorturl": "string"
                }
            }
        ],
        "query": "Can you tell me my current public IP address and also provide a shortened URL for a website I frequently use, 'https://www.example.com'?",
        "relevant APIs": [],
        "query_id": 558
    },
    {
        "api_list": [
            {
                "tool_name": "digitaloceanstatus",
                "api_name": "get_summary",
                "api_description": "Get a summary of the DigitalOcean status page, including component statuses and incidents.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "category_name": "DeveloperTools"
            },
            {
                "tool_name": "urlhaus",
                "api_name": "query_recent_urls",
                "api_description": "Retrieve a list of recent URLs added to URLhaus.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned (max 1000).",
                        "default": "1000"
                    }
                ],
                "category_name": "DeveloperTools"
            }
        ],
        "query": "I want to check the current status of DigitalOcean services and also fetch the most recent potentially malicious URLs added to URLhaus.",
        "relevant APIs": [],
        "query_id": 559
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you tell me if there are any unresolved incidents with DigitalOcean and also fetch the WHOIS data for the domain example.com?",
        "relevant APIs": [],
        "query_id": 560
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str",
                    "http": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "str",
                    "create_date": "str",
                    "update_date": "str",
                    "expire_date": "str",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Can you retrieve trace information from Cloudflare to see if it shows my IP as part of a known corporate network, and also check the WHOIS data for the domain 'corporate.com' to confirm its details?",
        "relevant APIs": [],
        "query_id": 561
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "name": "string",
                    "gender": "string",
                    "probability": "number",
                    "country_id": "string"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "iptwolocation",
                "api_name": "domain_whois",
                "api_description": "Get WHOIS data for a given domain name.",
                "required_parameters": [
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain name for the WHOIS lookup."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format, valid values: json | xml.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "domain": "string",
                    "create_date": "string",
                    "update_date": "string",
                    "expire_date": "string",
                    "domain_age": "int"
                }
            }
        ],
        "query": "Could you predict the gender of the name 'Alex' in the United States? Also, I need to find the WHOIS information for the domain 'example.com'.",
        "relevant APIs": [],
        "query_id": 562
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_upcoming_maintenances",
                "api_description": "Get a list of any upcoming scheduled maintenances.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "scheduled_maintenances": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "ipify",
                "api_name": "get_public_ip_v4",
                "api_description": "Get the public IPv4 address in JSON, JSONP, or text format.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the response ('json', 'jsonp', 'text').",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "string"
                }
            }
        ],
        "query": "Are there any upcoming maintenances scheduled for DigitalOcean services? Also, what is my IPv4 address?",
        "relevant APIs": [],
        "query_id": 563
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "digitaloceanstatus",
                "api_name": "get_unresolved_incidents",
                "api_description": "Get a list of any unresolved incidents.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "incidents": [
                        {
                            "id": "str",
                            "status": "str",
                            "impact": "str",
                            "name": "str",
                            "created_at": "str",
                            "updated_at": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_genders",
                "api_description": "Predicts the gender of multiple names in one request, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "names",
                        "type": "LIST OF STRINGS",
                        "description": "The names to predict genders for, maximum 10 names."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "count": "int",
                        "name": "str",
                        "gender": "str",
                        "probability": "float",
                        "country_id": "str"
                    }
                ]
            }
        ],
        "query": "What unresolved incidents are currently affecting DigitalOcean services? Also, can you determine the genders of the names 'Jordan', 'Taylor', and 'Morgan' without specifying any country?",
        "relevant APIs": [],
        "query_id": 564
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "genderize",
                "api_name": "check_gender",
                "api_description": "Predicts the gender of a single name, optionally scoped to a specific country.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The name to predict gender for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "country_id",
                        "type": "STRING",
                        "description": "Country code for localization following ISO 3166-1 alpha-2."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "gender": "str",
                    "probability": "float",
                    "count": "int",
                    "country_id": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "quickchart",
                "api_name": "generate_chart",
                "api_description": "Generates a chart image from a given Chart.js configuration.",
                "required_parameters": [
                    {
                        "name": "chart_config",
                        "type": "STRING",
                        "description": "The Chart.js configuration object in Javascript or JSON format."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "width",
                        "type": "INTEGER",
                        "description": "Width of image in pixels.",
                        "default": "500"
                    },
                    {
                        "name": "height",
                        "type": "INTEGER",
                        "description": "Height of image in pixels.",
                        "default": "300"
                    },
                    {
                        "name": "device_pixel_ratio",
                        "type": "INTEGER",
                        "description": "Device pixel ratio, 1 for normal resolution, 2 for retina.",
                        "default": "2"
                    },
                    {
                        "name": "background_color",
                        "type": "STRING",
                        "description": "Background color of the chart.",
                        "default": "transparent"
                    },
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "Chart.js version to use.",
                        "default": "2"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format for the chart.",
                        "default": "png"
                    },
                    {
                        "name": "encoding",
                        "type": "STRING",
                        "description": "Output encoding, url or base64.",
                        "default": "url"
                    },
                    {
                        "name": "method",
                        "type": "STRING",
                        "description": "HTTP method to use, 'GET' or 'POST'.",
                        "default": "GET"
                    }
                ],
                "method": "GET or POST",
                "template_response": {
                    "binary_image_data": "bytes"
                }
            }
        ],
        "query": "Can you predict the gender of the name 'Alex' and generate a pie chart showing the distribution of male and female predictions across different countries?",
        "relevant APIs": [],
        "query_id": 565
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str"
                }
            },
            {
                "category_name": "DeveloperTools",
                "tool_name": "nationalize",
                "api_name": "predict_nationality",
                "api_description": "Estimates the nationality of a person based on the name.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING or LIST of STRINGS",
                        "description": "The name or list of names to predict the nationality for.",
                        "default": "johnson"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "name": "str",
                    "country": [
                        {
                            "country_id": "str",
                            "probability": "float"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me the probable nationality of the name 'Alice' and also provide detailed trace information about my current internet connection, including IP address and country?",
        "relevant APIs": [],
        "query_id": 566
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "Can you find vegan and cruelty-free makeup products with a rating above 4.0? Also, could you get me recent adverse event reports for drugs, limiting the results to 5?",
        "relevant APIs": [],
        "query_id": 567
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Can you provide detailed information about a specific healthcare article titled 'accessibility' and also show recent drug adverse event reports using 5 records?",
        "relevant APIs": [],
        "query_id": 568
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "basic": {
                                "name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {
                            "id": "string",
                            "companynumb": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find any healthcare providers with the first name 'John' and also provide some recent drug adverse event reports?",
        "relevant APIs": [],
        "query_id": 569
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str",
                    "tag_list": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you find me makeup products that are vegan and cruelty-free under $25? Also, I need the contact details of healthcare providers named 'Smith' located in California.",
        "relevant APIs": [],
        "query_id": 570
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "string",
                    "url": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by brand, product type, category, tags, price, and ratings.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "int",
                        "brand": "str",
                        "name": "str",
                        "price": "str",
                        "price_sign": "str",
                        "currency": "str",
                        "image_link": "str",
                        "product_link": "str",
                        "website_link": "str",
                        "description": "str",
                        "rating": "float",
                        "category": "str",
                        "product_type": "str",
                        "tag_list": [
                            "str"
                        ],
                        "created_at": "str",
                        "updated_at": "str",
                        "product_api_url": "str",
                        "api_featured_image": "str",
                        "product_colors": [
                            "str"
                        ]
                    }
                ]
            }
        ],
        "query": "Can you provide details on a specific healthcare-related topic, such as accessibility, from HealthCare.gov, and also help me find vegan and cruelty-free makeup products?",
        "relevant APIs": [],
        "query_id": 571
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_collection",
                "api_description": "Retrieve a list of post objects by content type.",
                "required_parameters": [
                    {
                        "name": "content_type",
                        "type": "STRING",
                        "description": "The type of content like 'articles', 'blog', 'questions', etc."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "content-type": "array"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Find available glossary terms from HealthCare.gov and provide information on the recent 10 medical device adverse event reports.",
        "relevant APIs": [],
        "query_id": 572
    },
    {
        "api_list": [
            {
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "url": "string",
                    "title": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                },
                "category_name": "Health",
                "optional_parameters": []
            },
            {
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "enumeration_type": "string",
                            "basic": {
                                "name": "string",
                                "other_names": [
                                    "string"
                                ],
                                "active": "boolean"
                            },
                            "addresses": [
                                {
                                    "address_1": "string",
                                    "city": "string",
                                    "state": "string",
                                    "postal_code": "string",
                                    "country_code": "string"
                                }
                            ],
                            "taxonomies": [
                                {
                                    "taxonomy_code": "string",
                                    "taxonomy_description": "string"
                                }
                            ]
                        }
                    ]
                },
                "category_name": "Health",
                "required_parameters": []
            }
        ],
        "query": "Can you retrieve the detailed article content about 'health insurance basics' on HealthCare.gov and find healthcare providers with the last name 'Smith' in New York using the NPPES API?",
        "relevant APIs": [],
        "query_id": 573
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "nppes",
                "api_name": "search_npi",
                "api_description": "Endpoint to search the NPI registry using various search criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "The NPI Number, a unique 10-digit identifier."
                    },
                    {
                        "name": "enumeration_type",
                        "type": "STRING",
                        "description": "Type of NPI (Individual/Organizational)."
                    },
                    {
                        "name": "taxonomy_description",
                        "type": "STRING",
                        "description": "Description related to provider's taxonomy."
                    },
                    {
                        "name": "name_purpose",
                        "type": "STRING",
                        "description": "Specifies if the name pertains to AO or Provider."
                    },
                    {
                        "name": "first_name",
                        "type": "STRING",
                        "description": "First name of the provider (Individual providers)."
                    },
                    {
                        "name": "use_first_name_alias",
                        "type": "BOOLEAN",
                        "description": "If True, includes similar First Names.",
                        "default": "True"
                    },
                    {
                        "name": "last_name",
                        "type": "STRING",
                        "description": "Last name of the provider (Individual providers)."
                    },
                    {
                        "name": "organization_name",
                        "type": "STRING",
                        "description": "Organization name (Organizational providers)."
                    },
                    {
                        "name": "address_purpose",
                        "type": "STRING",
                        "description": "Address type filter (LOCATION/MAILING/PRIMARY/SECONDARY)."
                    },
                    {
                        "name": "city",
                        "type": "STRING",
                        "description": "City associated with the provider's address."
                    },
                    {
                        "name": "state",
                        "type": "STRING",
                        "description": "State abbreviation for the provider's address."
                    },
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "Postal code for the provider's address."
                    },
                    {
                        "name": "country_code",
                        "type": "STRING",
                        "description": "Country associated with the provider's address."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "pretty",
                        "type": "BOOLEAN",
                        "description": "Display in readable format.",
                        "default": "False"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "Results": [
                        {
                            "number": "string",
                            "basic": {
                                "name": "string"
                            }
                        }
                    ]
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {
                            "mdr_report_key": "string",
                            "report_number": "string"
                        }
                    ]
                }
            }
        ],
        "query": "I need a list of healthcare organizations named 'Health Corp' in California and some recent device adverse event reports.",
        "relevant APIs": [],
        "query_id": 574
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "makeup",
                "api_name": "search_makeup_products",
                "api_description": "Search for makeup products and filter them by various criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "brand",
                        "type": "STRING",
                        "description": "Brand of the product."
                    },
                    {
                        "name": "product_type",
                        "type": "STRING",
                        "description": "Type of makeup product."
                    },
                    {
                        "name": "product_category",
                        "type": "STRING",
                        "description": "Category of the makeup product."
                    },
                    {
                        "name": "product_tags",
                        "type": "LIST of STRINGS",
                        "description": "Tags related to the product."
                    },
                    {
                        "name": "price_greater_than",
                        "type": "FLOAT",
                        "description": "Products with price greater than this value."
                    },
                    {
                        "name": "price_less_than",
                        "type": "FLOAT",
                        "description": "Products with price less than this value."
                    },
                    {
                        "name": "rating_greater_than",
                        "type": "FLOAT",
                        "description": "Products with rating greater than this value."
                    },
                    {
                        "name": "rating_less_than",
                        "type": "FLOAT",
                        "description": "Products with rating less than this value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "brand": "str",
                    "name": "str",
                    "price": "str",
                    "rating": "float",
                    "product_type": "str"
                }
            },
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_udi",
                "api_description": "Retrieve device unique device identifier (UDI) information.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": {},
                    "results": [
                        {}
                    ]
                }
            }
        ],
        "query": "What are some lipsticks available from the brand 'Maybelline'? Additionally, can you provide details on some medical devices using FDA's unique device identifiers (UDIs), limiting to 3 records?",
        "relevant APIs": [],
        "query_id": 575
    }
]