[
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_supported_dexes",
                "api_description": "Get list of supported dexes on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page of results to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "name": "string"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Find the top markets and exchanges for Ethereum and also list all decentralized exchanges supported on the Binance Smart Chain network.",
        "relevant APIs": [],
        "query_id": 1
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieves all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "string"
                    ]
                }
            }
        ],
        "query": "Can you provide a list of all available trading symbols and also give me the details of a bank using IFSC code 'YESB0DNB002'?",
        "relevant APIs": [],
        "query_id": 2
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "currency": "string",
                    "rates": {
                        "string": "string"
                    }
                }
            }
        ],
        "query": "What are the current exchange rates for USD and can you list the top cryptocurrency markets?",
        "relevant APIs": [],
        "query_id": 3
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_asset_info",
                "api_description": "Get information about the assets that are available for deposit, withdrawal, trading, and earn.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "asset",
                        "type": "STRING",
                        "description": "Comma delimited list of assets to get info on (optional, default all available assets)"
                    },
                    {
                        "name": "aclass",
                        "type": "STRING",
                        "description": "Asset class (optional, default: currency)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "object"
                }
            }
        ],
        "query": "Can you find venues accepting cryptocurrency near New York City and list available trading assets on Kraken?",
        "relevant APIs": [],
        "query_id": 4
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    },
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "Comma-separated list of token addresses."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "symbol": "str",
                            "name": "str",
                            "price_usd": "float"
                        }
                    ]
                }
            }
        ],
        "query": "Can you check the current USD price of the Ethereum token on its network? Additionally, I'd like to find the details of a bank branch using its IFSC code, say YESB0DNB002.",
        "relevant APIs": [],
        "query_id": 5
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_assets",
                "api_description": "A list of all assets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of assets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "rank": "str",
                            "symbol": "str",
                            "name": "str",
                            "supply": "str",
                            "maxSupply": "str",
                            "marketCapUsd": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "changePercent24Hr": "str",
                            "vwap24Hr": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of known fiat currencies and also list some of the top cryptocurrency assets?",
        "relevant APIs": [],
        "query_id": 6
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": "string",
                    "base_code": "string",
                    "rates": {
                        "type": "object",
                        "additionalProperties": "number"
                    }
                }
            }
        ],
        "query": "Can you find some shopping venues that accept cryptocurrency globally, and also provide me the latest exchange rates for USD?",
        "relevant APIs": [],
        "query_id": 7
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What are all the available trading symbols on Gemini, and what is the current market ticker information for BTC-USDT on OKX?",
        "relevant APIs": [],
        "query_id": 8
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            }
        ],
        "query": "What is the current price of Bitcoin and can you provide the details of Delhi Nagrik Sehkari Bank using IFSC code YESB0DNB002?",
        "relevant APIs": [],
        "query_id": 9
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_exchange_rate_table",
                "api_description": "Fetch a complete table of exchange rates of specified type.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "table": "str",
                    "no": "str",
                    "tradingDate": "str",
                    "effectiveDate": "str",
                    "rates": [
                        {
                            "currency": "str",
                            "code": "str",
                            "mid": "float"
                        }
                    ]
                }
            }
        ],
        "query": "What are the current exchange rates available in table type 'A' from the National Bank of Poland? Additionally, can you provide the details of the bank branch associated with the IFSC code 'HDFC0000123'?",
        "relevant APIs": [],
        "query_id": 10
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_fiat_currencies",
                "api_description": "Lists known fiat currencies.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "string",
                    "name": "string",
                    "min_size": "string"
                }
            }
        ],
        "query": "Can you provide a list of known fiat currencies and also list some of the top cryptocurrency assets?",
        "relevant APIs": [],
        "query_id": 11
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character '\u7231'? Also, give me words that mean the same as 'love' using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 12
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number 85 and provide the definition of the English word 'radical'?",
        "relevant APIs": [],
        "query_id": 13
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you give me the definition of the word 'serendipity' and also filter profanity from the sentence 'This is a fucking amazing day'?",
        "relevant APIs": [],
        "query_id": 14
    },
    {
        "api_list": [
            {
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                },
                "category_name": "Language"
            }
        ],
        "query": "I am interested in learning more about the Chinese character '\u4ec1'. Can you provide the basic data for this character? Also, list all Chinese characters available in the database.",
        "relevant APIs": [],
        "query_id": 15
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the 'gb' filter and also find words that mean the same as 'ringing in the ears'?",
        "relevant APIs": [],
        "query_id": 16
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character '\u7231'? Also, give me words that mean the same as 'love' using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 17
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "required_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "string",
                        "label": "string",
                        "start": "string",
                        "end": "string"
                    }
                ],
                "optional_parameters": []
            }
        ],
        "query": "Can you provide me a list of Chinese dynasties with their historical periods? Additionally, suggest words that start with 'hist' for autocomplete.",
        "relevant APIs": [],
        "query_id": 18
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            }
        ],
        "query": "Can you suggest some words starting with 'hap' and provide the definition for one of them?",
        "relevant APIs": [],
        "query_id": 19
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide me a list of Chinese dynasties with their historical periods? Additionally, suggest words that start with 'hist' for autocomplete.",
        "relevant APIs": [],
        "query_id": 20
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "What are some words related to 'spoon' and can you provide the definition of one of these words?",
        "relevant APIs": [],
        "query_id": 21
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "resulting text"
                }
            }
        ],
        "query": "List the Mandarin sounds along with their pitch and filter the text 'Shit, what a fantastic day!' for any profane language, replacing the words with '[censored]'.",
        "relevant APIs": [],
        "query_id": 22
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            }
        ],
        "query": "What are some words related to 'spoon' and can you provide the definition of one of these words?",
        "relevant APIs": [],
        "query_id": 23
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number 85 and provide the definition of the English word 'radical'?",
        "relevant APIs": [],
        "query_id": 24
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word 'serendipity' and also filter profanity from the sentence 'This is a fucking amazing day'?",
        "relevant APIs": [],
        "query_id": 25
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest some words starting with 'hap' and provide the definition for one of them?",
        "relevant APIs": [],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_user",
                "api_description": "Retrieve a specific user by their unique username.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "user_id",
                        "type": "STRING",
                        "description": "The user's unique username (case-sensitive)."
                    }
                ],
                "optional_parameters": []
            }
        ],
        "query": "I'd like to know about the user 'pg' on Hacker News and also get the parsed content of the Wikipedia page for 'Python (programming language)'.",
        "relevant APIs": [],
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film from the Star Wars series.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want detailed information on the anime 'Naruto', and I'm interested in finding Star Wars films with 'Empire' in the title.",
        "relevant APIs": [],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name using a fuzzy search.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Search Wikipedia for articles related to 'Game of Thrones' and find all shows named 'Game of Thrones' or similar from TVmaze API.",
        "relevant APIs": [],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str"
                },
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "I want to know more about Albert Einstein. Could you find some articles about him on Wikipedia and provide information about a specific work with ID 'OL45804W' from the Open Library?",
        "relevant APIs": [],
        "query_id": 30
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "text/xml"
                }
            }
        ],
        "query": "I am looking for detailed information about the anime titled 'Naruto'. Also, can you get the TV schedule for channel ct1 on August 5, 2024, including regional broadcasts if available?",
        "relevant APIs": [],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters, including anime and manga.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "reports": "xml"
                }
            }
        ],
        "query": "Can you get a list of all anime reports and find information about people with the name 'Skywalker' in the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            }
        ],
        "query": "Could you list all the episodes from Final Space and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 33
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {
                        "uid": "str",
                        "name": "str",
                        "gender": "str",
                        "yearOfBirth": "int"
                    }
                }
            }
        ],
        "query": "Can you list all the characters from Final Space and provide details about a specific Star Trek character by UID CHMA0000215045?",
        "relevant APIs": [],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person from the Star Wars universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you get a list of all anime reports and find information about people with the name 'Skywalker' in the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about Luke Skywalker from Star Wars and also provide today's rosary prayer?",
        "relevant APIs": [],
        "query_id": 36
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str",
                            "characters": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide detailed information from Wikipedia about the 'Star Wars' franchise, particularly focusing on its films, along with specific data on all films available in the Star Wars API?",
        "relevant APIs": [],
        "query_id": 37
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the TV schedule for channel CT1 on August 4, 2024, and also find scholarly works related to machine learning?",
        "relevant APIs": [],
        "query_id": 38
    },
    {
        "api_list": [
            {
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "str": "str"
                },
                "category_name": "Content"
            }
        ],
        "query": "Can you search Wikipedia for information about 'Rosary Beads', and in the meantime, share a random rosary prayer with me?",
        "relevant APIs": [],
        "query_id": 39
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "search_titles",
                "api_description": "Search the newspaper directory using OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "terms",
                        "type": "STRING",
                        "description": "Search query"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "html"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you search the Chronicling America newspaper directory for articles related to 'World War II'? Also, can you find scholarly works discussing 'nuclear physics'?",
        "relevant APIs": [],
        "query_id": 40
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Could you list all the episodes from Final Space and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 41
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_prayer_by_day",
                "api_description": "Returns rosary prayer for a specific day of the week.",
                "required_parameters": [
                    {
                        "name": "day",
                        "type": "STRING",
                        "description": "The day of the week for which to retrieve the rosary prayer (e.g., 'monday')."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the climate like on Tatooine in Star Wars and what's the rosary prayer for Monday?",
        "relevant APIs": [],
        "query_id": 42
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "get_sitematrix",
                "api_description": "Retrieve the list of Wikimedia sites and related information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "sitematrix": {
                        "count": "int",
                        "specials": [
                            {
                                "code": "str",
                                "name": "str",
                                "url": "str"
                            }
                        ]
                    }
                },
                "category_name": "Content"
            }
        ],
        "query": "I am looking for a list of all Wikimedia sites available, in the site matrix in the mediawiki API, as well as the prayer schedule for the entire year on the rosary. Could you help with both?",
        "relevant APIs": [],
        "query_id": 43
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "I'm interested in learning more about the Star Wars character 'Luke Skywalker'. Can you provide information from Wikipedia about Luke Skywalker and retrieve details from the Star Wars API as well?",
        "relevant APIs": [],
        "query_id": 44
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Can you list the main characters of Final Space? Also, could you tell me more about the character named Luke Skywalker from Star Wars?",
        "relevant APIs": [],
        "query_id": 45
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array"
                }
            }
        ],
        "query": "I'm interested in learning more about Star Trek. Can you search Wikipedia for 'Star Trek' and also provide a list of characters from the Star Trek universe?",
        "relevant APIs": [],
        "query_id": 46
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_characters",
                "api_description": "Get characters of a specific anime.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Who are the characters in the anime with ID 20, and also any TV actors named 'Bryan Cranston'?",
        "relevant APIs": [],
        "query_id": 47
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you search Wikipedia for information about 'Rosary Beads', and in the meantime, share a random rosary prayer with me?",
        "relevant APIs": [],
        "query_id": 48
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Can you list the main characters of Final Space? Also, could you tell me more about the character named Luke Skywalker from Star Wars?",
        "relevant APIs": [],
        "query_id": 49
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ]
            }
        ],
        "query": "I'm interested in learning more about the Star Wars character 'Luke Skywalker'. Can you provide information from Wikipedia about Luke Skywalker and retrieve details from the Star Wars API as well?",
        "relevant APIs": [],
        "query_id": 50
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object"
                }
            }
        ],
        "query": "I'm interested in learning more about Star Trek. Can you search Wikipedia for 'Star Trek' and also provide a list of characters from the Star Trek universe?",
        "relevant APIs": [],
        "query_id": 51
    },
    {
        "api_list": [
            {
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Content"
            }
        ],
        "query": "Can you provide me the detailed content of the Wikipedia page for 'Holy Rosary' and also tell me what the rosary prayer for today is?",
        "relevant APIs": [],
        "query_id": 52
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "What is the TV schedule for channel CT2 on August 4, 2024, and can you list journals related to health?",
        "relevant APIs": [
            "get_tv_schedule",
            "list_journals"
        ],
        "query_id": 53
    },
    {
        "api_list": [
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the Wikipedia page content for 'Breaking Bad'? Also, I'd like detailed information about the show 'Breaking Bad' from TVmaze.",
        "relevant APIs": [],
        "query_id": 54
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_random_prayer",
                "api_description": "Returns a random rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Which Star Wars film introduced the first Death Star and can you give me a random rosary prayer?",
        "relevant APIs": [],
        "query_id": 55
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles starting with 'The New York'? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 56
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel from Czech Television.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": "XML | JSON based on format"
            }
        ],
        "query": "I want to check the TV schedule for the channel CT1 on 04.08.2024, and also find information about pets on Wikipedia.",
        "relevant APIs": [],
        "query_id": 57
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "anime_details": "xml"
                }
            }
        ],
        "query": "I want detailed information on the anime 'Naruto', and I'm interested in finding Star Wars films with 'Empire' in the title.",
        "relevant APIs": [],
        "query_id": 58
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parses a wiki page and returns its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you parse the content of the Wikipedia page titled 'Python (programming language)', and provide the first 100 characters of the HTML content, additonally provide the infromation from wikipedia about the search for 'Robert Oppenheimer'?",
        "relevant APIs": [],
        "query_id": 59
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prayers": [
                        {
                            "day": "str",
                            "prayer": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you provide a list of characters in the Star Trek universe along with the day and rosary prayer for the year 2024 schedule?",
        "relevant APIs": [],
        "query_id": 60
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "parse_page",
                "api_description": "Parser a wiki page and return its HTML content.",
                "required_parameters": [
                    {
                        "name": "page",
                        "type": "STRING",
                        "description": "Title of the page to parse."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "wiki",
                        "type": "STRING",
                        "description": "The wiki endpoint to use. Defaults to English Wikipedia.",
                        "default": "https://en.wikipedia.org/w/api.php"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide the Wikipedia page content for 'Breaking Bad'? Also, I'd like detailed information about the show 'Breaking Bad' from TVmaze.",
        "relevant APIs": [],
        "query_id": 61
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "application/json"
                }
            }
        ],
        "query": "Can you fetch the latest reports about new anime releases and provide me with the TV schedule for channel ct24 on August 4, 2024, in JSON format?",
        "relevant APIs": [],
        "query_id": 62
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_locations",
                "api_description": "Retrieves all locations, with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all notable locations from both the Final Space and Rick and Morty shows?",
        "relevant APIs": [],
        "query_id": 63
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str",
                            "characters": [
                                "str"
                            ],
                            "planets": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Which Star Wars film introduced the first Death Star and can you give me a random rosary prayer?",
        "relevant APIs": [],
        "query_id": 64
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_full_by_id",
                "api_description": "Get complete anime resource data by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide full details about the anime with ID 1, and also find the TV show named 'Breaking Bad'?",
        "relevant APIs": [],
        "query_id": 65
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "hourly": {
                        "time": "list",
                        "temperature_2m": "list"
                    }
                }
            }
        ],
        "query": "What's the weather forecast for New York City today with latitude=40.7128, longitude=74.0060? Additionally, provide a list of weather stations located around the area.",
        "relevant APIs": [],
        "query_id": 66
    },
    {
        "api_list": [
            {
                "tool_name": "awc",
                "api_name": "get_isigmet",
                "api_description": "Fetch international SIGMETs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Output format.",
                        "default": "json"
                    },
                    {
                        "name": "hazard",
                        "type": "STRING",
                        "description": "Hazard type",
                        "default": null
                    },
                    {
                        "name": "level",
                        "type": "NUMBER",
                        "description": "The level +-3000' to search",
                        "default": 0
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specify the date",
                        "default": null
                    }
                ],
                "method": "GET",
                "response_format": {
                    "error": "string",
                    "response": "string"
                },
                "category_name": "Weather"
            }
        ],
        "query": "I need to check for any international SIGMETs related to turbulence. Could you also provide a machine-readable forecast for Paris, France?",
        "relevant APIs": [],
        "query_id": 67
    },
    {
        "api_list": [
            {
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "response_format": {
                    "format": "json or xml",
                    "content": "Weather forecast data"
                },
                "category_name": "Weather"
            }
        ],
        "query": "I need to check for any international SIGMETs related to turbulence. Could you also provide a machine-readable forecast for Paris, France?",
        "relevant APIs": [],
        "query_id": 68
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "openmeteo",
                "api_name": "get_weather_forecast",
                "api_description": "Provides weather forecast for a given location. You can request hourly, daily, and/or current weather data.",
                "required_parameters": [
                    {
                        "name": "latitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    },
                    {
                        "name": "longitude",
                        "type": "FLOAT",
                        "description": "Geographical WGS84 coordinates of the location.",
                        "default": "None"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hourly",
                        "type": "LIST",
                        "description": "A list of weather variables which should be returned hourly.",
                        "default": "None"
                    },
                    {
                        "name": "daily",
                        "type": "LIST",
                        "description": "A list of daily weather variable aggregations which should be returned.",
                        "default": "None"
                    },
                    {
                        "name": "current",
                        "type": "LIST",
                        "description": "A list of weather variables to get current conditions.",
                        "default": "None"
                    },
                    {
                        "name": "temperature_unit",
                        "type": "STRING",
                        "description": "Temperature units like celsius or fahrenheit.",
                        "default": "celsius"
                    },
                    {
                        "name": "wind_speed_unit",
                        "type": "STRING",
                        "description": "Wind speed units like km/h, m/s, mph, or knots.",
                        "default": "kmh"
                    },
                    {
                        "name": "precipitation_unit",
                        "type": "STRING",
                        "description": "Precipitation units like mm or inch.",
                        "default": "mm"
                    },
                    {
                        "name": "timeformat",
                        "type": "STRING",
                        "description": "Time format like iso8601 or unixtime.",
                        "default": "iso8601"
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone like GMT or location-based timezone.",
                        "default": "GMT"
                    },
                    {
                        "name": "past_days",
                        "type": "INTEGER",
                        "description": "Number of past days to include in the weather data.",
                        "default": "0"
                    },
                    {
                        "name": "forecast_days",
                        "type": "INTEGER",
                        "description": "Number of forecast days to include in the weather data.",
                        "default": "7"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "latitude": "float",
                    "longitude": "float",
                    "generationtime_ms": "float",
                    "daily": {
                        "temperature_2m_max": "list",
                        "temperature_2m_min": "list"
                    }
                }
            }
        ],
        "query": "What is the weather forecast for the next 7 days for a Berlin Germany with maximum and minimum temperatures? Also, retrieve machine-readable weather data including wind and temperature for the same location.",
        "relevant APIs": [],
        "query_id": 69
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_boxes",
                "api_description": "Get information about a single senseBox.",
                "required_parameters": [
                    {
                        "name": "sense_box_id",
                        "type": "STRING",
                        "description": "The ID of the senseBox you are referring to."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format the sensor data is returned in.",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "_id": "57000b8745fd40c8196ad04c"
                }
            }
        ],
        "query": "Can you provide the latest weather measurements from a specific weather station senseBox 57000b8745fd40c8196ad04c, and also give me a weather forecast for Pittsburgh Pennsylvania?",
        "relevant APIs": [],
        "query_id": 70
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "seventimer",
                "api_name": "get_machine_readable_forecast",
                "api_description": "Retrieves machine-readable weather forecast data for a specified location.",
                "required_parameters": [
                    {
                        "name": "lon",
                        "type": "FLOAT",
                        "description": "Longitude of the location"
                    },
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "product",
                        "type": "STRING",
                        "description": "Forecast product type ('astro', 'civil', 'civillight', 'meteo', or 'two')",
                        "default": "astro"
                    },
                    {
                        "name": "output",
                        "type": "STRING",
                        "description": "Output format ('xml' or 'json')",
                        "default": "json"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dataseries": [
                        {
                            "timepoint": "int",
                            "cloudcover": "int",
                            "seeing": "int",
                            "transparency": "int",
                            "rh2m": "int",
                            "wind10m": {
                                "direction": "string",
                                "speed": "int"
                            },
                            "temp2m": "int",
                            "prec_type": "string"
                        }
                    ]
                }
            }
        ],
        "query": "What is the weather forecast for the next 7 days for a Berlin Germany with maximum and minimum temperatures? Also, retrieve machine-readable weather data including wind and temperature for the same location.",
        "relevant APIs": [],
        "query_id": 71
    },
    {
        "api_list": [
            {
                "category_name": "Weather",
                "tool_name": "opensensemap",
                "api_name": "get_all_boxes",
                "api_description": "Get all senseBoxes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "NUMBER",
                        "description": "Limit the search results.",
                        "default": "5"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boxes": "list of senseBoxes"
                }
            }
        ],
        "query": "What's the weather forecast for New York City today with latitude=40.7128, longitude=74.0060? Additionally, provide a list of weather stations located around the area.",
        "relevant APIs": [],
        "query_id": 72
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "str",
                            "country": "str",
                            "region": "str",
                            "slug": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I am planning a trip and want to visit new places in Mexico. Can you suggest a random brewery to visit? Additionally, I would like to know about some whisky distilleries.",
        "relevant APIs": [],
        "query_id": 73
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distilleries_info",
                "api_description": "List all distilleries main information.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distilleries_info": [
                        {
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "slug": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Find me cocktails that can be made using Gin and also list all the distilleries worldwide.",
        "relevant APIs": [],
        "query_id": 74
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "products": [
                        {
                            "code": "string",
                            "product_name": "string",
                            "categories_tags_en": [
                                "string"
                            ],
                            "nutrition_grades": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest a random brewery in the United States that I can visit? Also, find some healthy food products with a good nutrition grade that I can enjoy along with the visit, and some bad ones that I should avoid using Open Food Facts.",
        "relevant APIs": [],
        "query_id": 75
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "get_product_by_barcode",
                "api_description": "Get product details by barcode.",
                "required_parameters": [
                    {
                        "name": "barcode",
                        "type": "STRING",
                        "description": "The barcode of the product.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "code": "string",
                    "product": {
                        "product_name": "string",
                        "nutrition_grades": "string"
                    },
                    "status": "int",
                    "status_verbose": "string"
                }
            }
        ],
        "query": "Can you tell me about a cocktail called 'Margarita' and also fetch the nutritional information for a product with barcode '3017624010701'?",
        "relevant APIs": [],
        "query_id": 76
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "cocktail",
                "api_name": "list_cocktails_by_first_letter",
                "api_description": "List all cocktails by first letter.",
                "required_parameters": [
                    {
                        "name": "letter",
                        "type": "STRING",
                        "description": "The letter to filter cocktails by.",
                        "default": "a"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "drinks": [
                        "list of cocktails"
                    ]
                }
            }
        ],
        "query": "List cocktails starting with the letter 'M' and suggest a random brewery I could visit.",
        "relevant APIs": [],
        "query_id": 77
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "string",
                            "name": "string",
                            "country": "string",
                            "region": "string",
                            "whiskies_count": "integer"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide details about the Margarita cocktail recipe and get information about the Ardbeg distillery?",
        "relevant APIs": [],
        "query_id": 78
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "List cocktails starting with the letter 'M' and suggest a random brewery I could visit.",
        "relevant APIs": [],
        "query_id": 79
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openfoodfacts",
                "api_name": "search_products",
                "api_description": "Search for products with specific criteria.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "categories",
                        "type": "STRING",
                        "description": "Categories to filter by.",
                        "default": null
                    },
                    {
                        "name": "nutrition_grades",
                        "type": "STRING",
                        "description": "Nutrition grade to filter by.",
                        "default": null
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specific fields to retrieve (comma-separated).",
                        "default": null
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Field name to sort by.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "page": "int",
                    "page_count": "int",
                    "page_size": "int",
                    "products": [
                        {
                            "categories_tags_en": [
                                "string"
                            ],
                            "code": "string",
                            "nutrition_grades": "string"
                        }
                    ],
                    "skip": "int"
                }
            }
        ],
        "query": "Please list all cocktails starting with the letter 'C' and search for organic products with a nutrition grade of 'A' specifically from Open Food Facts.",
        "relevant APIs": [],
        "query_id": 80
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "whiskyhunter",
                "api_name": "distillery_data",
                "api_description": "List data for distillery {slug}.",
                "required_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING",
                        "description": "The unique identifier for a distillery (e.g., 'ardbeg').",
                        "default": "ardbeg"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "distillery_data": [
                        {
                            "slug": "str",
                            "name": "str",
                            "country": "str",
                            "region": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find breweries that specialize in ales? I'm also interested in detailed data for a whisky distillery, particularly Ardbeg.",
        "relevant APIs": [],
        "query_id": 81
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "get_random_brewery",
                "api_description": "Get a random brewery.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "description": "Number of random breweries to return.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "str",
                    "name": "str",
                    "brewery_type": "str",
                    "street": "str",
                    "city": "str",
                    "state": "str",
                    "postal_code": "str"
                }
            }
        ],
        "query": "I am planning a trip and want to visit new places in Mexico. Can you suggest a random brewery to visit? Additionally, I would like to know about some whisky distilleries.",
        "relevant APIs": [],
        "query_id": 82
    },
    {
        "api_list": [
            {
                "category_name": "Food",
                "tool_name": "openbrewery",
                "api_name": "search_breweries",
                "api_description": "Search for breweries based on a search term.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search term to look for breweries."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "str",
                        "name": "str",
                        "brewery_type": "str",
                        "city": "str",
                        "state": "str",
                        "country": "str"
                    }
                ]
            }
        ],
        "query": "Can you find margarita cocktail recipes that are popular along with breweries that serve ale?",
        "relevant APIs": [],
        "query_id": 83
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Spawn an avatar in a custom style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Find details about artists or agents related to Picasso in the Art Institute of Chicago, and generate a 'lorelei' styled avatar without flipping it.",
        "relevant APIs": [],
        "query_id": 84
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "get_departments",
                "api_description": "Returns a list of all departments.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "departments": [
                        {
                            "departmentId": "int",
                            "displayName": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide me with a list of all dog breeds and also a list of all departments in the Met Museum collection?",
        "relevant APIs": [],
        "query_id": 85
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "robohash",
                "api_name": "get_robohash_image",
                "api_description": "Generate a unique image from any text. Customize the image by using different sets, backgrounds, sizes, etc.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Text input for generating the image.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fmt",
                        "type": "STRING",
                        "description": "Output format of the image.",
                        "default": "png"
                    },
                    {
                        "name": "size",
                        "type": "STRING",
                        "description": "Size of the generated image.",
                        "default": null
                    },
                    {
                        "name": "set",
                        "type": "STRING",
                        "description": "The set to generate the image from.",
                        "default": null
                    },
                    {
                        "name": "bgset",
                        "type": "STRING",
                        "description": "The background set to use.",
                        "default": null
                    },
                    {
                        "name": "gravatar",
                        "type": "STRING",
                        "description": "Use a gravatar image if available.",
                        "default": null
                    },
                    {
                        "name": "ignoreext",
                        "type": "BOOLEAN",
                        "description": "Whether to ignore the extension in the hash.",
                        "default": true
                    }
                ],
                "method": "GET",
                "template_response": {
                    "image": {
                        "type": "binary"
                    }
                }
            }
        ],
        "query": "What are all the breeds of dogs available, and can you generate a unique image of a dog labeled as 'robotic canine' using Robohash?",
        "relevant APIs": [],
        "query_id": 86
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "resmush",
                "api_name": "compress_image_get_method",
                "api_description": "Compress an image specified by its URL using the GET method.",
                "required_parameters": [
                    {
                        "name": "img_url",
                        "type": "STRING",
                        "description": "The URL of the image to be compressed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "qlty",
                        "type": "INTEGER",
                        "description": "The quality level for JPG compression (0-100).",
                        "default": "92"
                    },
                    {
                        "name": "exif",
                        "type": "BOOLEAN",
                        "description": "Retain the EXIF data.",
                        "default": "false"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "dest": "string",
                    "src": "string",
                    "src_size": "int",
                    "dest_size": "int",
                    "percent": "float",
                    "expires": "string"
                }
            }
        ],
        "query": "I wish to know all the departments available in the Met's collection. Additionally, I have a URL (https://resmush.it/wp-content/uploads/2024/02/testimage.jpg) to an image of a painting from this collection that I need to compress to reduce its size.",
        "relevant APIs": [],
        "query_id": 87
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "metmuseum",
                "api_name": "search_objects",
                "api_description": "Search for objects in the Met's collection",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The search term."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "isHighlight",
                        "type": "BOOLEAN",
                        "description": "Returns highlighted objects."
                    },
                    {
                        "name": "title",
                        "type": "BOOLEAN",
                        "description": "Search against title field."
                    },
                    {
                        "name": "tags",
                        "type": "BOOLEAN",
                        "description": "Search against tags field."
                    },
                    {
                        "name": "departmentId",
                        "type": "INTEGER",
                        "description": "Filter by department."
                    },
                    {
                        "name": "isOnView",
                        "type": "BOOLEAN",
                        "description": "Returns objects on view."
                    },
                    {
                        "name": "artistOrCulture",
                        "type": "BOOLEAN",
                        "description": "Search against artist name or culture."
                    },
                    {
                        "name": "medium",
                        "type": "STRING",
                        "description": "Filter by medium."
                    },
                    {
                        "name": "hasImages",
                        "type": "BOOLEAN",
                        "description": "Filter objects that have images."
                    },
                    {
                        "name": "geoLocation",
                        "type": "STRING",
                        "description": "Filter by geographic location."
                    },
                    {
                        "name": "dateBegin",
                        "type": "INTEGER",
                        "description": "Objects created after date."
                    },
                    {
                        "name": "dateEnd",
                        "type": "INTEGER",
                        "description": "Objects created before date."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "objectIDs": [
                        "int"
                    ]
                }
            }
        ],
        "query": "Can you find Renaissance sculptures made of marble in the Met collection? Also, I'd like to see artworks related to Van Gogh in the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 88
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "artchicago",
                "api_name": "artworks_search",
                "api_description": "Search artworks in the Art Institute of Chicago data.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "default": "monet"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "default": null
                    },
                    {
                        "name": "from",
                        "type": "INTEGER",
                        "default": 0
                    },
                    {
                        "name": "size",
                        "type": "INTEGER",
                        "default": 10
                    },
                    {
                        "name": "facets",
                        "type": "STRING",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pagination": {
                        "total": "int",
                        "limit": "int",
                        "offset": "int",
                        "total_pages": "int",
                        "current_page": "int"
                    },
                    "data": [
                        {
                            "id": "int",
                            "title": "str",
                            "artist_display": "str",
                            "place_of_origin": "str",
                            "date_display": "str",
                            "medium_display": "str",
                            "dimensions": "str",
                            "thumbnail": {
                                "alt_text": "str",
                                "width": "int",
                                "height": "int",
                                "iiif_url": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you find Renaissance sculptures made of marble in the Met collection? Also, I'd like to see artworks related to Van Gogh in the Art Institute of Chicago.",
        "relevant APIs": [],
        "query_id": 89
    },
    {
        "api_list": [
            {
                "category_name": "Art",
                "tool_name": "dicebear",
                "api_name": "generate_avatar",
                "api_description": "Generates an avatar of a specified style.",
                "required_parameters": [
                    {
                        "name": "style_name",
                        "type": "STRING",
                        "description": "The style of the avatar, e.g., 'pixel-art', 'lorelei'.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "seed",
                        "type": "STRING",
                        "description": "Seed value for generating a repeatable avatar.",
                        "default": ""
                    },
                    {
                        "name": "hair",
                        "type": "LIST",
                        "description": "List of hair styles.",
                        "default": []
                    },
                    {
                        "name": "flip",
                        "type": "BOOLEAN",
                        "description": "Boolean to flip the avatar.",
                        "default": false
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "The format of the avatar ('svg', 'png', 'jpg', 'webp', 'avif', 'json').",
                        "default": "svg"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you find artworks related to Van Gogh in the Art Institute of Chicago's collection, and generate an avatar with a 'pixel-art' style using the name 'ArtLover' as the seed?",
        "relevant APIs": [],
        "query_id": 90
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_hot_tracks",
                "api_description": "Fetch the list of hot tracks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "List the latest album releases from the artist 'Beyonc\u00e9' and provide me with the current hot tracks.",
        "relevant APIs": [],
        "query_id": 91
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "release_group_browse",
                "api_description": "Browse release groups by artist MBID.",
                "required_parameters": [
                    {
                        "name": "artist_mbid",
                        "type": "STRING",
                        "description": "The MBID for the artist.",
                        "default": "b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter release groups by type (album, single, etc.).",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter releases by status (official, etc.).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "release-groups": [
                        {
                            "id": "str",
                            "title": "str",
                            "primary-type": "str",
                            "secondary-types": [
                                "str"
                            ],
                            "first-release-date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me some unique music genre stories and find albums or singles with this artist mbid b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d?",
        "relevant APIs": [],
        "query_id": 92
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user.",
                "required_parameters": [
                    {
                        "name": "uHandle",
                        "type": "STRING",
                        "description": "The handle of the user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Return results after the specified timestamp."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Return results before the specified timestamp."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "tracks": [
                        {
                            "title": "str",
                            "artist": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you search for artists similar to 'Adele' and also fetch the tracks from the Openwhyd user 'john_doe's playlist?",
        "relevant APIs": [],
        "query_id": 93
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "artist_search",
                "api_description": "Allows searching for artists by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query to find the artist.",
                        "default": "The Beatles"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "artists": [
                        {
                            "id": "str",
                            "name": "str",
                            "type": "str",
                            "country": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest some random music genres and search for Taylor Swift?",
        "relevant APIs": [],
        "query_id": 94
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "openwhyd",
                "api_name": "get_user_tracks",
                "api_description": "Fetch the list of tracks posted by a user",
                "required_parameters": [
                    {
                        "name": "uHandle",
                        "type": "STRING",
                        "description": "The handle of the user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "playlistId",
                        "type": "INTEGER",
                        "description": "The ID of the playlist."
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of tracks to return."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Return results after the specified timestamp."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Return results before the specified timestamp."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "track": "str",
                        "artist": "str",
                        "playlistId": "int"
                    }
                ]
            }
        ],
        "query": "I am curious to read some random stories about music genres and also see what tracks Adrien has recently posted.",
        "relevant APIs": [],
        "query_id": 95
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "musicbrainz",
                "api_name": "release_group_browse",
                "api_description": "Browse release groups by artist MBID.",
                "required_parameters": [
                    {
                        "name": "artist_mbid",
                        "type": "STRING",
                        "description": "The MBID for the artist.",
                        "default": "b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to return.",
                        "default": "25"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "The number of results to skip.",
                        "default": "0"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter release groups by type (album, single, etc.).",
                        "default": ""
                    },
                    {
                        "name": "status",
                        "type": "STRING",
                        "description": "Filter releases by status (official, etc.).",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "release-groups": [
                        {
                            "title": "str",
                            "primary-type": "str"
                        }
                    ]
                }
            }
        ],
        "query": "List the latest album releases from the artist 'Beyonc\u00e9' and provide me with the current hot tracks.",
        "relevant APIs": [],
        "query_id": 96
    },
    {
        "api_list": [
            {
                "category_name": "Music",
                "tool_name": "binaryjazz",
                "api_name": "get_genres",
                "api_description": "Fetch a number of random music genres.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of genres to fetch.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "items": [
                        "string"
                    ]
                }
            }
        ],
        "query": "Can you suggest some random music genres and search for Taylor Swift?",
        "relevant APIs": [],
        "query_id": 97
    },
    {
        "api_list": [
            {
                "tool_name": "cheapshark",
                "api_name": "get_alerts",
                "api_description": "Retrieve all existing alerts.",
                "required_parameters": [
                    {
                        "name": "key",
                        "type": "STRING",
                        "description": "The key parameter from the manage link received via email.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "I'd like to get a list of all my game price alerts from CheapShark. In addition, can you show me a random Magic card?",
        "relevant APIs": [],
        "query_id": 98
    },
    {
        "api_list": [
            {
                "tool_name": "boardgamesgeek",
                "api_name": "get_user_info",
                "api_description": "Retrieve information about a user by username from BGG.",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "The username."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "buddies",
                        "type": "INTEGER",
                        "description": "Include buddies information."
                    },
                    {
                        "name": "guilds",
                        "type": "INTEGER",
                        "description": "Include guilds information."
                    },
                    {
                        "name": "hot",
                        "type": "INTEGER",
                        "description": "Include the user's hot 10 list."
                    },
                    {
                        "name": "top",
                        "type": "INTEGER",
                        "description": "Include the user's top 10 list."
                    },
                    {
                        "name": "domain",
                        "type": "STRING",
                        "description": "Domain for hot and top lists."
                    }
                ],
                "method": "GET",
                "category_name": "Games"
            }
        ],
        "query": "Can you provide some details about the user 'eekspider' on BoardGameGeek and also generate a hilarious insult?",
        "query_id": 99
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "What categories are available for Chuck Norris jokes? Also, can you provide me with information on the Pok\u00e9mon ability 'Overgrow'?",
        "relevant APIs": [],
        "query_id": 100
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_all_resources",
                "api_description": "Get list of all available resources for a specified DnD 5E endpoint.",
                "required_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint to query for available resources."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "results": "object[]"
                }
            }
        ],
        "query": "Can you provide a list of all available DnD 5E classes, and also tell me a random joke to lighten the mood?",
        "relevant APIs": [],
        "query_id": 101
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want to find jokes that are about Chuck Norris and also some jokes of a specific type from the Official Joke API. Can you provide some?",
        "relevant APIs": [],
        "query_id": 102
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "tcgdex",
                "api_name": "list_rarities",
                "api_description": "List different card rarities.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "Find me Chuck Norris jokes related to 'warrior'. Additionally, could you list the different rarities of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 103
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_item_data",
                "api_description": "Retrieve item data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "I need to compare the latest item data from League of Legends Data Dragon with the 'longsword' equipment details from Dungeons & Dragons 5th Edition. Can you fetch these for me?",
        "relevant APIs": [],
        "query_id": 104
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "gamerpower",
                "api_name": "get_all_giveaways",
                "api_description": "Fetch all ongoing giveaways.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "List of giveaway objects"
            }
        ],
        "query": "I'm a fan of the Legend of Zelda series and want to know if there are any amiibos related to this game. Also, are there any ongoing giveaways for free games or in-game loot that I could participate in?",
        "relevant APIs": [],
        "query_id": 105
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "search_jokes",
                "api_description": "Free text search for Chuck Norris jokes.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query for jokes.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "result": [
                        {
                            "icon_url": "str",
                            "id": "str",
                            "url": "str",
                            "value": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Find me Chuck Norris jokes related to 'warrior'. Additionally, could you list the different rarities of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 106
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "chucknorrisjokes",
                "api_name": "get_joke_categories",
                "api_description": "Retrieve a list of available categories for Chuck Norris jokes.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "What categories of Chuck Norris jokes are available? Also, what are the different types of Pok\u00e9mon cards?",
        "relevant APIs": [],
        "query_id": 107
    },
    {
        "api_list": [
            {
                "tool_name": "chucknorrisjokes",
                "api_name": "get_random_joke",
                "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
                "method": "GET",
                "category_name": "Games",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a random Chuck Norris joke and give me details about Pok\u00e9mon Pikachu?",
        "relevant APIs": [],
        "query_id": 108
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_region",
                "api_description": "Retrieves information on a single region given its name.",
                "required_parameters": [
                    {
                        "name": "region",
                        "type": "STRING",
                        "description": "The name of the region."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "I want to find all free-to-play games available for PC and get information about the Eldin region in the Hyrule Compendium.",
        "relevant APIs": [],
        "query_id": 109
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "freetogame",
                "api_name": "games_by_category",
                "api_description": "Retrieve a list of all available games from a specific genre.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": "str",
                    "thumbnail": "str",
                    "short_description": "str",
                    "game_url": "str"
                }
            }
        ],
        "query": "I'm looking for a board game like 'Catan' and also want to explore some free-to-play shooter games. Can you provide me with information on both?",
        "relevant APIs": [],
        "query_id": 110
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with a specified quantity.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "Could you tell me what the 'Strength' ability score means in DnD, and also share a random programming joke?",
        "relevant APIs": [],
        "query_id": 111
    },
    {
        "api_list": [
            {
                "tool_name": "pokeapi",
                "api_name": "get_pokemon",
                "api_description": "Get details about a specific Pok\u00e9mon by ID or name.",
                "required_parameters": [
                    {
                        "name": "id_or_name",
                        "type": "STRING",
                        "description": "The ID or name of the Pok\u00e9mon to retrieve."
                    }
                ],
                "method": "GET",
                "category_name": "Games",
                "optional_parameters": []
            }
        ],
        "query": "Can you tell me a random Chuck Norris joke and give me details about Pok\u00e9mon Pikachu?",
        "relevant APIs": [],
        "query_id": 112
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "boardgamesgeek",
                "api_name": "search_items",
                "api_description": "Search for items by name from the BGG database.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Type of items to return."
                    },
                    {
                        "name": "exact",
                        "type": "INTEGER",
                        "description": "Exact match for search."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "item": [
                        {
                            "id": "int",
                            "type": "str",
                            "name": "str",
                            "yearpublished": "int"
                        }
                    ]
                }
            }
        ],
        "query": "I'm looking for a board game like 'Catan' and also want to explore some free-to-play shooter games. Can you provide me with information on both?",
        "relevant APIs": [],
        "query_id": 113
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "hyrulecompendium",
                "api_name": "get_category_entries",
                "api_description": "Retrieves all entries in a given category.",
                "required_parameters": [
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "The category to retrieve entries from."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "Can you list some free-to-play shooter games and also find entries related to monsters in the Hyrule Compendium?",
        "relevant APIs": [],
        "query_id": 114
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "opentriviadb",
                "api_name": "get_jokes_by_type",
                "api_description": "Fetches jokes by type with specified quantity, either 'random' or 'ten'.",
                "required_parameters": [
                    {
                        "name": "joke_type",
                        "type": "STRING",
                        "description": "The type of jokes to fetch."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quantity",
                        "type": "STRING",
                        "description": "The number of jokes to fetch, either 'random' or 'ten'. Default is 'random'."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "type": "str",
                        "setup": "str",
                        "punchline": "str"
                    }
                ]
            }
        ],
        "query": "I want to find jokes that are about Chuck Norris and also some jokes of a specific type from the Official Joke API. Can you provide some?",
        "relevant APIs": [],
        "query_id": 115
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "magicthegathering",
                "api_name": "get_cards_by_name",
                "api_description": "Retrieve cards by name",
                "required_parameters": [
                    {
                        "name": "name",
                        "type": "STRING"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you tell me a joke after finding the details of the Magic: The Gathering card named 'Black Lotus'?",
        "relevant APIs": [
            "get_cards_by_name",
            "grab_random_joke"
        ],
        "query_id": 116
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "type": "object"
                    }
                }
            }
        ],
        "query": "Can you provide the champion data of League of Legends for the latest version in English? And also, give me a cheeky insult in German.",
        "relevant APIs": [],
        "query_id": 117
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "barter",
                "api_name": "browse_bundles",
                "api_description": "Browse all available bundles.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "bundles": [
                        {
                            "bundle_id": "int",
                            "name": "str",
                            "date": "date"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find amiibos related to the character Mario and also browse available game bundles?",
        "relevant APIs": [],
        "query_id": 118
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "DnD5",
                "api_name": "get_ability_score",
                "api_description": "Get an ability score by its index.",
                "required_parameters": [
                    {
                        "name": "index",
                        "type": "STRING",
                        "description": "The index of the ability score to get."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "index": "string",
                    "name": "string",
                    "url": "string",
                    "desc": "string[]",
                    "full_name": "string",
                    "skills": "object[]"
                }
            }
        ],
        "query": "Could you tell me what the 'Strength' ability score means in DnD, and also share a random programming joke?",
        "relevant APIs": [],
        "query_id": 119
    },
    {
        "api_list": [
            {
                "tool_name": "datadragon",
                "api_name": "get_champion_data",
                "category_name": "Games",
                "api_description": "Retrieve champion data for a specified version and language.",
                "required_parameters": [
                    {
                        "name": "version",
                        "type": "STRING",
                        "description": "The version of the data files.",
                        "default": "12.6.1"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "The language code.",
                        "default": "en_US"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": "object"
                }
            }
        ],
        "query": "I would like to know about the latest League of Legends champions in English. Also, can you get me some funny programming jokes?",
        "relevant APIs": [],
        "query_id": 120
    },
    {
        "api_list": [
            {
                "category_name": "Games",
                "tool_name": "datadragon",
                "api_name": "get_latest_version",
                "api_description": "Retrieve the latest version of Data Dragon.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "list",
                    "items": "str"
                }
            }
        ],
        "query": "I want to know the latest version of League of Legends Data Dragon, and while you're at it, can you generate a humorous insult for me in English?",
        "relevant APIs": [],
        "query_id": 121
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "irail",
                "api_name": "liveboard",
                "api_description": "Retrieve a liveboard for a specified station.",
                "required_parameters": [
                    {
                        "name": "station",
                        "type": "STRING",
                        "description": "Station name"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Station ID"
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date for query"
                    },
                    {
                        "name": "time",
                        "type": "STRING",
                        "description": "Time for query"
                    },
                    {
                        "name": "arrdep",
                        "type": "STRING",
                        "description": "Arrivals or departures",
                        "default": "departure"
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language of response",
                        "default": "en"
                    },
                    {
                        "name": "format",
                        "type": "STRING",
                        "description": "Response format",
                        "default": "json"
                    },
                    {
                        "name": "alerts",
                        "type": "BOOLEAN",
                        "description": "Include alerts",
                        "default": "false"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What is the current liveboard information for Gent-Sint-Pieters station in Belgium? Additionally, can you provide details about facilities at a specific stop in the MBTA system?",
        "relevant APIs": [],
        "query_id": 122
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "mbta",
                "api_name": "get_alerts",
                "api_description": "List active and upcoming system alerts.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter_activity",
                        "type": "STRING",
                        "description": "Filter to alerts for only those activities matching."
                    },
                    {
                        "name": "filter_route_type",
                        "type": "STRING",
                        "description": "Filter by route type."
                    },
                    {
                        "name": "filter_direction_id",
                        "type": "STRING",
                        "description": "Filter by direction ID."
                    },
                    {
                        "name": "filter_route",
                        "type": "STRING",
                        "description": "Filter by route id."
                    },
                    {
                        "name": "filter_stop",
                        "type": "STRING",
                        "description": "Filter by stop."
                    },
                    {
                        "name": "filter_trip",
                        "type": "STRING",
                        "description": "Filter by trip."
                    },
                    {
                        "name": "filter_facility",
                        "type": "STRING",
                        "description": "Filter by facility."
                    },
                    {
                        "name": "filter_id",
                        "type": "STRING",
                        "description": "Filter by alert ID."
                    },
                    {
                        "name": "filter_banner",
                        "type": "STRING",
                        "description": "Filter by banner."
                    },
                    {
                        "name": "filter_datetime",
                        "type": "STRING",
                        "description": "Filter by datetime."
                    },
                    {
                        "name": "filter_lifecycle",
                        "type": "STRING",
                        "description": "Filter by lifecycle."
                    },
                    {
                        "name": "filter_severity",
                        "type": "STRING",
                        "description": "Filter by severity."
                    },
                    {
                        "name": "page_offset",
                        "type": "INTEGER",
                        "description": "Offset (0-based) of first element in the page."
                    },
                    {
                        "name": "page_limit",
                        "type": "INTEGER",
                        "description": "Max number of elements to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Results can be sorted by the id or any /data/{index}/attributes key."
                    },
                    {
                        "name": "fields_alert",
                        "type": "STRING",
                        "description": "Fields to include with the response."
                    },
                    {
                        "name": "include",
                        "type": "STRING",
                        "description": "Relationships to include."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Could you find some major transport stations in Berlin and check if there are any alerts on Route 1 using the MBTA data?",
        "relevant APIs": [],
        "query_id": 123
    },
    {
        "api_list": [
            {
                "tool_name": "berlin_brandenburg",
                "api_name": "stop_departures",
                "api_description": "Get departures at a stop/station.",
                "required_parameters": [
                    {
                        "name": "stop_id",
                        "type": "STRING",
                        "description": "ID of the stop/station.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "when",
                        "type": "STRING",
                        "description": "Departure time (ISO 8601 format).",
                        "default": ""
                    },
                    {
                        "name": "direction",
                        "type": "STRING",
                        "description": "Filter by direction.",
                        "default": ""
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Show departures for how many minutes.",
                        "default": "10"
                    },
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of results.",
                        "default": ""
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET",
                "category_name": "Transportation"
            }
        ],
        "query": "Can you give me the next departures from the Zoologischer Garten station in Berlin and the available train connections from Brussels to Liege tomorrow at 10am?",
        "query_id": 124
    },
    {
        "api_list": [
            {
                "category_name": "Transportation",
                "tool_name": "berlin_brandenburg",
                "api_name": "radar",
                "api_description": "Find all vehicles currently in an area and their movements.",
                "required_parameters": [
                    {
                        "name": "north",
                        "type": "FLOAT",
                        "description": "Northern latitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "west",
                        "type": "FLOAT",
                        "description": "Western longitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "south",
                        "type": "FLOAT",
                        "description": "Southern latitude of bounding box.",
                        "default": ""
                    },
                    {
                        "name": "east",
                        "type": "FLOAT",
                        "description": "Eastern longitude of bounding box.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "results",
                        "type": "INTEGER",
                        "description": "Max. number of vehicles.",
                        "default": "256"
                    },
                    {
                        "name": "duration",
                        "type": "INTEGER",
                        "description": "Compute frames for how many seconds?",
                        "default": "30"
                    },
                    {
                        "name": "frames",
                        "type": "INTEGER",
                        "description": "Number of frames to compute.",
                        "default": "3"
                    },
                    {
                        "name": "polylines",
                        "type": "BOOLEAN",
                        "description": "Return a polyline for each vehicle?",
                        "default": "true"
                    },
                    {
                        "name": "language",
                        "type": "STRING",
                        "description": "Language of the results.",
                        "default": "en"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need to monitor the vehicles currently moving in the central Berlin area with boundaries north=52.52411, west=13.41002, south=52.51942, east=13.41709 and could you list the details of the Red Line from the MBTA data?",
        "relevant APIs": [],
        "query_id": 125
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "str",
                    "found": "bool",
                    "number": "int",
                    "type": "str"
                }
            }
        ],
        "query": "Can you search for datasets related to climate change and also provide me with a random trivia fact?",
        "relevant APIs": [],
        "query_id": 126
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "idigibio",
                "api_name": "view_basic_access",
                "api_description": "Returns iDigBio record format from legacy API.",
                "required_parameters": [
                    {
                        "name": "uuid",
                        "type": "STRING",
                        "description": "The unique identifier for the record."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "view_type",
                        "type": "STRING",
                        "description": "The type of object to view.",
                        "default": "records"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "uuid": "string",
                    "other_field": "any"
                }
            }
        ],
        "query": "Can you retrieve data for the satellite named 'Hubble'? Additionally, I need information on a specific biodiversity record from iDigBio using its UUID uuid='c5e7b8fe-7f33-404e-96cc-35a201a4b1d9'.",
        "relevant APIs": [],
        "query_id": 127
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "key": "string",
                            "title": "string",
                            "description": "string",
                            "created": "string",
                            "modified": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you find datasets related to birds in the GBIF and provide information on the SpaceX historical events?",
        "relevant APIs": [],
        "query_id": 128
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "I want to know about any new research on machine learning available on arXiv and also get the sunrise time in Sydney, Australia (longitude 151.215297, latitude -33.856784) for tomorrow in 24-hour format.",
        "relevant APIs": [],
        "query_id": 129
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "sunsetsunrise",
                "api_name": "get_sunrise_sunset_times",
                "api_description": "Retrieve sunrise and sunset times for a specific location based on latitude and longitude.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location in decimal degrees."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location in decimal degrees."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Date in YYYY-MM-DD format or relative formats such as 'today'. Defaults to today."
                    },
                    {
                        "name": "timezone",
                        "type": "STRING",
                        "description": "Timezone of the returned times. Defaults to the location's timezone."
                    },
                    {
                        "name": "date_start",
                        "type": "STRING",
                        "description": "Start date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "date_end",
                        "type": "STRING",
                        "description": "End date in YYYY-MM-DD format for retrieving a range."
                    },
                    {
                        "name": "time_format",
                        "type": "STRING",
                        "description": "Time format such as '24', 'military', or 'unix'."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": {
                        "date": "str",
                        "sunrise": "str",
                        "sunset": "str",
                        "first_light": "str",
                        "last_light": "str",
                        "dawn": "str",
                        "dusk": "str",
                        "solar_noon": "str",
                        "golden_hour": "str",
                        "day_length": "str",
                        "timezone": "str",
                        "utc_offset": "int"
                    },
                    "status": "str"
                }
            }
        ],
        "query": "Can you provide the latest articles related to biomechanics on arXiv and also find out when the sun sets in Kyoto, Japan (Latitude 35.011665, Longitude 135.768111) today?",
        "relevant APIs": [],
        "query_id": 130
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "numbers",
                "api_name": "get_number_fact",
                "api_description": "Get a fact about a number from the Numbers API.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "STRING",
                        "description": "An integer, 'random', or day of year 'month/day'.",
                        "default": "random"
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'trivia', 'math', 'date', or 'year'.",
                        "default": "trivia"
                    },
                    {
                        "name": "fragment",
                        "type": "BOOLEAN",
                        "description": "Return the fact as a sentence fragment.",
                        "default": "False"
                    },
                    {
                        "name": "notfound",
                        "type": "STRING",
                        "description": "'default', 'floor', 'ceil'.",
                        "default": "default"
                    },
                    {
                        "name": "min_val",
                        "type": "INTEGER",
                        "description": "The minimum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "max_val",
                        "type": "INTEGER",
                        "description": "The maximum value for random facts.",
                        "default": "None"
                    },
                    {
                        "name": "json",
                        "type": "BOOLEAN",
                        "description": "Return the fact in JSON format.",
                        "default": "True"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "text": "string",
                    "found": "boolean",
                    "number": "number",
                    "type": "string",
                    "date": "string"
                }
            }
        ],
        "query": "Can you help me solve and simplify the mathematical expression 2^2 + 2(2) using Newton's API? Also, tell me a trivia fact about the number 8 using the Numbers API.",
        "query_id": 131
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "Please get the TLE data for all satellites in the 'Science' group using Celestrak. At the same time, could you search iDigBio records for any related to 'Homo sapiens'?",
        "relevant APIs": [],
        "query_id": 132
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "newton",
                "api_name": "newton_calculate",
                "api_description": "Performs a specified mathematical operation on a provided expression and returns the result.",
                "required_parameters": [
                    {
                        "name": "operation",
                        "type": "STRING",
                        "description": "The math operation to perform."
                    },
                    {
                        "name": "expression",
                        "type": "STRING",
                        "description": "The URL-encoded math expression to calculate."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "operation": "string",
                    "expression": "string",
                    "result": "string"
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you help me solve and simplify the mathematical expression 2^2 + 2(2) using Newton's API? Also, tell me a trivia fact about the number 8 using the Numbers API.",
        "query_id": 133
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "Can you provide information about the satellite named 'MICROSAT-R'? Also, what is a trivia fact about the number 42?",
        "relevant APIs": [],
        "query_id": 134
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": "string or object"
                }
            }
        ],
        "query": "Can you get the satellite data for the 'STATIONS' group through Celestrak? Also, search for the scientific name 'Ursus arctos' in the ITIS database.",
        "relevant APIs": [],
        "query_id": 135
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "arxiv",
                "api_name": "query_arxiv",
                "api_description": "Query interface for searching arXiv articles.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "search_query",
                        "type": "STRING",
                        "description": "Search terms used for the query.",
                        "default": null
                    },
                    {
                        "name": "id_list",
                        "type": "LIST",
                        "description": "List of arXiv article IDs for the query.",
                        "default": null
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "Index of the first returned result.",
                        "default": "0"
                    },
                    {
                        "name": "max_results",
                        "type": "INTEGER",
                        "description": "Maximum number of results to return.",
                        "default": "10"
                    },
                    {
                        "name": "sort_by",
                        "type": "STRING",
                        "description": "Sorting criteria for results.",
                        "default": null
                    },
                    {
                        "name": "sort_order",
                        "type": "STRING",
                        "description": "Sorting order (ascending/descending).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "feed": {
                        "title": "str",
                        "id": "str",
                        "updated": "str",
                        "opensearch:totalResults": "int",
                        "opensearch:startIndex": "int",
                        "opensearch:itemsPerPage": "int",
                        "entry": {
                            "id": "str",
                            "updated": "str",
                            "published": "str",
                            "summary": "str",
                            "author": "dict",
                            "category": "list",
                            "arxiv:primary_category": "dict"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide some recent scientific articles related to quantum computing from arXiv? Also, I would love to learn a fun cat fact for a break.",
        "relevant APIs": [],
        "query_id": 136
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_group",
                "api_description": "Query GP data using groups of satellites.",
                "required_parameters": [
                    {
                        "name": "GROUP",
                        "type": "STRING",
                        "description": "Group name for the satellites."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "Can you provide the list of all satellites within the STATIONS group and details of all SpaceX capsules?",
        "relevant APIs": [],
        "query_id": 137
    },
    {
        "api_list": [
            {
                "tool_name": "celestrak",
                "api_name": "query_by_catnr",
                "api_description": "Query GP data using Catalog Number (CATNR).",
                "required_parameters": [
                    {
                        "name": "CATNR",
                        "type": "STRING",
                        "description": "Catalog number for the satellite."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "category_name": "Science"
            }
        ],
        "query": "I need to get the TLE data for the satellite with catalog number 25544. Additionally, could you simplify the expression 2^2 + 2*2?",
        "relevant APIs": [],
        "query_id": 138
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query the Celestrak GP Data using Satellite Name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object",
                    "description": "Returns satellite data in the specified format."
                }
            }
        ],
        "query": "Can you provide the latest telemetry data for the Hubble Space Telescope and also find datasets related to bird species worldwide?",
        "relevant APIs": [],
        "query_id": 139
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "celestrak",
                "api_name": "query_by_name",
                "api_description": "Query GP data using satellite name.",
                "required_parameters": [
                    {
                        "name": "NAME",
                        "type": "STRING",
                        "description": "Satellite Name."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "FORMAT",
                        "type": "STRING",
                        "description": "Format of data. Defaults to 'TLE'.",
                        "default": "TLE"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string or object",
                    "description": "Responds with requested data in the specified format."
                }
            }
        ],
        "query": "I want to check the current TLE data for the Hubble Space Telescope and also find out how many people are currently in space.",
        "relevant APIs": [],
        "query_id": 140
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "gbif",
                "api_name": "search_datasets",
                "api_description": "Full-text search across all datasets. Results are ordered by relevance.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Full text search query"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset of the results"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "limit": "int",
                    "offset": "int",
                    "results": [
                        {
                            "key": "str",
                            "title": "str",
                            "type": "str",
                            "pub": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you search for datasets related to climate change and also provide me with a random trivia fact?",
        "relevant APIs": [],
        "query_id": 141
    },
    {
        "api_list": [
            {
                "category_name": "Science",
                "tool_name": "catfacts",
                "api_name": "get_cat_facts",
                "api_description": "Retrieve daily cat facts.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "text": "string",
                            "_id": "string",
                            "updatedAt": "string",
                            "createdAt": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide some recent scientific articles related to quantum computing from arXiv? Also, I would love to learn a fun cat fact for a break.",
        "relevant APIs": [],
        "query_id": 142
    },
    {
        "api_list": [
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v4_uuid",
                "api_description": "Generate version-4 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you get details of two random female users, and generate five version-4 UUIDs to be assigned to different profiles?",
        "relevant APIs": [],
        "query_id": 143
    },
    {
        "api_list": [
            {
                "tool_name": "uuidandguidgen",
                "api_name": "generate_v1_uuid",
                "api_description": "Generate version-1 UUIDs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "The number of UUIDs to generate.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "category_name": "FakeData"
            }
        ],
        "query": "Can you provide me with details of three random users and also generate three version-1 UUIDs for unique identification?",
        "relevant APIs": [],
        "query_id": 144
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            }
        ],
        "query": "Can you provide a random affirmation and also list some authors who write inspirational quotes?",
        "relevant APIs": [],
        "query_id": 145
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "adviceslip",
                "api_name": "get_advice_by_id",
                "api_description": "Returns a specific advice slip by slip_id.",
                "required_parameters": [
                    {
                        "name": "slip_id",
                        "type": "INTEGER",
                        "description": "The unique ID of the advice slip.",
                        "default": null
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "callback",
                        "type": "STRING",
                        "description": "Define your own callback function name for JSONP.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "slip": {
                        "slip_id": "int",
                        "advice": "str"
                    }
                }
            }
        ],
        "query": "I'm in the mood for some Kanye wisdom. Can you share a random quote from Kanye West?",
        "relevant APIs": [],
        "query_id": 146
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a single random quote with optional filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "maxLength",
                        "type": "INT"
                    },
                    {
                        "name": "minLength",
                        "type": "INT"
                    },
                    {
                        "name": "tags",
                        "type": "STRING"
                    },
                    {
                        "name": "author",
                        "type": "STRING"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "string",
                    "author": "string"
                }
            }
        ],
        "query": "I'm feeling a bit down today. Can you provide me with a random affirmation and a motivational quote?",
        "relevant APIs": [],
        "query_id": 147
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I'm looking for some advice related to 'happiness'. Could you search for it for me?",
        "relevant APIs": [],
        "query_id": 148
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_random_quote",
                "api_description": "Retrieve a random quote from Breaking Bad.",
                "category_name": "Inspiration",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "Get me a random quote from Breaking Bad and quotes by Tyrion Lannister from Game of Thrones.",
        "query_id": 149
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "Can you provide me with a motivational affirmation to start my day?",
        "relevant APIs": [],
        "query_id": 150
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            }
        ],
        "query": "I'm feeling a bit down today. Can you provide me with a motivational affirmation and a random design quote to uplift my spirit?",
        "relevant APIs": [],
        "query_id": 151
    },
    {
        "api_list": [
            {
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                },
                "category_name": "Inspiration"
            }
        ],
        "query": "Can you give me a random affirmation to motivate me today alongside a humorous Ron Swanson quote?",
        "relevant APIs": [],
        "query_id": 152
    },
    {
        "api_list": [
            {
                "tool_name": "gameofthrones",
                "api_name": "get_random_quotes",
                "api_description": "Get multiple random quotes from Game of Thrones.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of random quotes to return.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            }
        ],
        "query": "Please fetch 3 quotes each from Breaking Bad and Game of Thrones.",
        "query_id": 153
    },
    {
        "api_list": [
            {
                "tool_name": "breakingbad",
                "api_name": "get_multiple_quotes",
                "api_description": "Retrieve multiple quotes from Breaking Bad.",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "The number of quotes to retrieve.",
                        "default": "1"
                    }
                ],
                "category_name": "Inspiration",
                "required_parameters": []
            }
        ],
        "query": "Please fetch 3 quotes each from Breaking Bad and Game of Thrones.",
        "query_id": 154
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "kanye",
                "api_name": "get_random_kanye_quote",
                "api_description": "Fetches a random Kanye West quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "quote": "string"
                }
            }
        ],
        "query": "I'm looking for some inspiration. Can you give me a random affirmation or a thoughtful Kanye West quote?",
        "relevant APIs": [],
        "query_id": 155
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotesondesign",
                "api_name": "get_random_quotes",
                "api_description": "Retrieve quotes from the Quotes on Design API randomly.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "orderby",
                        "type": "STRING",
                        "description": "The order in which to sort the quotes. Use 'rand' for a random order.",
                        "default": "rand"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "title": {
                        "rendered": "str"
                    },
                    "content": {
                        "rendered": "str"
                    }
                }
            }
        ],
        "query": "I'm feeling a bit down today. Can you provide me with a motivational affirmation and a random design quote to uplift my spirit?",
        "relevant APIs": [],
        "query_id": 156
    },
    {
        "api_list": [
            {
                "tool_name": "ronswanson",
                "api_name": "get_quote",
                "api_description": "Fetches a single random Ron Swanson quote.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    "str"
                ],
                "category_name": "Inspiration"
            }
        ],
        "query": "Can you give me a random affirmation to motivate me today alongside a humorous Ron Swanson quote?",
        "relevant APIs": [],
        "query_id": 157
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            }
        ],
        "query": "I'm feeling a bit down today. Can you provide me with a random affirmation and a motivational quote?",
        "relevant APIs": [],
        "query_id": 158
    },
    {
        "api_list": [
            {
                "tool_name": "gameofthrones",
                "api_name": "get_quotes_by_character",
                "api_description": "Get quotes for a specific Game of Thrones character.",
                "required_parameters": [
                    {
                        "name": "character_slug",
                        "type": "STRING",
                        "description": "Slug of the character."
                    }
                ],
                "category_name": "Inspiration",
                "optional_parameters": [
                    {
                        "name": "number",
                        "type": "INTEGER",
                        "description": "Number of quotes to return.",
                        "default": "None"
                    }
                ]
            }
        ],
        "query": "Get me a random quote from Breaking Bad and quotes by Tyrion Lannister from Game of Thrones.",
        "query_id": 159
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "affirmations",
                "api_name": "get_random_affirmation",
                "api_description": "Fetch a random affirmation.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "affirmation": "string"
                }
            }
        ],
        "query": "I'm looking for some inspiration. Can you give me a random affirmation or a thoughtful Kanye West quote?",
        "relevant APIs": [],
        "query_id": 160
    },
    {
        "api_list": [
            {
                "category_name": "Inspiration",
                "tool_name": "quotable",
                "api_name": "list_authors",
                "api_description": "Get all authors matching the given query, with several options for sorting and filtering.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "slug",
                        "type": "STRING"
                    },
                    {
                        "name": "sortBy",
                        "type": "ENUM",
                        "default": "name"
                    },
                    {
                        "name": "order",
                        "type": "ENUM"
                    },
                    {
                        "name": "limit",
                        "type": "INT",
                        "default": "20"
                    },
                    {
                        "name": "page",
                        "type": "INT",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "string",
                            "bio": "string",
                            "slug": "string"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a random affirmation and also list some authors who write inspirational quotes?",
        "relevant APIs": [],
        "query_id": 161
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_intensity_statistics",
                "api_description": "Get Carbon Intensity statistics (average, max, min) between specified datetimes.",
                "required_parameters": [
                    {
                        "name": "from",
                        "type": "STRING",
                        "description": "Start datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    },
                    {
                        "name": "to",
                        "type": "STRING",
                        "description": "End datetime in ISO8601 format YYYY-MM-DDThh:mmZ"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "max": "number",
                            "average": "number",
                            "min": "number",
                            "index": "string"
                        }
                    }
                }
            }
        ],
        "query": "I'd like to know the carbon intensity statistics over the past week in the UK and also get the current market price of a 2018 Volkswagen Golf in Brazil.",
        "relevant APIs": [],
        "query_id": 162
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": []
            }
        ],
        "query": "Can you tell me the list of police forces available in the UK and find authors known for writing detective novels similar to Agatha Christie?",
        "relevant APIs": [],
        "query_id": 163
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_models",
                "api_description": "Fetch the models for a specified brand.",
                "required_parameters": [
                    {
                        "name": "brand_code",
                        "type": "STRING",
                        "description": "Code of the brand."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Please get me the available car models from Ford and also find authors related to automotive topics in the Open Library.",
        "relevant APIs": [],
        "query_id": 164
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_all_transactions",
                "api_description": "Retrieves all transcribed stock transactions in JSON format.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I want to analyze recent stock transaction trends by members of the U.S. House of Representatives while also seeking books about stock trading available through Open Library.",
        "relevant APIs": [],
        "query_id": 165
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "string",
                        "name": "string"
                    }
                ]
            }
        ],
        "query": "Can you provide the current electricity generation mix in Great Britain? Also, could you list all the police forces in the UK?",
        "relevant APIs": [],
        "query_id": 166
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "street_level_crimes",
                "api_description": "Returns crimes at street-level for a given latitude and longitude, optionally limited to a specific date.",
                "required_parameters": [
                    {
                        "name": "lat",
                        "type": "FLOAT",
                        "description": "Latitude of the location."
                    },
                    {
                        "name": "lng",
                        "type": "FLOAT",
                        "description": "Longitude of the location."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Optional date to filter the results (YYYY-MM)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "category": "str",
                    "location_type": "str",
                    "location": {
                        "latitude": "float",
                        "street": {
                            "id": "int",
                            "name": "str"
                        },
                        "longitude": "float"
                    },
                    "context": "str",
                    "outcome_status": {
                        "category": "str",
                        "date": "str"
                    },
                    "persistent_id": "str",
                    "id": "int",
                    "location_subtype": "str",
                    "month": "str"
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I want to know about the types of vehicles manufactured by Honda. Also, can you find out street-level crimes reported near the London Eye in longitude -0.1195 and latitude 51.5, September 2023?",
        "relevant APIs": [],
        "query_id": 167
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "What is the current carbon intensity in Great Britain and can you suggest books related to climate change?",
        "query_id": 168
    },
    {
        "api_list": [
            {
                "tool_name": "carbonintensity",
                "api_name": "get_current_intensity",
                "api_description": "Get Carbon Intensity data for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "intensity": {
                            "forecast": "number",
                            "actual": "number",
                            "index": "string"
                        }
                    }
                },
                "category_name": "OpenData"
            }
        ],
        "query": "Can you tell me the current carbon intensity and also find universities with the name 'Oxford'?",
        "relevant APIs": [],
        "query_id": 169
    },
    {
        "api_list": [
            {
                "tool_name": "housestockwatcher",
                "api_name": "get_daily_transaction_report",
                "api_description": "Fetches the JSON report for a single day's disclosure.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which to fetch the transaction report, in 'MM_DD_YYYY' format.",
                        "default": "01_01_2021"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "transactions": [
                        {
                            "transaction_date": "date",
                            "owner": "str",
                            "ticker": "str",
                            "asset_description": "str",
                            "asset_type": "str",
                            "amount": "str",
                            "transaction_type": "str"
                        }
                    ]
                },
                "category_name": "OpenData"
            }
        ],
        "query": "I need detailed information about the Leicestershire police force. Additionally, can you fetch the stock transaction report for 01/01/2021?",
        "relevant APIs": [],
        "query_id": 170
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "openlibrary",
                "api_name": "search_authors",
                "api_description": "Search for authors using the Open Library Authors API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string for author's name."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "docs": [
                        {
                            "name": "str",
                            "key": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me the list of police forces available in the UK and find authors known for writing detective novels similar to Agatha Christie?",
        "relevant APIs": [],
        "query_id": 171
    },
    {
        "api_list": [
            {
                "tool_name": "openlibrary",
                "api_name": "search_books",
                "api_description": "Search for books using the Open Library Search API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Query string to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to return."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort order."
                    },
                    {
                        "name": "lang",
                        "type": "STRING",
                        "description": "Language preference."
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for pagination."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page."
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Could you tell me about the car brands available in Brazil and also search for books related to automotive engineering?",
        "relevant APIs": [],
        "query_id": 172
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "carbonintensity",
                "api_name": "get_generation_mix_current",
                "api_description": "Get generation mix for the current half hour.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "from": "string",
                        "to": "string",
                        "generationmix": [
                            {
                                "fuel": "string",
                                "perc": "number"
                            }
                        ]
                    }
                }
            }
        ],
        "query": "Can you provide the current electricity generation mix in Great Britain? Also, could you list all the police forces in the UK?",
        "relevant APIs": [],
        "query_id": 173
    },
    {
        "api_list": [
            {
                "tool_name": "fipe",
                "api_name": "get_brands",
                "api_description": "Fetch the brands for the specified vehicle type.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "vehicle_type",
                        "type": "STRING",
                        "description": "Type of vehicle ('carros', 'motos', 'caminhoes')",
                        "default": "carros"
                    }
                ],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "Could you tell me about the car brands available in Brazil and also search for books related to automotive engineering?",
        "relevant APIs": [],
        "query_id": 174
    },
    {
        "api_list": [
            {
                "category_name": "OpenData",
                "tool_name": "archiveorg",
                "api_name": "search_items",
                "api_description": "Search for items using the Archive.org scraping API.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query string using Lucene-like syntax.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Metadata fields to return, comma-delimited.",
                        "default": "title"
                    },
                    {
                        "name": "sorts",
                        "type": "STRING",
                        "description": "Fields to sort results on, comma-delimited.",
                        "default": ""
                    },
                    {
                        "name": "count",
                        "type": "INTEGER",
                        "description": "Number of results to return.",
                        "default": "100"
                    },
                    {
                        "name": "cursor",
                        "type": "STRING",
                        "description": "Cursor for paginated results.",
                        "default": ""
                    },
                    {
                        "name": "total_only",
                        "type": "BOOLEAN",
                        "description": "If true, only returns the number of results.",
                        "default": "false"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I am researching the impact of technological advancements on carbon emissions. Can you find NASA-related items in the Archive.org collection and also provide the current carbon intensity data for Great Britain?",
        "relevant APIs": [],
        "query_id": 175
    },
    {
        "api_list": [
            {
                "tool_name": "datapoliceuk",
                "api_name": "list_forces",
                "api_description": "Returns a list of all police forces available via the API except the British Transport Police.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "OpenData"
            }
        ],
        "query": "List all the police forces in the UK. Also, find out which areas have ongoing pollution warnings as detected by PM2.5 monitoring devices.",
        "query_id": 176
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available competitions.",
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "str",
                            "name": "str",
                            "area": {
                                "name": "str",
                                "id": "int"
                            }
                        }
                    ]
                },
                "required_parameters": []
            }
        ],
        "query": "Can you provide the game log for a specific NHL player for the current season including both regular season and playoff games? Additionally, list all football competitions available worldwide.",
        "relevant APIs": [],
        "query_id": 177
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_standings",
                "api_description": "Retrieve standings for the specified date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "standings": [
                        {
                            "team_name": "str",
                            "points": "int",
                            "wins": "int",
                            "losses": "int"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "What were the NHL standings on November 8, 2023, and what football competitions are currently available in Europe?",
        "relevant APIs": [],
        "query_id": 178
    },
    {
        "api_list": [
            {
                "tool_name": "nhl",
                "api_name": "get_schedule",
                "api_description": "Get schedule data for a specified date range or current day.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in YYYY-MM-DD format.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Sports"
            }
        ],
        "query": "Can you list all the bike-sharing networks available right now? Also, could you provide the NHL schedule for the dates 9/25/2023-9/28/2023?",
        "query_id": 179
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "citybikes",
                "api_name": "get_network_details",
                "api_description": "Retrieve details of a specific bike-sharing network.",
                "required_parameters": [
                    {
                        "name": "network_id",
                        "type": "STRING",
                        "description": "The ID of the network.",
                        "default": "velib"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "network": {
                        "id": "str",
                        "name": "str",
                        "stations": [
                            {
                                "id": "str",
                                "name": "str",
                                "free_bikes": "int",
                                "empty_slots": "int"
                            }
                        ]
                    }
                }
            }
        ],
        "query": "Can you give me the details of the 'velib' bike-sharing network and a list of all football competitions?",
        "relevant APIs": [],
        "query_id": 180
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "soccerdata",
                "api_name": "list_competitions",
                "api_description": "List all available football competitions.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "areas",
                        "type": "STRING",
                        "description": "Comma separated list of area IDs.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "competitions": [
                        {
                            "id": "int",
                            "name": "str",
                            "area": {
                                "id": "int",
                                "name": "str"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of all the bike-sharing networks worldwide and all available football competitions?",
        "relevant APIs": [],
        "query_id": 181
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "citybikes",
                "api_name": "get_networks",
                "api_description": "Retrieve a list of all available bike-sharing networks.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "A comma-separated list of fields to include in the response.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "networks": [
                        {
                            "id": "str",
                            "name": "str",
                            "href": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide a list of all the bike-sharing networks worldwide and all available football competitions?",
        "relevant APIs": [],
        "query_id": 182
    },
    {
        "api_list": [
            {
                "category_name": "Sports",
                "tool_name": "nhl",
                "api_name": "get_player_game_log",
                "api_description": "Retrieve game log data for the specified player, season, and game type.",
                "required_parameters": [
                    {
                        "name": "player_id",
                        "type": "INTEGER",
                        "description": "The ID of the player.",
                        "default": null
                    },
                    {
                        "name": "season",
                        "type": "INTEGER",
                        "description": "The season (e.g., 20212022).",
                        "default": null
                    },
                    {
                        "name": "game_type",
                        "type": "INTEGER",
                        "description": "The game type (e.g., 2 for playoffs, 1 for regular season).",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "games": [
                        {
                            "date": "str",
                            "opponent": "str",
                            "points": "int",
                            "assists": "int",
                            "goals": "int"
                        }
                    ]
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the game log for a specific NHL player for the current season including both regular season and playoff games? Additionally, list all football competitions available worldwide.",
        "relevant APIs": [],
        "query_id": 183
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "search_spending_by_award",
                "api_description": "Searches awards data with filters.",
                "required_parameters": [
                    {
                        "name": "filters",
                        "type": "DICT",
                        "description": "The filters to apply."
                    },
                    {
                        "name": "fields",
                        "type": "LIST",
                        "description": "Fields to include in the response."
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field to sort the results by."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of sorting, 'asc' or 'desc'."
                    }
                ],
                "optional_parameters": [],
                "method": "POST",
                "template_response": {
                    "results": [
                        {
                            "Award ID": "int",
                            "Recipient Name": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide the population data for California for the year 2020? Additionally, search for government spending awards related to 'infrastructure' projects and list them by recipient name in descending order.",
        "relevant APIs": [],
        "query_id": 184
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_elections",
                "api_description": "Get one page of elections.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": "20"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for pagination.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "objects": []
                }
            }
        ],
        "query": "Can you provide me with a list of upcoming elections in Canada and the most recent population data for California, USA?",
        "relevant APIs": [],
        "query_id": 185
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "usaspending",
                "api_name": "get_agency_details",
                "api_description": "Returns agency overview information.",
                "required_parameters": [
                    {
                        "name": "toptier_agency_code",
                        "type": "STRING",
                        "description": "The code for the top-tier agency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "fiscal_year": "int",
                    "name": "str",
                    "abbreviation": "str",
                    "budget_authority_amount": "float",
                    "obligation": "float",
                    "outlay": "float",
                    "children": []
                }
            }
        ],
        "query": "What is the latest population of the United States? Also, can you provide an overview of the Department of Defense using the top-tier agency code '012'?",
        "relevant APIs": [],
        "query_id": 186
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "civix",
                "api_name": "search_content",
                "api_description": "Perform a search within an aspect of the content library.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query term to search for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "aspect",
                        "type": "STRING",
                        "description": "Aspect to search within.",
                        "default": "complete"
                    },
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "First hit to return.",
                        "default": "0"
                    },
                    {
                        "name": "end",
                        "type": "INTEGER",
                        "description": "Last hit to return.",
                        "default": "20"
                    },
                    {
                        "name": "n_frag",
                        "type": "INTEGER",
                        "description": "Number of fragment snippets to return.",
                        "default": "5"
                    },
                    {
                        "name": "l_frag",
                        "type": "INTEGER",
                        "description": "Length of each fragment.",
                        "default": "100"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I'm researching the legal implications of water legislation in British Columbia. Can you search for all contents related to the term 'water'? Also, could you get the latest national population statistics for the U.S.?",
        "relevant APIs": [],
        "query_id": 187
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "representcivicinformation",
                "api_name": "get_representatives_by_postal_code",
                "api_description": "Find representatives and boundaries by postal code, optionally limiting results to a specific boundary set.",
                "required_parameters": [
                    {
                        "name": "postal_code",
                        "type": "STRING",
                        "description": "The postal code for lookup, formatted in uppercase with no spaces.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "sets",
                        "type": "STRING",
                        "description": "Comma-separated list of boundary sets to limit results.",
                        "default": "None"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "boundaries_centroid": {},
                    "representatives_centroid": {},
                    "boundaries": [],
                    "representatives": []
                }
            }
        ],
        "query": "I want to know the current population of the United States and find representatives for the postal code L5G4L3 in Canada.",
        "relevant APIs": [],
        "query_id": 188
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "fbiwanted",
                "api_name": "get_wanted_list",
                "api_description": "Retrieve information from the FBI Wanted list.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "field_offices",
                        "type": "STRING",
                        "description": "Filter results by specific FBI field offices.",
                        "default": "None"
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of resources to retrieve.",
                        "default": "1"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "total": "int",
                    "page": "int",
                    "items": "array"
                }
            }
        ],
        "query": "Are there any wanted fugitives listed by the FBI's Los Angeles field office, and can you provide basic details about U.S. government agencies from the Federal Register?",
        "relevant APIs": [],
        "query_id": 189
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "datausa",
                "api_name": "get_population_data",
                "api_description": "Get population data for specified geographical drilldowns and measures.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "drilldowns",
                        "type": "STRING",
                        "description": "The geographical level to retrieve data for, e.g., 'Nation' or 'State'.",
                        "default": "Nation"
                    },
                    {
                        "name": "measures",
                        "type": "STRING",
                        "description": "The measure to retrieve data for, e.g., 'Population'.",
                        "default": "Population"
                    },
                    {
                        "name": "year",
                        "type": "STRING",
                        "description": "The year of data to retrieve, 'latest' for the most recent.",
                        "default": "latest"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "ID Nation": "01000US",
                            "Nation": "United States",
                            "ID Year": "int",
                            "Year": "str",
                            "Population": "int",
                            "Slug Nation": "str"
                        }
                    ],
                    "source": [
                        {
                            "measures": [
                                "Population"
                            ],
                            "annotations": {
                                "source_name": "Census Bureau",
                                "source_description": "Census Bureau conducts surveys of the United States Population, including the American Community Survey",
                                "dataset_name": "ACS 1-year Estimate",
                                "dataset_link": "http://www.census.gov/programs-surveys/acs/",
                                "table_id": "B01003",
                                "topic": "Diversity"
                            },
                            "name": "acs_yg_total_population_1",
                            "substitutions": []
                        }
                    ]
                }
            }
        ],
        "query": "What is the latest population data for the United States? Also, can you provide information about Brazil using its ISO code 'BR'?",
        "relevant APIs": [],
        "query_id": 190
    },
    {
        "api_list": [
            {
                "category_name": "Government",
                "tool_name": "dawum",
                "api_name": "get_last_update",
                "api_description": "Fetches the last update date of the database for election polls.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "Last_Update": "string"
                }
            }
        ],
        "query": "What is the latest update date for the election polls, and what was the GDP of the United States in 2020?",
        "relevant APIs": [],
        "query_id": 191
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I need information on long weekends in France for the year 2023. Additionally, could you provide the bank holidays for Northern Ireland this year?",
        "relevant APIs": [],
        "query_id": 192
    },
    {
        "api_list": [
            {
                "category_name": "Calendar",
                "tool_name": "ukbankholidays",
                "api_name": "get_bank_holidays",
                "api_description": "Retrieve bank holidays for different regions in the UK.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "division",
                        "type": "STRING",
                        "description": "The division for which to fetch the bank holidays.",
                        "default": "england-and-wales"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str",
                    "events": [
                        {
                            "title": "str",
                            "date": "str",
                            "notes": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about the public holidays next year in the United States and also provide me the bank holidays for Scotland?",
        "relevant APIs": [],
        "query_id": 193
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "Can you estimate the ages of Emily, Michael, and Emma in the UK? Also, can you provide the detailed browser and device information for the user agent 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'?",
        "relevant APIs": [],
        "query_id": 194
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "apicagent",
                "api_name": "get_user_agent_info",
                "api_description": "Retrieve parsed information about a user agent string using the GET method.",
                "required_parameters": [
                    {
                        "name": "ua",
                        "type": "STRING",
                        "description": "The user agent string URL encoded.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "browser_family": "str",
                    "client": {
                        "engine": "str",
                        "engine_version": "str",
                        "name": "str",
                        "type": "str",
                        "version": "str"
                    },
                    "device": {
                        "brand": "str",
                        "model": "str",
                        "type": "str"
                    },
                    "os": {
                        "name": "str",
                        "platform": "str",
                        "version": "str"
                    },
                    "os_family": "str"
                }
            }
        ],
        "query": "What is the estimated age of someone named John in the US and what detailed information can you provide about the user agent 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36'?",
        "relevant APIs": [],
        "query_id": 195
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "cloudflaretrace",
                "api_name": "cloudflaretrace",
                "api_description": "Retrieve trace information from Cloudflare including IP Address, Timestamp, User Agent, Country Code, and more.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "endpoint",
                        "type": "STRING",
                        "description": "The endpoint URL to query Cloudflare trace information.",
                        "default": "https://one.one.one.one/cdn-cgi/trace"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "ip": "str",
                    "ts": "float",
                    "uag": "str",
                    "loc": "str"
                }
            }
        ],
        "query": "Can you tell me the probable nationality of the name 'Alice' and also provide detailed trace information about my current internet connection, including IP address and country?",
        "relevant APIs": [],
        "query_id": 196
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to retrieve metadata for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "description": "Allows/disallows third-party ad requests.",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "description": "Enables/disables CSS animations.",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "description": "Enables audio source detection.",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "description": "Colorize output.",
                        "default": "true"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide me with the metadata information for GitHub's homepage 'https://github.com'? Also, can you tell me the possible nationalities associated with the name 'johnson'?",
        "relevant APIs": [],
        "query_id": 197
    },
    {
        "api_list": [
            {
                "tool_name": "microlink",
                "api_name": "retrieve_metadata",
                "api_description": "Retrieve metadata from any link.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL to retrieve metadata for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "adblock",
                        "type": "BOOLEAN",
                        "description": "Allows/disallows third-party ad requests.",
                        "default": "true"
                    },
                    {
                        "name": "animations",
                        "type": "BOOLEAN",
                        "description": "Enables/disables CSS animations.",
                        "default": "false"
                    },
                    {
                        "name": "audio",
                        "type": "BOOLEAN",
                        "description": "Enables audio source detection.",
                        "default": "false"
                    },
                    {
                        "name": "colors",
                        "type": "BOOLEAN",
                        "description": "Colorize output.",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "Can you estimate the age of someone named 'Sarah' from France, and also retrieve the metadata of her favorite website 'www.example.com'?",
        "relevant APIs": [],
        "query_id": 198
    },
    {
        "api_list": [
            {
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the website to screenshot."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "description": "Boolean to take a screenshot.",
                        "default": "true"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "status": "str",
                    "data": "dict"
                },
                "category_name": "DeveloperTools"
            }
        ],
        "query": "I have a list of names: ['Emma', 'Olivia', 'Liam']. Can you estimate their ages while also taking a screenshot of the website 'www.news.com'?",
        "relevant APIs": [],
        "query_id": 199
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "seralifcolor",
                "api_name": "get_color_info",
                "api_description": "Get information about a color in various formats and its contrasting text colors.",
                "required_parameters": [
                    {
                        "name": "color",
                        "type": "STRING",
                        "description": "The color in Keyword, HEX, RGB, RGBA, HSL, or HSLA format.",
                        "default": "aquamarine"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "base": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    },
                    "base_without_alpha": {
                        "hex": "str",
                        "rgb": "str",
                        "hsl": "str"
                    }
                },
                "optional_parameters": []
            }
        ],
        "query": "Can you estimate the nationality for a list of names: 'Anna', 'Raj', and 'Wei'? Also, I want to know the various color formats and contrasting text colors for the color 'coral'.",
        "relevant APIs": [],
        "query_id": 200
    },
    {
        "api_list": [
            {
                "category_name": "DeveloperTools",
                "tool_name": "microlink",
                "api_name": "take_screenshot",
                "api_description": "Take a screenshot of the target website.",
                "required_parameters": [
                    {
                        "name": "url",
                        "type": "STRING",
                        "description": "The URL of the website to screenshot."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "screenshot",
                        "type": "BOOLEAN",
                        "description": "Boolean to take a screenshot.",
                        "default": "true"
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "I need a screenshot of the YouTube homepage, 'youtube.com'. Also, can you predict the nationalities for the names 'emma' and 'liam'?",
        "relevant APIs": [],
        "query_id": 201
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_drug_event",
                "api_description": "Retrieve drug adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Can you provide detailed information about a specific healthcare article titled 'accessibility' and also show recent drug adverse event reports using 5 records?",
        "relevant APIs": [],
        "query_id": 202
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "openFDA",
                "api_name": "get_device_event",
                "api_description": "Retrieve device adverse event reports.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of records to return.",
                        "default": "10"
                    },
                    {
                        "name": "skip",
                        "type": "INTEGER",
                        "description": "Number of records to skip.",
                        "default": "0"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "meta": "object",
                    "results": "array"
                }
            }
        ],
        "query": "Find available glossary terms from HealthCare.gov and provide information on the recent 10 medical device adverse event reports.",
        "relevant APIs": [],
        "query_id": 203
    },
    {
        "api_list": [
            {
                "category_name": "Health",
                "tool_name": "healthcaregov",
                "api_name": "get_content_object",
                "api_description": "Retrieve a specific content post object by post title.",
                "required_parameters": [
                    {
                        "name": "post_title",
                        "type": "STRING",
                        "description": "The title of the post"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "title": "string",
                    "url": "string",
                    "content": "string",
                    "author": "string",
                    "date": "string",
                    "lang": "string",
                    "categories": "array",
                    "tags": "array",
                    "topics": "array",
                    "layout": "string",
                    "order": "integer"
                }
            }
        ],
        "query": "Can you provide details on a specific healthcare-related topic, such as accessibility, from HealthCare.gov, and also help me find vegan and cruelty-free makeup products?",
        "relevant APIs": [],
        "query_id": 204
    }
]