[
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "I am interested in the latest tick data for Bitcoin and want to see how it compares with the current exchange rates of the USD.",
        "relevant APIs": [],
        "query_id": 26
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve price data for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma-separated list of quotes to return.",
                        "default": "USD"
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What are the current price and trading details for Bitcoin?",
        "query_id": 27
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_all_tickers",
                "api_description": "Retrieve tick data for multiple crypto coins, sorted by market cap.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "start",
                        "type": "INTEGER",
                        "description": "The starting position for results.",
                        "default": "0"
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The maximum number of results to retrieve.",
                        "default": "100"
                    }
                ]
            },
            {
                "category_name": "Finance",
                "tool_name": "exchangerate",
                "api_name": "get_latest_exchange_rates",
                "api_description": "Fetches the latest exchange rates for a given base currency.",
                "required_parameters": [
                    {
                        "name": "base_currency",
                        "type": "STRING",
                        "description": "The base currency ISO 4217 code.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all cryptocurrencies ranked by their market cap and also give me the current exchange rates for the US dollar?",
        "relevant APIs": [],
        "query_id": 28
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_buy_price",
                "api_description": "Get the total price to buy one bitcoin or ether.",
                "required_parameters": [
                    {
                        "name": "currency_pair",
                        "type": "STRING",
                        "description": "Currency pair e.g. 'BTC-USD'."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve price data for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma-separated list of quotes to return.",
                        "default": "USD"
                    }
                ],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What is the buy price for 1 Bitcoin in USD, and can you show me its price data using coin ID?",
        "relevant APIs": [],
        "query_id": 29
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_global_market_overview",
                "api_description": "Returns global market overview metrics.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "What is the current global cryptocurrency market cap and how many cryptocurrencies are there in total?",
        "query_id": 30
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "rank": "int",
                    "price_usd": "float",
                    "market_cap_usd": "float",
                    "percent_change_1h": "float",
                    "percent_change_24h": "float",
                    "percent_change_7d": "float",
                    "volume24": "float",
                    "volume24a": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "IFSC": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CONTACT": "str or null",
                    "CITY": "str",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "What is the current price of Bitcoin and can you provide the details of Delhi Nagrik Sehkari Bank using IFSC code YESB0DNB002?",
        "relevant APIs": [],
        "query_id": 31
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "coins_count": "int",
                    "active_markets": "int",
                    "total_market_cap_usd": "float",
                    "total_24h_volume_usd": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    },
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "Comma-separated list of token addresses."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "string",
                            "attributes": {
                                "symbol": "string",
                                "price_usd": "float"
                            }
                        }
                    ]
                }
            }
        ],
        "query": "Can you provide an overview of the global cryptocurrency statistics and also fetch the current USD price of Ethereum on the Ethereum network?",
        "relevant APIs": [],
        "query_id": 32
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_markets_for_coin",
                "api_description": "Retrieve top 50 exchanges and markets for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "get_exchanges_by_coin_id",
                "api_description": "Returns exchanges where a given coin is traded.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve exchange data for."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            }
        ],
        "query": "Where can Ethereum be traded and what are the top exchanges for it?",
        "query_id": 33
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "price_converter",
                "api_description": "Converts a set amount of base currency to quote currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "base_currency_id",
                        "type": "STRING",
                        "description": "The ID of the base currency."
                    },
                    {
                        "name": "quote_currency_id",
                        "type": "STRING",
                        "description": "The ID of the quote currency."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "amount",
                        "type": "FLOAT",
                        "description": "Amount to convert.",
                        "default": 0
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/price-converter",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_gold_price",
                "api_description": "Fetch the price of gold.",
                "method": "GET",
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/cenyzlota",
                "statuscode": 200,
                "category_name": "Finance",
                "required_parameters": []
            }
        ],
        "query": "I want to convert 10 Ether to Bitcoin equivalents. Also, show me the current gold price.",
        "relevant APIs": [],
        "query_id": 34
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "gemini",
                "api_name": "get_fee_promos",
                "api_description": "Retrieve symbols that currently have fee promos.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            }
        ],
        "query": "What are all the exchanges listed on Coinlore, and which trading pairs have fee promotions on Gemini?",
        "query_id": 35
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ohlc_data",
                "api_description": "Get OHLC (open/high/low/close) data for a given market.",
                "required_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "interval",
                        "type": "INTEGER",
                        "description": "Time frame interval in minutes"
                    },
                    {
                        "name": "since",
                        "type": "INTEGER",
                        "description": "Return up to 720 OHLC data points since given timestamp"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "What are the historical price details in OHLC format for the pair BTCUSD on Kraken and BTCEUR on N.exchange for the past 24 hours?",
        "relevant APIs": [],
        "query_id": 36
    },
    {
        "api_list": [
            {
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "currency": "string",
                        "rates": {
                            "string": "string"
                        }
                    }
                },
                "category_name": "Finance"
            },
            {
                "tool_name": "kucoin",
                "api_name": "get_fiat_price",
                "api_description": "Get the fiat price of the currencies for the available trading pairs.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "base",
                        "type": "STRING",
                        "description": "Base currency ticker symbol (default is 'USD')."
                    },
                    {
                        "name": "currencies",
                        "type": "STRING",
                        "description": "Comma-separated list of cryptocurrencies to be converted into fiat (e.g., 'BTC,ETH')."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": {
                        "BTC": "string",
                        "ETH": "string"
                    }
                },
                "category_name": "Finance"
            }
        ],
        "query": "What are the current cryptocurrency exchange rates against USD on Coinbase, and can you also get the fiat prices of BTC and ETH from Kucoin?",
        "relevant APIs": [],
        "query_id": 37
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_order_book",
                "api_description": "Retrieve the order book for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which the order book is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "I want to see the current exchange rate for USD from the NBP service's table A and also check the order book for Bitcoin-USDT trading pair on OKX.",
        "relevant APIs": [],
        "query_id": 38
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "geckoterminal",
                "api_name": "get_token_price",
                "api_description": "Get current USD prices of multiple tokens on a network.",
                "required_parameters": [
                    {
                        "name": "network",
                        "type": "STRING",
                        "description": "The blockchain network to query (e.g., 'ethereum', 'bsc')."
                    },
                    {
                        "name": "addresses",
                        "type": "STRING",
                        "description": "Comma-separated list of token addresses."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "id": "str",
                            "symbol": "str",
                            "name": "str",
                            "price_usd": "float"
                        }
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "str",
                    "BRANCH": "str",
                    "ADDRESS": "str",
                    "CITY": "str",
                    "IFSC": "str",
                    "CONTACT": "str or null",
                    "RTGS": "bool",
                    "MICR": "str or null",
                    "UPI": "bool",
                    "NEFT": "bool",
                    "IMPS": "bool"
                }
            }
        ],
        "query": "Can you check the current USD price of the Ethereum token on its network? Additionally, I'd like to find the details of a bank branch using its IFSC code, say YESB0DNB002.",
        "relevant APIs": [],
        "query_id": 39
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "str",
                    "name": "str",
                    "price_usd": "float"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_latest_price",
                "api_description": "Gets latest price of the pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "pair_name": "str",
                    "timestamp": "str",
                    "price": "float"
                }
            }
        ],
        "query": "Can you provide the current price of Bitcoin (BTC) using Coinlore data and also get the latest price for the BTCLTC pair using N.exchange?",
        "relevant APIs": [],
        "query_id": 40
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_global_stats",
                "api_description": "Retrieve global crypto statistics.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "coins_count": "int",
                    "active_markets": "int",
                    "total_mcap": "str",
                    "total_volume": "str",
                    "btc_d": "str",
                    "eth_d": "str",
                    "mcap_change": "str",
                    "volume_change": "str",
                    "avg_change_percent": "str",
                    "volume_ath": "str",
                    "mcap_ath": "str"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_system_status",
                "api_description": "Get the current system status or trading mode.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "result": {
                        "status": "string",
                        "timestamp": "string"
                    }
                }
            }
        ],
        "query": "What is the current global status of the cryptocurrency market, and is Kraken's trading system currently operational?",
        "relevant APIs": [],
        "query_id": 41
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinbase",
                "api_name": "get_exchange_rates",
                "api_description": "Get current exchange rates. Default base currency is USD.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "currency",
                        "type": "STRING",
                        "description": "Base currency (default: USD)."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "currency": "string",
                    "rates": {
                        "string": "string"
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "coincap",
                "api_name": "get_markets",
                "api_description": "A list of all markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of markets to retrieve.",
                        "default": "100"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "exchangeId": "str",
                            "baseId": "str",
                            "quoteId": "str",
                            "baseSymbol": "str",
                            "quoteSymbol": "str",
                            "volumeUsd24Hr": "str",
                            "priceUsd": "str",
                            "volumePercent": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What are the current exchange rates for USD and can you list the top cryptocurrency markets?",
        "relevant APIs": [],
        "query_id": 42
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ticker_information",
                "api_description": "Get ticker information for all or requested markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for (optional, default: all tradeable exchange pairs)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": {
                        "pair_name": {
                            "a": [
                                "price",
                                "whole lot volume",
                                "lot volume"
                            ],
                            "b": [
                                "price",
                                "whole lot volume",
                                "lot volume"
                            ],
                            "c": [
                                "price",
                                "lot volume"
                            ],
                            "v": [
                                "today",
                                "last 24 hours"
                            ],
                            "p": [
                                "today",
                                "last 24 hours"
                            ],
                            "t": [
                                "today",
                                "last 24 hours"
                            ],
                            "l": [
                                "today",
                                "last 24 hours"
                            ],
                            "h": [
                                "today",
                                "last 24 hours"
                            ],
                            "o": "string"
                        }
                    }
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "okx",
                "api_name": "get_market_ticker",
                "api_description": "Retrieve the market ticker information for a specified instrument.",
                "required_parameters": [
                    {
                        "name": "inst_id",
                        "type": "STRING",
                        "description": "The instrument ID for which ticker information is required.",
                        "default": "BTC-USDT"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": [
                        {
                            "instId": "str",
                            "last": "float",
                            "lastSz": "float",
                            "askPx": "float",
                            "askSz": "float",
                            "bidPx": "float",
                            "bidSz": "float",
                            "open24h": "float",
                            "high24h": "float",
                            "low24h": "float",
                            "vol24h": "float"
                        }
                    ],
                    "code": "int",
                    "msg": "str"
                }
            }
        ],
        "query": "What is the current market ticker information for BTC-USDT on both Kraken and OKX?",
        "relevant APIs": [],
        "query_id": 44
    },
    {
        "api_list": [
            {
                "tool_name": "coinpaprika",
                "api_name": "get_ticker_by_id",
                "api_description": "Returns price data of a single cryptocurrency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency to retrieve price data for."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "quotes",
                        "type": "STRING",
                        "description": "Comma-separated list of quotes to return.",
                        "default": "USD"
                    }
                ],
                "url": "https://api.coinpaprika.com/v1/tickers/{coin_id}",
                "statuscode": 200,
                "category_name": "Finance"
            },
            {
                "tool_name": "nbpweb",
                "api_name": "get_currency_exchange_rate",
                "api_description": "Fetch the exchange rate of a specific currency.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "table",
                        "type": "STRING",
                        "description": "Type of table 'A', 'B', or 'C'.",
                        "default": "A"
                    },
                    {
                        "name": "code",
                        "type": "STRING",
                        "description": "Currency code based on ISO 4217.",
                        "default": "USD"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "top_count",
                        "type": "INTEGER",
                        "description": "Return last top_count entries."
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "Specific date in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "start_date",
                        "type": "STRING",
                        "description": "Start date for range in 'YYYY-MM-DD' format."
                    },
                    {
                        "name": "end_date",
                        "type": "STRING",
                        "description": "End date for range in 'YYYY-MM-DD' format."
                    }
                ],
                "url": "http://api.nbp.pl/api/exchangerates/rates/{table}/{code}",
                "statuscode": 200,
                "category_name": "Finance"
            }
        ],
        "query": "Can you provide the current price of Bitcoin in USD and also give the exchange rate of USD from table 'A'?",
        "relevant APIs": [],
        "query_id": 45
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinmap",
                "api_name": "get_venues",
                "api_description": "Retrieve a list of venues with optional filtering parameters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "lat1",
                        "type": "FLOAT",
                        "description": "Minimum latitude."
                    },
                    {
                        "name": "lat2",
                        "type": "FLOAT",
                        "description": "Maximum latitude."
                    },
                    {
                        "name": "lon1",
                        "type": "FLOAT",
                        "description": "Minimum longitude."
                    },
                    {
                        "name": "lon2",
                        "type": "FLOAT",
                        "description": "Maximum longitude."
                    },
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Substring search in venue names."
                    },
                    {
                        "name": "category",
                        "type": "STRING",
                        "description": "Filter category."
                    },
                    {
                        "name": "owner",
                        "type": "STRING",
                        "description": "Venue owner (userhash)."
                    },
                    {
                        "name": "upvoter",
                        "type": "STRING",
                        "description": "User who upvoted the venue."
                    },
                    {
                        "name": "before",
                        "type": "STRING",
                        "description": "Show venues created before the date."
                    },
                    {
                        "name": "after",
                        "type": "STRING",
                        "description": "Show venues created after the date."
                    },
                    {
                        "name": "promoted",
                        "type": "BOOLEAN",
                        "description": "Show promoted venues."
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit number of results.",
                        "default": "10"
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Skip first N results.",
                        "default": "0"
                    },
                    {
                        "name": "mode",
                        "type": "STRING",
                        "description": "Result mode.",
                        "default": "list"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "venues": "array",
                    "count": "integer"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_asset_info",
                "api_description": "Get information about the assets that are available for deposit, withdrawal, trading, and earn.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "asset",
                        "type": "STRING",
                        "description": "Comma delimited list of assets to get info on (optional, default all available assets)"
                    },
                    {
                        "name": "aclass",
                        "type": "STRING",
                        "description": "Asset class (optional, default: currency)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "object"
                }
            }
        ],
        "query": "Can you find venues accepting cryptocurrency near New York City and list available trading assets on Kraken?",
        "relevant APIs": [],
        "query_id": 46
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "symbol": "string",
                    "name": "string",
                    "nameid": "string",
                    "rank": "int",
                    "price_usd": "string",
                    "percent_change_24h": "string",
                    "percent_change_1h": "string",
                    "percent_change_7d": "string",
                    "market_cap_usd": "string",
                    "volume24": "string",
                    "volume24_native": "string",
                    "csupply": "string",
                    "price_btc": "string",
                    "tsupply": "string",
                    "msupply": "string"
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "kraken",
                "api_name": "get_ticker_information",
                "api_description": "Get ticker information for all or requested markets.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pair",
                        "type": "STRING",
                        "description": "Asset pair to get data for (optional, default: all tradeable exchange pairs)"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": {
                        "pair_name": {
                            "a": [
                                "string",
                                "string",
                                "string"
                            ],
                            "b": [
                                "string",
                                "string",
                                "string"
                            ],
                            "c": [
                                "string",
                                "string"
                            ],
                            "v": [
                                "string",
                                "string"
                            ],
                            "p": [
                                "string",
                                "string"
                            ],
                            "t": [
                                "int",
                                "int"
                            ],
                            "l": [
                                "string",
                                "string"
                            ],
                            "h": [
                                "string",
                                "string"
                            ],
                            "o": "string"
                        }
                    }
                }
            }
        ],
        "query": "Can you provide the current market data for Bitcoin from both Coinlore and Kraken?",
        "relevant APIs": [],
        "query_id": 47
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "coinlore",
                "api_name": "get_ticker",
                "api_description": "Retrieve tick data for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "dexscreener",
                "api_name": "search_pairs",
                "api_description": "Search for pairs matching the query.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Query that includes pair address, token address, token name, or token symbol."
                    }
                ],
                "optional_parameters": [],
                "method": "GET"
            }
        ],
        "query": "Give me the tick data of Bitcoin using its coin_id and any related trading pairs based on its token symbol.",
        "query_id": 48
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_candles",
                "api_description": "Retrieves time-intervaled data for the provided symbol.",
                "required_parameters": [
                    {
                        "name": "symbol",
                        "type": "STRING",
                        "description": "Trading pair symbol."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "time_frame",
                        "type": "STRING",
                        "description": "Time range for each candle",
                        "default": "15m"
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Finance",
                "tool_name": "nexchange",
                "api_name": "get_price_history",
                "api_description": "Returns price history for selected pair.",
                "required_parameters": [
                    {
                        "name": "pair_name",
                        "type": "STRING",
                        "description": "Name of exchanged pair."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "hours",
                        "type": "FLOAT",
                        "description": "Number of hours back to get prices for."
                    },
                    {
                        "name": "data_points",
                        "type": "INTEGER",
                        "description": "Number of data points to retrieve."
                    },
                    {
                        "name": "market_code",
                        "type": "STRING",
                        "description": "Price market code."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you retrieve the 15-minute interval trading data for BTC/USD on Gemini and also provide the price history for Bitcoin to Litecoin exchange on N.exchange over the last hour?",
        "relevant APIs": [],
        "query_id": 49
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_all_exchanges",
                "api_description": "Get all exchanges listed on the platform.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "coinpaprika",
                "api_name": "list_exchanges",
                "api_description": "Returns basic information about exchanges.",
                "method": "GET",
                "category_name": "Finance",
                "required_parameters": [],
                "optional_parameters": []
            }
        ],
        "query": "Can you provide me with a list of all cryptocurrency exchanges?",
        "query_id": 51
    },
    {
        "api_list": [
            {
                "tool_name": "coinlore",
                "api_name": "get_social_stats",
                "api_description": "Get social stats for a specific coin.",
                "required_parameters": [
                    {
                        "name": "coin_id",
                        "type": "STRING",
                        "description": "The ID of the cryptocurrency."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Finance"
            },
            {
                "tool_name": "coinmap",
                "api_name": "get_rating",
                "api_description": "Get ratings for a specific venue.",
                "required_parameters": [
                    {
                        "name": "venue_id",
                        "type": "INTEGER",
                        "description": "Venue ID to retrieve ratings for."
                    }
                ],
                "method": "GET",
                "category_name": "Finance",
                "optional_parameters": []
            }
        ],
        "query": "I am interested in the social media statistics for Ethereum and also want to know the ratings for a cryptocurrency-accepting venue in my area.",
        "relevant APIs": [],
        "query_id": 52
    },
    {
        "api_list": [
            {
                "category_name": "Finance",
                "tool_name": "gemini",
                "api_name": "get_symbols",
                "api_description": "Retrieves all available symbols for trading.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "symbols": [
                        "string"
                    ]
                }
            },
            {
                "category_name": "Finance",
                "tool_name": "razorpay",
                "api_name": "get_bank_details_by_ifsc",
                "api_description": "Retrieve bank details by providing an IFSC code.",
                "required_parameters": [
                    {
                        "name": "ifsc_code",
                        "type": "STRING",
                        "description": "The IFSC code of the bank branch."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "BANK": "string",
                    "IFSC": "string",
                    "BRANCH": "string",
                    "ADDRESS": "string",
                    "CONTACT": "string or null",
                    "CITY": "string",
                    "RTGS": "boolean",
                    "MICR": "string or null",
                    "UPI": "boolean",
                    "NEFT": "boolean",
                    "IMPS": "boolean"
                }
            }
        ],
        "query": "Can you provide a list of all available trading symbols and also give me the details of a bank using IFSC code 'YESB0DNB002'?",
        "relevant APIs": [],
        "query_id": 53
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Could you list the Chinese dynasties available in the Chinese Text Project? Additionally, what is the definition of the word 'dynasty' in English?",
        "query_id": 54
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a Chinese character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide the basic data about the Chinese character '\u597d'? Also, what does the English word 'benevolent' mean?",
        "query_id": 55
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "filtered text"
                }
            }
        ],
        "query": "Can you give me the definition of the word 'serendipity' and also filter profanity from the sentence 'This is a fucking amazing day'?",
        "relevant APIs": [],
        "query_id": 56
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "method": "GET",
                "category_name": "Language",
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_plain",
                "api_description": "Filter profanity from text and return result as plain text.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "category_name": "Language"
            }
        ],
        "query": "Provide a list of dynasties from Chinese history. Additionally, filter out any profanities from the statement 'This dynasty is freaking amazing!' and return the cleaned text in plain format.",
        "relevant APIs": [],
        "query_id": 57
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "gettext",
                "api_description": "Returns the textual content of a chapter of text.",
                "required_parameters": [
                    {
                        "name": "urn",
                        "type": "STRING",
                        "description": "URN specifying the text to return."
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "optional_parameters": []
            }
        ],
        "query": "Please retrieve the text from the URN 'ctp:analects/xue-er'. Also, I would like to know the definition of the English word 'philosophy'.",
        "query_id": 58
    },
    {
        "api_list": [
            {
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Checks if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "What is the basic data of the Chinese character '\u4ec1'? Also, does this sentence 'I went to the park today.' contain any profanity?",
        "relevant APIs": [],
        "query_id": 60
    },
    {
        "api_list": [
            {
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "str",
                        "score": "int"
                    }
                ],
                "category_name": "Language"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "template_response": "true or false",
                "category_name": "Language",
                "optional_parameters": []
            }
        ],
        "query": "I'm typing part of an unfamiliar word and need suggestions to complete it. However, I want to ensure none of the suggested words are profane. Can you provide some suggestions?",
        "relevant APIs": [],
        "query_id": 61
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_all_characters",
                "api_description": "Returns all characters, optionally filtered, or the count of characters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "filter",
                        "type": "STRING",
                        "description": "Filter for the characters."
                    },
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Specify fields for the characters."
                    },
                    {
                        "name": "count",
                        "type": "BOOLEAN",
                        "description": "Return count instead of characters."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ],
                    "count": "int"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide a list of Chinese characters that are filtered by the 'gb' filter and also find words that mean the same as 'ringing in the ears'?",
        "relevant APIs": [],
        "query_id": 62
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "Can you suggest some words starting with 'hap' and provide the definition for one of them?",
        "relevant APIs": [],
        "query_id": 63
    },
    {
        "api_list": [
            {
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "str",
                        "score": "int"
                    }
                ],
                "category_name": "Language"
            },
            {
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "str"
                },
                "category_name": "Language"
            }
        ],
        "query": "I need to find words related to happiness that don't contain any profanity. Can you provide a list of such words?",
        "relevant APIs": [],
        "query_id": 64
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getcharacter",
                "api_description": "Returns basic data about a character.",
                "required_parameters": [
                    {
                        "name": "char",
                        "type": "STRING",
                        "description": "Character to describe."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "char": "str",
                    "translations": [
                        "str"
                    ],
                    "radical": "str",
                    "stroke_count": "int"
                },
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "What is the meaning and basic details of the Chinese character '\u7231'? Also, give me words that mean the same as 'love' using an English vocabulary.",
        "relevant APIs": [],
        "query_id": 65
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "phonetics": [
                            {
                                "text": "string",
                                "audio": "string"
                            }
                        ],
                        "origin": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string",
                                        "example": "string",
                                        "synonyms": [],
                                        "antonyms": []
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": "true or false"
            }
        ],
        "query": "What is the definition of the word 'quixotic' and does the sentence 'Great job, now let's make sure everyone's idea is expressed!' contain any profanity?",
        "relevant APIs": [],
        "query_id": 66
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_sounds_mandarin",
                "api_description": "Returns a list of Mandarin sounds, optionally with pitch.",
                "optional_parameters": [
                    {
                        "name": "with_pitch",
                        "type": "BOOLEAN",
                        "description": "Include pitch in sounds."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "mandarin": [
                        "str"
                    ]
                },
                "required_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "filter_text_json",
                "api_description": "Filter profanity from text and return result as JSON.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be processed."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "add",
                        "type": "STRING",
                        "description": "Comma separated words to add to the profanity list."
                    },
                    {
                        "name": "fill_text",
                        "type": "STRING",
                        "description": "Text for replacing profane words."
                    },
                    {
                        "name": "fill_char",
                        "type": "STRING",
                        "description": "Character to replace profane words."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "result": "resulting text"
                }
            }
        ],
        "query": "List the Mandarin sounds along with their pitch and filter the text 'Shit, what a fantastic day!' for any profane language, replacing the words with '[censored]'.",
        "relevant APIs": [],
        "query_id": 68
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesetext",
                "api_name": "getdynasties",
                "api_description": "Returns a list of identifiers, labels, and dates for dynasties used in the Chinese Text Project.",
                "required_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "id": "string",
                        "label": "string",
                        "start": "string",
                        "end": "string"
                    }
                ],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "sug",
                "api_description": "Provides word suggestions given a partial query for autocomplete.",
                "required_parameters": [
                    {
                        "name": "s",
                        "type": "STRING",
                        "description": "Prefix hint string entered by user."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 10).",
                        "default": "10"
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, like in /words."
                    }
                ],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "score": "integer"
                    }
                ]
            }
        ],
        "query": "Can you provide me a list of Chinese dynasties with their historical periods? Additionally, suggest words that start with 'hist' for autocomplete.",
        "relevant APIs": [],
        "query_id": 69
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_version",
                "api_description": "Returns date information about the CCDB service, the Unicode version, and the PHP/MySQL versions.",
                "method": "GET",
                "template_response": {
                    "date": "str",
                    "unicodeVersion": "str",
                    "phpVersion": "str",
                    "mysqlVersion": "str"
                },
                "required_parameters": [],
                "optional_parameters": []
            },
            {
                "category_name": "Language",
                "tool_name": "purgomalum",
                "api_name": "contains_profanity",
                "api_description": "Check if input text contains profanity.",
                "required_parameters": [
                    {
                        "name": "text",
                        "type": "STRING",
                        "description": "Input text to be checked for profanity."
                    }
                ],
                "method": "GET",
                "template_response": "true or false",
                "optional_parameters": []
            }
        ],
        "query": "What is the current version information of the Chinese Character Web API, and can you check if the phrase 'This is a test!' contains any profanity?",
        "relevant APIs": [],
        "query_id": 70
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "chinesecharacterweb",
                "api_name": "get_characters_by_radical",
                "api_description": "Returns characters that use a specific Kangxi radical, optionally filtered by additional strokes.",
                "required_parameters": [
                    {
                        "name": "radical",
                        "type": "INTEGER",
                        "description": "Kangxi radical number."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "strokes",
                        "type": "INTEGER",
                        "description": "Filter by number of additional strokes."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        "str"
                    ]
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": [
                    {
                        "word": "string",
                        "phonetic": "string",
                        "meanings": [
                            {
                                "partOfSpeech": "string",
                                "definitions": [
                                    {
                                        "definition": "string"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "query": "Can you list all Chinese characters that have the Kangxi radical number 85 and provide the definition of the English word 'radical'?",
        "relevant APIs": [],
        "query_id": 71
    },
    {
        "api_list": [
            {
                "category_name": "Language",
                "tool_name": "datamuse",
                "api_name": "words",
                "api_description": "Returns a list of words matching given constraints.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "ml",
                        "type": "STRING",
                        "description": "Means like constraint."
                    },
                    {
                        "name": "sl",
                        "type": "STRING",
                        "description": "Sounds like constraint."
                    },
                    {
                        "name": "sp",
                        "type": "STRING",
                        "description": "Spelled like constraint."
                    },
                    {
                        "name": "rel_code",
                        "type": "STRING",
                        "description": "Related word constraint codes like 'syn', 'trg'."
                    },
                    {
                        "name": "v",
                        "type": "STRING",
                        "description": "Vocab identifier, e.g., 'enwiki' for English Wikipedia."
                    },
                    {
                        "name": "topics",
                        "type": "STRING",
                        "description": "Hints about the context or topic."
                    },
                    {
                        "name": "lc",
                        "type": "STRING",
                        "description": "Left context hint."
                    },
                    {
                        "name": "rc",
                        "type": "STRING",
                        "description": "Right context hint."
                    },
                    {
                        "name": "max",
                        "type": "INTEGER",
                        "description": "Max number of results (default is 100).",
                        "default": "100"
                    },
                    {
                        "name": "md",
                        "type": "STRING",
                        "description": "Metadata flags like 'd' for definitions."
                    },
                    {
                        "name": "qe",
                        "type": "STRING",
                        "description": "Query echo."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "score": "integer"
                }
            },
            {
                "category_name": "Language",
                "tool_name": "freedictionary",
                "api_name": "get_word_definition",
                "api_description": "Retrieve the definition of the specified English word.",
                "required_parameters": [
                    {
                        "name": "word",
                        "type": "STRING",
                        "description": "The word to get the definition for.",
                        "default": ""
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "word": "string",
                    "phonetic": "string",
                    "phonetics": [
                        {
                            "text": "string",
                            "audio": "string"
                        }
                    ],
                    "origin": "string",
                    "meanings": [
                        {
                            "partOfSpeech": "string",
                            "definitions": [
                                {
                                    "definition": "string",
                                    "example": "string",
                                    "synonyms": [],
                                    "antonyms": []
                                }
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "What are some words related to 'spoon' and can you provide the definition of one of these words?",
        "relevant APIs": [],
        "query_id": 72
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "author_search",
                "api_description": "Search for authors by name.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term to search for authors.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Who are the characters from the Final Space show, and could you provide information about any authors named 'Hemingway' from Open Library?",
        "relevant APIs": [],
        "query_id": 73
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_episode_by_id",
                "api_description": "Retrieves an episode by its ID.",
                "required_parameters": [
                    {
                        "name": "episode_id",
                        "type": "INTEGER",
                        "description": "The episode ID.",
                        "default": null
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_prayer_by_date",
                "api_description": "Returns a rosary prayer for a specific date.",
                "required_parameters": [
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date in MMDDYY format for which to retrieve the rosary prayer."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Could you provide the details of the episode with ID 5 from the Final Space series, and the rosary prayer for August 28, 2024?",
        "relevant APIs": [],
        "query_id": 74
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "content": "bytes"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "results": [
                        "dict"
                    ]
                }
            }
        ],
        "query": "I am interested in the latest anime reports that start with the letter 'B'. Can you also search for TV shows related to 'Breaking Bad'?",
        "relevant APIs": [],
        "query_id": 75
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_anime_details",
                "api_description": "Fetch detailed information for anime/manga titles by ID or name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "id",
                        "type": "STRING",
                        "description": "Fetch details by ID."
                    },
                    {
                        "name": "anime",
                        "type": "STRING",
                        "description": "Fetch by anime ID."
                    },
                    {
                        "name": "manga",
                        "type": "STRING",
                        "description": "Fetch by manga ID."
                    },
                    {
                        "name": "title",
                        "type": "STRING",
                        "description": "Fetch by name."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "anime_details": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film from the Star Wars series.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "title": "str",
                            "episode_id": "int",
                            "opening_crawl": "str",
                            "director": "str",
                            "producer": "str",
                            "release_date": "str"
                        }
                    ]
                }
            }
        ],
        "query": "I want detailed information on the anime 'Naruto', and I'm interested in finding Star Wars films with 'Empire' in the title.",
        "relevant APIs": [],
        "query_id": 76
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "search_shows",
                "api_description": "Search for shows by name using a fuzzy search.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show to search for."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Search Wikipedia for articles related to 'Game of Thrones' and find all shows named 'Game of Thrones' or similar from TVmaze API.",
        "relevant APIs": [],
        "query_id": 77
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "id": "int",
                    "name": "str",
                    "air_date": "str"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_episodes",
                "api_description": "Pagination over episodes.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "episodes": [
                        {
                            "uid": "str",
                            "title": "str",
                            "seasonNumber": "int"
                        }
                    ]
                }
            }
        ],
        "query": "Could you list all the episodes from Final Space and provide a paginated list of episodes from Star Trek?",
        "relevant APIs": [],
        "query_id": 78
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str",
                    "previous": "str",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ]
                        }
                    ]
                }
            }
        ],
        "query": "I'm interested in learning more about the Star Wars character 'Luke Skywalker'. Can you provide information from Wikipedia about Luke Skywalker and retrieve details from the Star Wars API as well?",
        "relevant APIs": [],
        "query_id": 79
    },
    {
        "api_list": [
            {
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "What is the TV schedule for channel CT2 on August 4, 2024, and can you list journals related to health?",
        "relevant APIs": [
            "get_tv_schedule",
            "list_journals"
        ],
        "query_id": 80
    },
    {
        "api_list": [
            {
                "tool_name": "chroniclingamerica",
                "api_name": "suggest_titles",
                "api_description": "Auto Suggest API for looking up newspaper titles.",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "Title query"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "crossref",
                "api_name": "list_journals",
                "api_description": "List journals based on a query.",
                "optional_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "Free text query for journals."
                    },
                    {
                        "name": "rows",
                        "type": "INTEGER",
                        "description": "Number of journals per page.",
                        "default": 20
                    },
                    {
                        "name": "mailto",
                        "type": "STRING",
                        "description": "Identifier for polite pool requests."
                    },
                    {
                        "name": "offset",
                        "type": "INTEGER",
                        "description": "Offset for paging.",
                        "default": 0
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Field by which results are sorted."
                    },
                    {
                        "name": "order",
                        "type": "STRING",
                        "description": "Order of results, ascending or descending.",
                        "default": "desc"
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "required_parameters": []
            }
        ],
        "query": "Can you provide suggestions for newspaper titles starting with 'The New York'? Additionally, list journals that focus on 'climate change'.",
        "relevant APIs": [],
        "query_id": 81
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with optional filtering by type and name.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": "XML"
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "get_character",
                "api_description": "Retrieval of a single character from Star Trek.",
                "required_parameters": [
                    {
                        "name": "uid",
                        "type": "STRING",
                        "description": "Character unique ID"
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "character": {}
                }
            }
        ],
        "query": "Can you provide a list of anime reports available on Anime News Network? Also, can you retrieve details about a specific Star Trek character using its unique ID (CHMA0000215045) from STAPI?",
        "relevant APIs": [],
        "query_id": 82
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "characters": [
                        {
                            "uid": "str",
                            "name": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_yearly_prayer_list",
                "api_description": "Returns list of the year rosary prayers.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "prayers": [
                        {
                            "day": "str",
                            "prayer": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Could you provide a list of characters in the Star Trek universe along with the day and rosary prayer for the year 2024 schedule?",
        "relevant APIs": [],
        "query_id": 83
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Can you list the main characters of Final Space? Also, could you tell me more about the character named Luke Skywalker from Star Wars?",
        "relevant APIs": [],
        "query_id": 84
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "items": [
                        "int"
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "jikan",
                "api_name": "get_anime_by_id",
                "api_description": "Get anime resource by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "data": {
                        "Mal_id": "int",
                        "title": "str",
                        "url": "str",
                        "images": {
                            "jpg": {
                                "image_url": "str",
                                "small_image_url": "str",
                                "large_image_url": "str"
                            }
                        },
                        "score": "float",
                        "aired": {
                            "from": "string",
                            "to": "string"
                        },
                        "episodes": "int"
                    }
                }
            }
        ],
        "query": "Can you give me some of the latest top news stories from Hacker News, and provide details about an anime with ID 100 from MyAnimeList?",
        "relevant APIs": [],
        "query_id": 85
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_locations",
                "api_description": "Retrieves all locations, with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET"
            },
            {
                "category_name": "Content",
                "tool_name": "rickandmorty",
                "api_name": "get_locations",
                "api_description": "Fetches all locations, with filtering options.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "The page of locations to retrieve.",
                        "default": "1"
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Filter for names containing this string."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "Filter by type."
                    },
                    {
                        "name": "dimension",
                        "type": "STRING",
                        "description": "Filter by dimension."
                    }
                ],
                "method": "GET"
            }
        ],
        "query": "Can you provide a list of all notable locations from both the Final Space and Rick and Morty shows?",
        "relevant APIs": [],
        "query_id": 86
    },
    {
        "api_list": [
            {
                "tool_name": "hackernews",
                "api_name": "get_top_stories",
                "api_description": "Fetch up to 500 top stories from Hacker News.",
                "method": "GET",
                "required_parameters": [],
                "optional_parameters": [],
                "template_response": {
                    "type": "list of integers",
                    "description": "List of top story IDs."
                },
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "openlibrary_search",
                "api_description": "Search for books by title, author, and other criteria.",
                "method": "GET",
                "required_parameters": [
                    {
                        "name": "q",
                        "type": "STRING",
                        "description": "The query term for the search.",
                        "default": ""
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "fields",
                        "type": "STRING",
                        "description": "Fields to include in the response, use '*' to include all.",
                        "default": "*"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting order (e.g., 'new', 'old', 'random').",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "type": "INTEGER",
                        "description": "Page number for results pagination.",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Number of results per page.",
                        "default": 10
                    }
                ],
                "template_response": {
                    "docs": [
                        {
                            "title": "str",
                            "author_name": [
                                "str"
                            ],
                            "first_publish_year": "int"
                        }
                    ]
                },
                "category_name": "Content"
            }
        ],
        "query": "What are the current trending top stories on Hacker News related to 'data science', and can you find some books on 'data science' available in the Open Library?",
        "relevant APIs": [],
        "query_id": 87
    },
    {
        "api_list": [
            {
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": [
                    "str",
                    [
                        "str"
                    ],
                    [
                        "str"
                    ],
                    [
                        "str"
                    ]
                ],
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "template_response": {
                    "title": "str"
                },
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "I want to know more about Albert Einstein. Could you find some articles about him on Wikipedia and provide information about a specific work with ID 'OL45804W' from the Open Library?",
        "relevant APIs": [],
        "query_id": 88
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters, including anime and manga.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "reports": "xml"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person from the Star Wars universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you get a list of all anime reports and find information about people with the name 'Skywalker' in the Star Wars universe?",
        "relevant APIs": [],
        "query_id": 89
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "animenewsnetwork",
                "api_name": "get_reports",
                "api_description": "Fetch reports with various filters.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "nskip",
                        "type": "INTEGER",
                        "description": "Number to skip."
                    },
                    {
                        "name": "nlist",
                        "type": "STRING",
                        "description": "Number or 'all' to list."
                    },
                    {
                        "name": "type",
                        "type": "STRING",
                        "description": "'anime' or 'manga'."
                    },
                    {
                        "name": "name",
                        "type": "STRING",
                        "description": "Starts with the value."
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "string (XML)"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "ceskatelevise",
                "api_name": "get_tv_schedule",
                "api_description": "Get the TV schedule for a specific date and channel.",
                "required_parameters": [
                    {
                        "name": "user",
                        "type": "STRING",
                        "description": "The username required to access the API.",
                        "default": ""
                    },
                    {
                        "name": "date",
                        "type": "STRING",
                        "description": "The date for which you want the schedule in the format dd.mm.yyyy.",
                        "default": "04.08.2024"
                    },
                    {
                        "name": "channel",
                        "type": "STRING",
                        "description": "The channel identifier (ct1, ct2, ct24, ct4, ct5, ct6, ct7).",
                        "default": "ct1"
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "regiony",
                        "type": "INTEGER",
                        "description": "Set to 1 to include regional broadcasts.",
                        "default": null
                    },
                    {
                        "name": "json_format",
                        "type": "INTEGER",
                        "description": "Set to 1 to retrieve data in JSON format.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "application/json"
                }
            }
        ],
        "query": "Can you fetch the latest reports about new anime releases and provide me with the TV schedule for channel ct24 on August 4, 2024, in JSON format?",
        "relevant APIs": [],
        "query_id": 90
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_planets",
                "api_description": "Fetch planet resources or a specific planet.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the planet resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter planet resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "rotation_period": "str",
                            "orbital_period": "str",
                            "diameter": "str",
                            "climate": "str",
                            "gravity": "str",
                            "terrain": "str",
                            "surface_water": "str",
                            "population": "str",
                            "residents": [
                                "str"
                            ],
                            "films": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_prayer_by_day",
                "api_description": "Returns rosary prayer for a specific day of the week.",
                "required_parameters": [
                    {
                        "name": "day",
                        "type": "STRING",
                        "description": "The day of the week for which to retrieve the rosary prayer (e.g., 'monday')."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "What is the climate like on Tatooine in Star Wars and what's the rosary prayer for Monday?",
        "relevant APIs": [],
        "query_id": 91
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_locations",
                "api_description": "Retrieves all locations with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_planets",
                "api_description": "Fetch planet resources or a specific planet.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the planet resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter planet resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "What are the most significant locations in the Final Space universe? Also, can you give me details about the planet Tatooine in Star Wars?",
        "relevant APIs": [],
        "query_id": 92
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_quotes",
                "api_description": "Retrieves all quotes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "openlibrary",
                "api_name": "editions_by_work",
                "api_description": "Fetch editions of a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Retrieve all quotes from the Final Space show. Also, list all available editions for the Open Library work ID 'OL45804W'.",
        "relevant APIs": [],
        "query_id": 93
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "finalspace",
                "api_name": "get_all_episodes",
                "api_description": "Retrieves all episodes with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ]
            },
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_films",
                "api_description": "Fetch film resources or a specific film.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the film resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter film resources.",
                        "default": null
                    }
                ]
            }
        ],
        "query": "Could you provide me with a list of all episodes of the Final Space series? Additionally, I want to know more about the film 'A New Hope' from Star Wars.",
        "relevant APIs": [],
        "query_id": 94
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_staff",
                "api_description": "Get staff information for a specific anime.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_main_information",
                "api_description": "Retrieve all primary information for a specific show by its TVmaze ID.",
                "required_parameters": [
                    {
                        "name": "show_id",
                        "type": "INTEGER",
                        "description": "The TVmaze ID of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Tell me about the staff involved in anime ID 10 and get the main information about the show with the TVmaze ID 5.",
        "relevant APIs": [],
        "query_id": 95
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "mediawiki",
                "api_name": "search_open_search",
                "api_description": "Search the wiki using the OpenSearch protocol.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The search query."
                    }
                ],
                "optional_parameters": [
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "The number of search results to return.",
                        "default": "10"
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "array"
                }
            },
            {
                "category_name": "Content",
                "tool_name": "stapi",
                "api_name": "search_characters",
                "api_description": "Pagination over characters in the Star Trek universe.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "pageNumber",
                        "type": "INTEGER",
                        "description": "Zero-based page number",
                        "default": "0"
                    },
                    {
                        "name": "pageSize",
                        "type": "INTEGER",
                        "description": "Page size",
                        "default": "10"
                    },
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sorting format like 'fieldName,ASC;anotherFieldName,DESC'",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "type": "object"
                }
            }
        ],
        "query": "I'm interested in learning more about Star Trek. Can you search Wikipedia for 'Star Trek' and also provide a list of characters from the Star Trek universe?",
        "relevant APIs": [],
        "query_id": 96
    },
    {
        "api_list": [
            {
                "category_name": "Content",
                "tool_name": "swapi",
                "api_name": "get_people",
                "api_description": "Fetch people resources or a specific person.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "resource_id",
                        "type": "INTEGER",
                        "description": "The specific ID of the person resource.",
                        "default": null
                    },
                    {
                        "name": "search",
                        "type": "STRING",
                        "description": "Search query to filter people resources.",
                        "default": null
                    }
                ],
                "method": "GET",
                "template_response": {
                    "count": "int",
                    "next": "str or null",
                    "previous": "str or null",
                    "results": [
                        {
                            "name": "str",
                            "height": "str",
                            "mass": "str",
                            "hair_color": "str",
                            "skin_color": "str",
                            "eye_color": "str",
                            "birth_year": "str",
                            "gender": "str",
                            "homeworld": "str",
                            "films": [
                                "str"
                            ],
                            "species": [
                                "str"
                            ],
                            "vehicles": [
                                "str"
                            ],
                            "starships": [
                                "str"
                            ],
                            "created": "str",
                            "edited": "str",
                            "url": "str"
                        }
                    ]
                }
            },
            {
                "category_name": "Content",
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "template_response": {
                    "type": "str",
                    "mysteries": [
                        {
                            "title": "str",
                            "description": "str"
                        }
                    ]
                }
            }
        ],
        "query": "Can you tell me about Luke Skywalker from Star Wars and also provide today's rosary prayer?",
        "relevant APIs": [],
        "query_id": 97
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_location_by_id",
                "api_description": "Retrieves a location by its ID.",
                "required_parameters": [
                    {
                        "name": "location_id",
                        "type": "INTEGER",
                        "description": "The location ID.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            },
            {
                "tool_name": "openlibrary",
                "api_name": "works_by_id",
                "api_description": "Retrieve information about a work using its ID.",
                "required_parameters": [
                    {
                        "name": "work_id",
                        "type": "STRING",
                        "description": "The ID of the work.",
                        "default": ""
                    }
                ],
                "method": "GET",
                "category_name": "Content",
                "optional_parameters": []
            }
        ],
        "query": "Can you provide details of the location with ID 1 in the Final Space series, and also tell me about the work with the Open Library ID 'OL45804W'?",
        "relevant APIs": [],
        "query_id": 98
    },
    {
        "api_list": [
            {
                "tool_name": "Jikan",
                "api_name": "get_anime_full_by_id",
                "api_description": "Get complete anime resource data by ID.",
                "required_parameters": [
                    {
                        "name": "id",
                        "type": "INTEGER",
                        "description": "The ID of the anime."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "tvmaze",
                "api_name": "show_single_search",
                "api_description": "Perform a single search for a specific show by name.",
                "required_parameters": [
                    {
                        "name": "query",
                        "type": "STRING",
                        "description": "The name of the show."
                    }
                ],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you provide full details about the anime with ID 1, and also find the TV show named 'Breaking Bad'?",
        "relevant APIs": [],
        "query_id": 99
    },
    {
        "api_list": [
            {
                "tool_name": "finalspace",
                "api_name": "get_all_characters",
                "api_description": "Retrieves all characters with options to sort and limit results.",
                "required_parameters": [],
                "optional_parameters": [
                    {
                        "name": "sort",
                        "type": "STRING",
                        "description": "Sort in 'asc' or 'desc' order.",
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": "INTEGER",
                        "description": "Limit the number of results returned.",
                        "default": null
                    }
                ],
                "method": "GET",
                "category_name": "Content"
            },
            {
                "tool_name": "therosary",
                "api_name": "get_today_prayer",
                "api_description": "Returns today's rosary prayer.",
                "required_parameters": [],
                "optional_parameters": [],
                "method": "GET",
                "category_name": "Content"
            }
        ],
        "query": "Can you retrieve the full list of characters available from the Final Space universe and also provide today's rosary prayer?",
        "relevant APIs": [],
        "query_id": 100
    }
]