CoinCap API 2.0
v2.0.1

CoinCap is a useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.

Our API will offer insight into exactly which exchanges and markets contribute to our pricing.

For all endpoints, a single page offers 100 responses by default and supports up to 2,000 responses per page upon requests.

Status Codes and Error Response
The following are error codes you may encounter as you use CoinCap. Note: all CoinCap requests are GET requests

200: Successful - this is the data you were looking for

400-417: Client error - these will often be accompanied by some response in the body that will give the user direction on how to change the request. Here are some examples of 400: Bad Request responses:

'use valid interval': m1, m5, m15, m30, h1, h2, h6, h12, d1': Interval must be m1 for one minute, m5 for 5 minute, m15 for 15 minute, m30 for 30 minute, h1 for one hour, h2 for 2 hour, h6 for 6 hour, h12 for 12 hour, and d1 for one day
'query requires end': If user includes a start query, there must be an end query
'query requires start': If user includes an end query, there must be a start query
'limit exceeds 2000': bad request, exceeds max limit
'missing exchange': This endpoint requires user to specify exchange in parameters
'missing interval': This endpoint requires user to specify interval (ex: m1, m15, d1, etc) in parameters
'missing base': This endpoint requires user to specify base asset (ex: BTC)
'missing quote': This endpoint requires user to specify quote asset (ex: USD)
500-505: Server Error - Looks like something went down on our end. Try back again soon!

For a full list of HTTP Status Code definitions, please visit here.

Headers
We encourage clients to use compression via the Accept-Encoding header.

Accept-Encoding: gzip or Accept-Encoding: deflate

If you have an API Key use it as a Bearer Token.

Programmatically, set the header field Authorization=Bearer XXXX

Limits
Free Tier (No API Key)
200 requests per minute
11 years historical data
Free Tier (API Key)
500 requests per minute
11 years historical data
Request API Key
Click here to request your API key

WebSocket documentation
Trades
The CoinCap trade websocket streams trades from other cryptocurrency exchange websockets. Users must select a specific exchange. In the /exchanges endpoint users can determine if an exchange has a socket available by noting response 'socket':true/false. See an example in the /exchanges endpoint documentation above. The trades websocket is the only way to receive individual trade data through CoinCap.

wss://ws.coincap.io/trades/binance

Request
Path	Required	Value	Description
exchange	required	binance	list of exchanges can be found in the /exchanges endpoint
Sample Code
Plain Text
<script>
    const tradeWs = new WebSocket('wss://ws.coincap.io/trades/binance')

    tradeWs.onmessage = function (msg) {
        console.log(msg.data)
    }
</script>
Response
Plain Text
{
    "exchange":"binance",
    "base":"ethereum",
    "quote":"bitcoin",
    "direction":"buy",
    "price":0.0342,
    "volume":2.923,
    "timestamp":1539198668067,
    "priceUsd":225.08077937819812
}
Prices
The CoinCap prices endpoint is the most accurate source of real-time changes to the global price of an asset. Each time the system receives data that moves the global price in one direction or another, this change is immediately published through the websocket. These prices correspond with the values shown in /assets - a value that may change several times per second based on market activity.

wss://ws.coincap.io/prices?assets=bitcoin,ethereum,monero,litecoin wss://ws.coincap.io/prices?assets=ALL

Request
Path	Required	Value	Description
id	required	bitcoin	list of assets ids can be found in the /assets endpoint
Note: Comma separated. Use "ALL" for all assets
Sample Code
View More
Plain Text
<script>
    const pricesWs = new WebSocket('wss://ws.coincap.io/prices?assets=bitcoin,ethereum,monero,litecoin')

    pricesWs.onmessage = function (msg) {
        console.log(msg.data)
    }
</script>
Response
Plain Text
{  
   "bitcoin":"6389.06534240",
   "ethereum":"192.93111286",
   "monero":"108.90302506",
   "litecoin":"52.25484165"
}
