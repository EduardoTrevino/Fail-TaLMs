General API Information
The following base endpoints are available:
https://api.binance.com
https://api-gcp.binance.com
https://api1.binance.com
https://api2.binance.com
https://api3.binance.com
https://api4.binance.com
The last 4 endpoints in the point above (api1-api4) might give better performance but have less stability. Please use whichever works best for your setup.
All endpoints return either a JSON object or array.
Data is returned in ascending order. Oldest first, newest last.
All time and timestamp related fields are in milliseconds.
The base endpoint https://data-api.binance.vision can be used to access the following API endpoints that have NONE as security type:
GET /api/v3/aggTrades
GET /api/v3/avgPrice
GET /api/v3/depth
GET /api/v3/exchangeInfo
GET /api/v3/klines
GET /api/v3/ping
GET /api/v3/ticker
GET /api/v3/ticker/24hr
GET /api/v3/ticker/bookTicker
GET /api/v3/ticker/price
GET /api/v3/time
GET /api/v3/trades
GET /api/v3/uiKlines
HTTP Return Codes
HTTP 4XX return codes are used for malformed requests; the issue is on the sender's side.
HTTP 403 return code is used when the WAF Limit (Web Application Firewall) has been violated.
HTTP 409 return code is used when a cancelReplace order partially succeeds. (e.g. if the cancellation of the order fails but the new order placement succeeds.)
HTTP 429 return code is used when breaking a request rate limit.
HTTP 418 return code is used when an IP has been auto-banned for continuing to send requests after receiving 429 codes.
HTTP 5XX return codes are used for internal errors; the issue is on Binance's side. It is important to NOT treat this as a failure operation; the execution status is UNKNOWN and could have been a success.
Error Codes and Messages
If there is an error, the API will return an error with a message of the reason.
The error payload on API and SAPI is as follows:

{
  "code": -1121,
  "msg": "Invalid symbol."
}
Specific error codes and messages defined in Error Codes.
General Information on Endpoints
For GET endpoints, parameters must be sent as a query string.
For POST, PUT, and DELETE endpoints, the parameters may be sent as a query string or in the request body with content type application/x-www-form-urlencoded. You may mix parameters between both the query string and request body if you wish to do so.
Parameters may be sent in any order.
If a parameter sent in both the query string and request body, the query string parameter will be used.

Endpoint security type
Each endpoint has a security type that determines how you will interact with it. This is stated next to the NAME of the endpoint.
If no security type is stated, assume the security type is NONE.
API-keys are passed into the REST API via the X-MBX-APIKEY header.
API-keys and secret-keys are case sensitive.
API-keys can be configured to only access certain types of secure endpoints. For example, one API-key could be used for TRADE only, while another API-key can access everything except for TRADE routes.
By default, API-keys can access all secure routes.
Security Type	Description
NONE	Endpoint can be accessed freely.
TRADE	Endpoint requires sending a valid API-Key and signature.
MARGIN	Endpoint requires sending a valid API-Key and signature.
USER_DATA	Endpoint requires sending a valid API-Key and signature.
USER_STREAM	Endpoint requires sending a valid API-Key.
MARKET_DATA	Endpoint requires sending a valid API-Key.
TRADE, MARGIN and USER_DATA endpoints are SIGNED endpoints.
SIGNED (TRADE, USER_DATA, AND MARGIN) Endpoint security
SIGNED endpoints require an additional parameter, signature, to be sent in the query string or request body.
The signature is not case sensitive.
Please consult the examples on how to compute the signature, depending on which API key you are using. (e.g. HMAC, RSA, Ed25519)
Timing security
A SIGNED endpoint also requires a parameter, timestamp, to be sent which should be the millisecond timestamp of when the request was created and sent.
An additional parameter, recvWindow, may be sent to specify the number of milliseconds after timestamp the request is valid for. If recvWindow is not sent, it defaults to 5000.
The logic is as follows:

  if (timestamp < (serverTime + 1000) && (serverTime - timestamp) <= recvWindow)
  {
    // process request
  } 
  else 
  {
    // reject request
  }
Serious trading is about timing. Networks can be unstable and unreliable, which can lead to requests taking varying amounts of time to reach the servers. With recvWindow, you can specify that the request must be processed within a certain number of milliseconds or be rejected by the server.

 It is recommended to use a small recvWindow of 5000 or less! The max cannot go beyond 60,000!
SIGNED Endpoint Examples for POST /api/v3/order - HMAC Keys
Here is a step-by-step example of how to send a vaild signed payload from the Linux command line using echo, openssl, and curl.

Key	Value
apiKey	vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A
secretKey	NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j
Parameter	Value
symbol	LTCBTC
side	BUY
type	LIMIT
timeInForce	GTC
quantity	1
price	0.1
recvWindow	5000
timestamp	1499827319559
Example 1: As a request body

Example 1

HMAC SHA256 signature:

    $ echo -n "symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559" | openssl dgst -sha256 -hmac "NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j"
    (stdin)= c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71
curl command:

    (HMAC SHA256)
    $ curl -H "X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A" -X POST 'https://api.binance.com/api/v3/order' -d 'symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'

requestBody:
symbol=LTCBTC
&side=BUY
&type=LIMIT
&timeInForce=GTC
&quantity=1
&price=0.1
&recvWindow=5000
&timestamp=1499827319559

Example 2: As a query string

Example 2

HMAC SHA256 signature:

    $ echo -n "symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559" | openssl dgst -sha256 -hmac "NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j"
    (stdin)= c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71

curl command:

    (HMAC SHA256)
   $ curl -H "X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC&quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=c8db56825ae71d6d79447849e617115f4a920fa2acdcab2b053c4b2838bd6b71'

queryString:
symbol=LTCBTC
&side=BUY
&type=LIMIT
&timeInForce=GTC
&quantity=1
&price=0.1
&recvWindow=5000
&timestamp=1499827319559

Example 3: Mixed query string and request body

Example 3

HMAC SHA256 signature:

   $ echo -n "symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTCquantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559" | openssl dgst -sha256 -hmac "NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j"
    (stdin)= 0fd168b8ddb4876a0358a8d14d0c9f3da0e9b20c5d52b2a00fcf7d1c602f9a77

curl command:

    (HMAC SHA256)
    $ curl -H "X-MBX-APIKEY: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A" -X POST 'https://api.binance.com/api/v3/order?symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC' -d 'quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559&signature=0fd168b8ddb4876a0358a8d14d0c9f3da0e9b20c5d52b2a00fcf7d1c602f9a77'
queryString:
symbol=LTCBTC&side=BUY&type=LIMIT&timeInForce=GTC

requestBody:
quantity=1&price=0.1&recvWindow=5000&timestamp=1499827319559

Note that the signature is different in example 3. There is no & between "GTC" and "quantity=1".

SIGNED Endpoint Example for POST /api/v3/order - RSA Keys
This will be a step by step process how to create the signature payload to send a valid signed payload.
We support PKCS#8 currently.
To get your API key, you need to upload your RSA Public Key to your account and a corresponding API key will be provided for you.
For this example, the private key will be referenced as test-prv-key.pem

Key	Value
apiKey	CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ
Parameter	Value
symbol	BTCUSDT
side	SELL
type	LIMIT
timeInForce	GTC
quantity	1
price	0.2
recvWindow	5000
timestamp	1668481559918
Signature payload (with the listed parameters):

symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000
Step 1: Construct the payload

Arrange the list of parameters into a string. Separate each parameter with a &.

Step 2: Compute the signature:

2.1 - Encode signature payload as ASCII data.

Step 2.2

 $ echo -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem
2.2 - Sign payload using RSASSA-PKCS1-v1_5 algorithm with SHA-256 hash function.

Step 2.3

$  echo -n 'symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918&recvWindow=5000' | openssl dgst -sha256 -sign ./test-prv-key.pem | openssl enc -base64 -A
HZ8HOjiJ1s/igS9JA+n7+7Ti/ihtkRF5BIWcPIEluJP6tlbFM/Bf44LfZka/iemtahZAZzcO9TnI5uaXh3++lrqtNonCwp6/245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH+XxaCmR0WcvlKjNQnp12/eKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang/1WOq+Jaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT/fNnMRxFc7u+j3qI//5yuGuu14KR0MuQKKCSpViieD+fIti46sxPTsjSemoUKp0oXA==
2.3 - Encode output as base64 string.

Step 2.4

HZ8HOjiJ1s%2FigS9JA%2Bn7%2B7Ti%2FihtkRF5BIWcPIEluJP6tlbFM%2FBf44LfZka%2FiemtahZAZzcO9TnI5uaXh3%2B%2BlrqtNonCwp6%2F245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH%2BXxaCmR0WcvlKjNQnp12%2FeKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang%2F1WOq%2BJaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT%2FfNnMRxFc7u%2Bj3qI%2F%2F5yuGuu14KR0MuQKKCSpViieD%2BfIti46sxPTsjSemoUKp0oXA%3D%3D
2.4 - Since the signature may contain / and =, this could cause issues with sending the request. So the signature has to be URL encoded.

Step 2.5

 curl -H "X-MBX-APIKEY: CAvIjXy3F44yW6Pou5k8Dy1swsYDWJZLeoK2r8G4cFDnE9nosRppc2eKc1T8TRTQ" -X POST 'https://api.binance.com/api/v3/order?symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2&timestamp=1668481559918recvWindow=5000&signature=HZ8HOjiJ1s%2FigS9JA%2Bn7%2B7Ti%2FihtkRF5BIWcPIEluJP6tlbFM%2FBf44LfZka%2FiemtahZAZzcO9TnI5uaXh3%2B%2BlrqtNonCwp6%2F245UFWkiW1elpgtVAmJPbogcAv6rSlokztAfWk296ZJXzRDYAtzGH0gq7CgSJKfH%2BXxaCmR0WcvlKjNQnp12%2FeKXJYO4tDap8UCBLuyxDnR7oJKLHQHJLP0r0EAVOOSIbrFang%2F1WOq%2BJaq4Efc4XpnTgnwlBbWTmhWDR1pvS9iVEzcSYLHT%2FfNnMRxFc7u%2Bj3qI%2F%2F5yuGuu14KR0MuQKKCSpViieD%2BfIti46sxPTsjSemoUKp0oXA%3D%3D'
2.5 - curl command

Bash script

#!/usr/bin/env bash

# Set up authentication:
API_KEY="put your own API Key here"
PRIVATE_KEY_PATH="test-prv-key.pem"

# Set up the request:
API_METHOD="POST"
API_CALL="api/v3/order"
API_PARAMS="symbol=BTCUSDT&side=SELL&type=LIMIT&timeInForce=GTC&quantity=1&price=0.2"

# Sign the request:
timestamp=$(date +%s000)
api_params_with_timestamp="$API_PARAMS&timestamp=$timestamp"
signature=$(echo -n "$api_params_with_timestamp" \
            | openssl dgst -sha256 -sign "$PRIVATE_KEY_PATH" \
            | openssl enc -base64 -A)

# Send the request:
curl -H "X-MBX-APIKEY: $API_KEY" -X "$API_METHOD" \
    "https://api.binance.com/$API_CALL?$api_params_with_timestamp" \
    --data-urlencode "signature=$signature"
A sample Bash script containing similar steps is available in the right side.

SIGNED Endpoint Examples for POST /api/v3/order - Ed25519 Keys
 Note: It is highly recommended to use Ed25519 API keys as it should provide the best performance and security out of all supported key types.
Parameter	Value
symbol	BTCUSDT
side	SELL
type	LIMIT
timeInForce	GTC
quantity	1
price	0.2
timestamp	1668481559918
Python script

#!/usr/bin/env python3

import base64
import requests
import time
from cryptography.hazmat.primitives.serialization import load_pem_private_key

# Set up authentication
API_KEY='put your own API Key here'
PRIVATE_KEY_PATH='test-prv-key.pem'

# Load the private key.
# In this example the key is expected to be stored without encryption,
# but we recommend using a strong password for improved security.
with open(PRIVATE_KEY_PATH, 'rb') as f:
    private_key = load_pem_private_key(data=f.read(),
                                       password=None)

# Set up the request parameters
params = {
    'symbol':       'BTCUSDT',
    'side':         'SELL',
    'type':         'LIMIT',
    'timeInForce':  'GTC',
    'quantity':     '1.0000000',
    'price':        '0.20',
}

# Timestamp the request
timestamp = int(time.time() * 1000) # UNIX timestamp in milliseconds
params['timestamp'] = timestamp

# Sign the request
payload = '&'.join([f'{param}={value}' for param, value in params.items()])
signature = base64.b64encode(private_key.sign(payload.encode('ASCII')))
params['signature'] = signature

# Send the request
headers = {
    'X-MBX-APIKEY': API_KEY,
}
response = requests.post(
    'https://api.binance.com/api/v3/order',
    headers=headers,
    data=params,
)
print(response.json())
A sample code in Python to show how to sign the payload with an Ed25519 key is available on the right side.

Public API Definitions
Terminology
These terms will be used throughout the documentation, so it is recommended especially for new users to read to help their understanding of the API.

base asset refers to the asset that is the quantity of a symbol. For the symbol BTCUSDT, BTC would be the base asset.
quote asset refers to the asset that is the price of a symbol. For the symbol BTCUSDT, USDT would be the quote asset.
ENUM definitions
Symbol status (status):

PRE_TRADING
TRADING
POST_TRADING
END_OF_DAY
HALT
AUCTION_MATCH
BREAK

Account and Symbol Permissions (permissions):

SPOT
MARGIN
LEVERAGED
TRD_GRP_002
TRD_GRP_003
TRD_GRP_004
TRD_GRP_005
TRD_GRP_006
TRD_GRP_007
TRD_GRP_008
TRD_GRP_009
TRD_GRP_010
TRD_GRP_011
TRD_GRP_012
TRD_GRP_013
TRD_GRP_014
TRD_GRP_015
TRD_GRP_016
TRD_GRP_017
TRD_GRP_018
TRD_GRP_019
TRD_GRP_020
TRD_GRP_021
TRD_GRP_022
TRD_GRP_023
TRD_GRP_024
TRD_GRP_025
Order status (status):

Status	Description
NEW	The order has been accepted by the engine.
PARTIALLY_FILLED	A part of the order has been filled.
FILLED	The order has been completed.
CANCELED	The order has been canceled by the user.
PENDING_CANCEL	Currently unused
REJECTED	The order was not accepted by the engine and not processed.
EXPIRED	The order was canceled according to the order type's rules (e.g. LIMIT FOK orders with no fill, LIMIT IOC or MARKET orders that partially fill) or by the exchange, (e.g. orders canceled during liquidation, orders canceled during maintenance)
EXPIRED_IN_MATCH	The order was canceled by the exchange due to STP trigger. (e.g. an order with EXPIRE_TAKER will match with existing orders on the book with the same account or same tradeGroupId)
Order list Status (listStatusType):

Status	Description
RESPONSE	This is used when the ListStatus is responding to a failed action. (E.g. order list placement or cancellation)
EXEC_STARTED	The order list has been placed or there is an update to the order list status.
ALL_DONE	The order list has finished executing and thus no longer active.
Order list Order Status (listOrderStatus):

Status	Description
EXECUTING	Either an order list has been placed or there is an update to the status of the list.
ALL_DONE	An order list has completed execution and thus no longer active.
REJECT	The List Status is responding to a failed action either during order placement or order canceled.)
ContingencyType

OCO
OTO
AllocationType

SOR
WorkingFloor

EXCHANGE
SOR
Order types (orderTypes, type):

LIMIT
MARKET
STOP_LOSS
STOP_LOSS_LIMIT
TAKE_PROFIT
TAKE_PROFIT_LIMIT
LIMIT_MAKER
Order Response Type (newOrderRespType):

ACK
RESULT
FULL

Order side (side):

BUY
SELL

Time in force (timeInForce):

This sets how long an order will be active before expiration.

Status	Description
GTC	Good Til Canceled

An order will be on the book unless the order is canceled.
IOC	Immediate Or Cancel

An order will try to fill the order as much as it can before the order expires.
FOK	Fill or Kill

An order will expire if the full order cannot be filled upon execution.
Kline/Candlestick chart intervals:

s-> seconds; m -> minutes; h -> hours; d -> days; w -> weeks; M -> months

1s
1m
3m
5m
15m
30m
1h
2h
4h
6h
8h
12h
1d
3d
1w
1M
Rate limiters (rateLimitType)

REQUEST_WEIGHT

    {
      "rateLimitType": "REQUEST_WEIGHT",
      "interval": "MINUTE",
      "intervalNum": 1,
      "limit": 6000
    }
ORDERS

    {
      "rateLimitType": "ORDERS",
      "interval": "SECOND",
      "intervalNum": 10,
      "limit": 100
    },
    {
      "rateLimitType": "ORDERS",
      "interval": "DAY",
      "intervalNum": 1,
      "limit": 200000
    }
RAW_REQUESTS

    {
      "rateLimitType": "RAW_REQUESTS",
      "interval": "MINUTE",
      "intervalNum": 5,
      "limit": 5000
    }
REQUEST_WEIGHT

ORDERS

RAW_REQUESTS

Rate limit intervals (interval)

SECOND
MINUTE
DAY

STP Modes

NONE
EXPIRE_MAKER
EXPIRE_TAKER
EXPIRE_BOTH
Filters
Filters define trading rules on a symbol or an exchange. Filters come in two forms: symbol filters and exchange filters.

Symbol Filters
PRICE_FILTER
ExchangeInfo format:

  {
    "filterType": "PRICE_FILTER",
    "minPrice": "0.00000100",
    "maxPrice": "100000.00000000",
    "tickSize": "0.00000100"
  }
The PRICE_FILTER defines the price rules for a symbol. There are 3 parts:

minPrice defines the minimum price/stopPrice allowed; disabled on minPrice == 0.
maxPrice defines the maximum price/stopPrice allowed; disabled on maxPrice == 0.
tickSize defines the intervals that a price/stopPrice can be increased/decreased by; disabled on tickSize == 0.
Any of the above variables can be set to 0, which disables that rule in the price filter. In order to pass the price filter, the following must be true for price/stopPrice of the enabled rules:

price >= minPrice
price <= maxPrice
price % tickSize == 0
PERCENT_PRICE
ExchangeInfo format:

  {
    "filterType": "PERCENT_PRICE",
    "multiplierUp": "1.3000",
    "multiplierDown": "0.7000",
    "avgPriceMins": 5
  }
The PERCENT_PRICE filter defines the valid range for the price based on the average of the previous trades. avgPriceMins is the number of minutes the average price is calculated over. 0 means the last price is used.

In order to pass the percent price, the following must be true for price:

price <= weightedAveragePrice * multiplierUp
price >= weightedAveragePrice * multiplierDown
PERCENT_PRICE_BY_SIDE
ExchangeInfo format:

    {
          "filterType": "PERCENT_PRICE_BY_SIDE",
          "bidMultiplierUp": "1.2",
          "bidMultiplierDown": "0.2",
          "askMultiplierUp": "5",
          "askMultiplierDown": "0.8",
          "avgPriceMins": 1
    }
The PERCENT_PRICE_BY_SIDE filter defines the valid range for the price based on the average of the previous trades.

avgPriceMins is the number of minutes the average price is calculated over. 0 means the last price is used.

There is a different range depending on whether the order is placed on the BUY side or the SELL side.

Buy orders will succeed on this filter if:

Order price <= weightedAveragePrice * bidMultiplierUp
Order price >= weightedAveragePrice * bidMultiplierDown
Sell orders will succeed on this filter if:

Order Price <= weightedAveragePrice * askMultiplierUp
Order Price >= weightedAveragePrice * askMultiplierDown
LOT_SIZE
ExchangeInfo format:

  {
    "filterType": "LOT_SIZE",
    "minQty": "0.00100000",
    "maxQty": "100000.00000000",
    "stepSize": "0.00100000"
  }
The LOT_SIZE filter defines the quantity (aka "lots" in auction terms) rules for a symbol. There are 3 parts:

minQty defines the minimum quantity/icebergQty allowed.
maxQty defines the maximum quantity/icebergQty allowed.
stepSize defines the intervals that a quantity/icebergQty can be increased/decreased by.
In order to pass the lot size, the following must be true for quantity/icebergQty:

quantity >= minQty
quantity <= maxQty
quantity % stepSize == 0
MIN_NOTIONAL
ExchangeInfo format:

  {
    "filterType": "MIN_NOTIONAL",
    "minNotional": "0.00100000",
    "applyToMarket": true,
    "avgPriceMins": 5
  }
The MIN_NOTIONAL filter defines the minimum notional value allowed for an order on a symbol. An order's notional value is the price * quantity. If the order is an Algo order (e.g. STOP_LOSS_LIMIT), then the notional value of the stopPrice * quantity will also be evaluated. If the order is an Iceberg Order, then the notional value of the price * icebergQty will also be evaluated. applyToMarket determines whether or not the MIN_NOTIONAL filter will also be applied to MARKET orders. Since MARKET orders have no price, the average price is used over the last avgPriceMins minutes. avgPriceMins is the number of minutes the average price is calculated over. 0 means the last price is used.

NOTIONAL
ExchangeInfo format:

{
   "filterType": "NOTIONAL",
   "minNotional": "10.00000000",
   "applyMinToMarket": false,
   "maxNotional": "10000.00000000",
   "applyMaxToMarket": false,
   "avgPriceMins": 5
}
The NOTIONAL filter defines the acceptable notional range allowed for an order on a symbol.



applyMinToMarket determines whether the minNotional will be applied to MARKET orders.

applyMaxToMarket determines whether the maxNotional will be applied to MARKET orders.

In order to pass this filter, the notional (price * quantity) has to pass the following conditions:

price * quantity <= maxNotional
price * quantity >= minNotional
For MARKET orders, the average price used over the last avgPriceMins minutes will be used for calculation.

If the avgPriceMins is 0, then the last price will be used.

ICEBERG_PARTS
ExchangeInfo format:

  {
    "filterType": "ICEBERG_PARTS",
    "limit": 10
  }
The ICEBERG_PARTS filter defines the maximum parts an iceberg order can have. The number of ICEBERG_PARTS is defined as CEIL(qty / icebergQty).

MARKET_LOT_SIZE
ExchangeInfo format:

  {
    "filterType": "MARKET_LOT_SIZE",
    "minQty": "0.00100000",
    "maxQty": "100000.00000000",
    "stepSize": "0.00100000"
  }
The MARKET_LOT_SIZE filter defines the quantity (aka "lots" in auction terms) rules for MARKET orders on a symbol. There are 3 parts:

minQty defines the minimum quantity allowed.
maxQty defines the maximum quantity allowed.
stepSize defines the intervals that a quantity can be increased/decreased by.
In order to pass the market lot size, the following must be true for quantity:

quantity >= minQty
quantity <= maxQty
quantity % stepSize == 0
MAX_NUM_ORDERS
ExchangeInfo format:

  {
    "filterType": "MAX_NUM_ORDERS",
    "maxNumOrders": 25
  }
The MAX_NUM_ORDERS filter defines the maximum number of orders an account is allowed to have open on a symbol. Note that both "algo" orders and normal orders are counted for this filter.

MAX_NUM_ALGO_ORDERS
ExchangeInfo format:

  {
    "filterType": "MAX_NUM_ALGO_ORDERS",
    "maxNumAlgoOrders": 5
  }
The MAX_NUM_ALGO_ORDERS filter defines the maximum number of "algo" orders an account is allowed to have open on a symbol. "Algo" orders are STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.

MAX_NUM_ICEBERG_ORDERS
The MAX_NUM_ICEBERG_ORDERS filter defines the maximum number of ICEBERG orders an account is allowed to have open on a symbol. An ICEBERG order is any order where the icebergQty is > 0.

ExchangeInfo format:

  {
    "filterType": "MAX_NUM_ICEBERG_ORDERS",
    "maxNumIcebergOrders": 5
  }
MAX_POSITION
The MAX_POSITION filter defines the allowed maximum position an account can have on the base asset of a symbol. An account's position defined as the sum of the account's:

free balance of the base asset
locked balance of the base asset
sum of the qty of all open BUY orders
BUY orders will be rejected if the account's position is greater than the maximum position allowed.

If an order's quantity can cause the position to overflow, this will also fail the MAX_POSITION filter.

ExchangeInfo format:

{
  "filterType":"MAX_POSITION",
  "maxPosition":"10.00000000"
}
TRAILING_DELTA
ExchangeInfo format:

    {
          "filterType": "TRAILING_DELTA",
          "minTrailingAboveDelta": 10,
          "maxTrailingAboveDelta": 2000,
          "minTrailingBelowDelta": 10,
          "maxTrailingBelowDelta": 2000
   }
The TRAILING_DELTA filter defines the minimum and maximum value for the parameter trailingDelta.

In order for a trailing stop order to pass this filter, the following must be true:

For STOP_LOSS BUY, STOP_LOSS_LIMIT_BUY,TAKE_PROFIT SELL and TAKE_PROFIT_LIMIT SELL orders:

trailingDelta >= minTrailingAboveDelta
trailingDelta <= maxTrailingAboveDelta
For STOP_LOSS SELL, STOP_LOSS_LIMIT SELL, TAKE_PROFIT BUY, and TAKE_PROFIT_LIMIT BUY orders:

trailingDelta >= minTrailingBelowDelta
trailingDelta <= maxTrailingBelowDelta
Exchange Filters
EXCHANGE_MAX_NUM_ORDERS
ExchangeInfo format:

  {
    "filterType": "EXCHANGE_MAX_NUM_ORDERS",
    "maxNumOrders": 1000
  }
The EXCHANGE_MAX_NUM_ORDERS filter defines the maximum number of orders an account is allowed to have open on the exchange. Note that both "algo" orders and normal orders are counted for this filter.

EXCHANGE_MAX_NUM_ALGO_ORDERS
ExchangeInfo format:

  {
    "filterType": "EXCHANGE_MAX_NUM_ALGO_ORDERS",
    "maxNumAlgoOrders": 200
  }
The EXCHANGE_MAX_NUM_ALGO_ORDERS filter defines the maximum number of "algo" orders an account is allowed to have open on the exchange. "Algo" orders are STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.

EXCHANGE_MAX_NUM_ICEBERG_ORDERS
The EXCHANGE_MAX_NUM_ICEBERG_ORDERS filter defines the maximum number of iceberg orders an account is allowed to have open on the exchange.

ExchangeInfo format:

{
  "filterType": "EXCHANGE_MAX_NUM_ICEBERG_ORDERS",
  "maxNumIcebergOrders": 10000
}
Wallet Endpoints
System Status (System)
Response

{ 
    "status": 0,              // 0: normal，1：system maintenance
    "msg": "normal"           // "normal", "system_maintenance"
}
GET /sapi/v1/system/status

Fetch system status.

Weight(IP): 1

All Coins' Information (USER_DATA)
Get information of coins (available for deposit and withdraw) for user.

Response:

[
    {
        "coin": "BTC",
        "depositAllEnable": true,
        "free": "0.08074558",
        "freeze": "0.00000000",
        "ipoable": "0.00000000",
        "ipoing": "0.00000000",
        "isLegalMoney": false,
        "locked": "0.00000000",
        "name": "Bitcoin",
        "networkList": [
            {
                "addressRegex": "^(bnb1)[0-9a-z]{38}$",
                "coin": "BTC",
                "depositDesc": "Wallet Maintenance, Deposit Suspended", // shown only when "depositEnable" is false.
                "depositEnable": false,
                "isDefault": false,        
                "memoRegex": "^[0-9A-Za-z\\-_]{1,120}$",
                "minConfirm": 1,  // min number for balance confirmation
                "name": "BEP2",
                "network": "BNB",            
                "specialTips": "Both a MEMO and an Address are required to successfully deposit your BEP2-BTCB tokens to Binance.",
                "unLockConfirm": 0,  // confirmation number for balance unlock 
                "withdrawDesc": "Wallet Maintenance, Withdrawal Suspended", // shown only when "withdrawEnable" is false.
                "withdrawEnable": false,
                "withdrawFee": "0.00000220",
                "withdrawIntegerMultiple": "0.00000001",
                "withdrawMax": "9999999999.99999999",
                "withdrawMin": "0.00000440",
                "sameAddress": true,  // If the coin needs to provide memo to withdraw
                "estimatedArrivalTime": 25,
                "busy": false,
                "contractAddressUrl": "https://bscscan.com/token/",
                "contractAddress": "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
            },
            {
                "addressRegex": "^[13][a-km-zA-HJ-NP-Z1-9]{25,34}$|^(bc1)[0-9A-Za-z]{39,59}$",
                "coin": "BTC",
                "depositEnable": true,
                "isDefault": true,
                "memoRegex": "",
                "minConfirm": 1, 
                "name": "BTC",
                "network": "BTC",
                "specialTips": "",
                "unLockConfirm": 2,
                "withdrawEnable": true,
                "withdrawFee": "0.00050000",
                "withdrawIntegerMultiple": "0.00000001",
                "withdrawMax": "750",
                "withdrawMin": "0.00100000",
                "sameAddress": false,
                "estimatedArrivalTime": 25,
                "busy": false,
                "contractAddressUrl": "",
                "contractAddress": ""
            }
        ],
        "storage": "0.00000000",
        "trading": true,
        "withdrawAllEnable": true,
        "withdrawing": "0.00000000"
    }
]
GET /sapi/v1/capital/config/getall

Weight(IP): 10

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
Daily Account Snapshot (USER_DATA)
Response:

{
   "code":200, // 200 for success; others are error codes
   "msg":"", // error message
   "snapshotVos":[
      {
         "data":{
            "balances":[
               {
                  "asset":"BTC",
                  "free":"0.09905021",
                  "locked":"0.00000000"
               },
               {
                  "asset":"USDT",
                  "free":"1.89109409",
                  "locked":"0.00000000"
               }
            ],
            "totalAssetOfBtc":"0.09942700"
         },
         "type":"spot",
         "updateTime":1576281599000
      }
   ]
}

OR

{
   "code":200, // 200 for success; others are error codes
   "msg":"", // error message
   "snapshotVos":[
      {
         "data":{
            "marginLevel":"2748.02909813",
            "totalAssetOfBtc":"0.00274803",
            "totalLiabilityOfBtc":"0.00000100",
            "totalNetAssetOfBtc":"0.00274750",
            "userAssets":[
               {
                  "asset":"XRP",
                  "borrowed":"0.00000000",
                  "free":"1.00000000",
                  "interest":"0.00000000",
                  "locked":"0.00000000",
                  "netAsset":"1.00000000"
               }
            ]
         },
         "type":"margin",
         "updateTime":1576281599000
      }
   ]
}
OR

{
   "code":200, // 200 for success; others are error codes
   "msg":"", // error message
   "snapshotVos":[
      {
         "data":{
            "assets":[
               {
                  "asset":"USDT",
                  "marginBalance":"118.99782335", // Not real-time data, can ignore
                  "walletBalance":"120.23811389"
               }
            ],
            "position":[
               {
                  "entryPrice":"7130.41000000",
                  "markPrice":"7257.66239673",
                  "positionAmt":"0.01000000",
                  "symbol":"BTCUSDT",
                  "unRealizedProfit":"1.24029054"  // Only show the value at the time of opening the position
               }
            ]
         },
         "type":"futures",
         "updateTime":1576281599000
      }
   ]
}
GET /sapi/v1/accountSnapshot

Weight(IP): 2400

Parameters:

Name	Type	Mandatory	Description
type	STRING	YES	"SPOT", "MARGIN", "FUTURES"
startTime	LONG	NO	
endTime	LONG	NO	
limit	INT	NO	min 7, max 30, default 7
recvWindow	LONG	NO	
timestamp	LONG	YES	
The query time period must be less then 30 days
Support query within the last one month only
If startTimeand endTime not sent, return records of the last 7 days by default
Disable Fast Withdraw Switch (USER_DATA)
Response:

{}
POST /sapi/v1/account/disableFastWithdrawSwitch

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
Caution:

This request will disable fastwithdraw switch under your account.

You need to enable "trade" option for the api key which requests this endpoint.

Enable Fast Withdraw Switch (USER_DATA)
Response:

{}
POST /sapi/v1/account/enableFastWithdrawSwitch

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
This request will enable fastwithdraw switch under your account.

You need to enable "trade" option for the api key which requests this endpoint.
When Fast Withdraw Switch is on, transferring funds to a Binance account will be done instantly. There is no on-chain transaction, no transaction ID and no withdrawal fee.
Withdraw(USER_DATA)
Response:

{
    "id":"7213fea8e94b4a5593d507237e5a555b"
}
POST /sapi/v1/capital/withdraw/apply

Submit a withdraw request.

Weight(UID): 600

Parameters:

Name	Type	Mandatory	Description
coin	STRING	YES	
withdrawOrderId	STRING	NO	client id for withdraw
network	STRING	NO	
address	STRING	YES	
addressTag	STRING	NO	Secondary address identifier for coins like XRP,XMR etc.
amount	DECIMAL	YES	
transactionFeeFlag	BOOLEAN	NO	When making internal transfer, true for returning the fee to the destination account; false for returning the fee back to the departure account. Default false.
name	STRING	NO	Description of the address. The upper limit of the address book is 200. Exceeding the limit will cause withdrawal failure. Space in name should be encoded into %20.
walletType	INTEGER	NO	The wallet type for withdraw，0-spot wallet ，1-funding wallet. Default walletType is the current "selected wallet" under wallet->Fiat and Spot/Funding->Deposit
recvWindow	LONG	NO	
timestamp	LONG	YES	
If network not send, return with default network of the coin.
You can get network and isDefault in networkList of a coin in the response of Get /sapi/v1/capital/config/getall.
Deposit History (supporting network) (USER_DATA)
Response:

[
    {
        "id": "769800519366885376",
        "amount": "0.001",
        "coin": "BNB",
        "network": "BNB",
        "status": 0,
        "address": "bnb136ns6lfw4zs5hg4n85vdthaad7hq5m4gtkgf23",
        "addressTag": "101764890",
        "txId": "98A3EA560C6B3336D348B6C83F0F95ECE4F1F5919E94BD006E5BF3BF264FACFC",
        "insertTime": 1661493146000,
        "transferType": 0,
        "confirmTimes": "1/1",
        "unlockConfirm": 0,
        "walletType": 0
    },
    {
        "id": "769754833590042625",
        "amount":"0.50000000",
        "coin":"IOTA",
        "network":"IOTA",
        "status":1,
        "address":"SIZ9VLMHWATXKV99LH99CIGFJFUMLEHGWVZVNNZXRJJVWBPHYWPPBOSDORZ9EQSHCZAMPVAPGFYQAUUV9DROOXJLNW",
        "addressTag":"",
        "txId":"ESBFVQUTPIWQNJSPXFNHNYHSQNTGKRVKPRABQWTAXCDWOAKDKYWPTVG9BGXNVNKTLEJGESAVXIKIZ9999",
        "insertTime":1599620082000,
        "transferType":0,
        "confirmTimes": "1/1",
        "unlockConfirm": 0,
        "walletType": 0
    }
]
GET /sapi/v1/capital/deposit/hisrec

Fetch deposit history.

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
includeSource	Boolean	NO	default false, if true source address for the transaction will be returned
coin	STRING	NO	
status	INT	NO	0(0:pending,6: credited but cannot withdraw, 7=Wrong Deposit,8=Waiting User confirm, 1:success)
startTime	LONG	NO	Default: 90 days from current timestamp
endTime	LONG	NO	Default: present timestamp
offset	INT	NO	Default:0
limit	INT	NO	Default:1000, Max:1000
recvWindow	LONG	NO	
timestamp	LONG	YES	
txId	STRING	NO	
Please notice the default startTime and endTime to make sure that time interval is within 0-90 days.
If both startTime and endTime are sent, time between startTime and endTime must be less than 90 days.
Please note that the source address returned may not be accurate due to network-specific characteristics. If multiple source addresses found, only the first address will be returned
Withdraw History (supporting network) (USER_DATA)
Response:

[
  {
    "id": "b6ae22b3aa844210a7041aee7589627c",  // Withdrawal id in Binance
    "amount": "8.91000000",   // withdrawal amount
    "transactionFee": "0.004", // transaction fee
    "coin": "USDT",
    "status": 6,
    "address": "0x94df8b352de7f46f64b01d3666bf6e936e44ce60",
    "txId": "0xb5ef8c13b968a406cc62a93a8bd80f9e9a906ef1b3fcf20a2e48573c17659268"   // withdrawal transaction id
    "applyTime": "2019-10-12 11:12:02",  // UTC time
    "network": "ETH",
    "transferType": 0 // 1 for internal transfer, 0 for external transfer   
    "withdrawOrderId": "WITHDRAWtest123", // // will not be returned if there's no withdrawOrderId for this withdraw.
    "info": "The address is not valid. Please confirm with the recipient",  // reason for withdrawal failure
    "confirmNo":3,  // confirm times for withdraw
    "walletType": 1,  //1: Funding Wallet 0:Spot Wallet
    "txKey": "",
    "completeTime": "2023-03-23 16:52:41" // complete UTC time when user's asset is deduct from withdrawing, only if status =  6(success)
  },
  {
    "id": "156ec387f49b41df8724fa744fa82719",
    "amount": "0.00150000",
    "transactionFee": "0.004",
    "coin": "BTC",
    "status": 6,
    "address": "1FZdVHtiBqMrWdjPyRPULCUceZPJ2WLCsB",
    "txId": "60fd9007ebfddc753455f95fafa808c4302c836e4d1eebc5a132c36c1d8ac354"
    "applyTime": "2019-09-24 12:43:45",
    "network": "BTC",
    "transferType": 0, 
    "info": "",
    "confirmNo": 2,
    "walletType": 1,
    "txKey": "",
    "completeTime": "2023-03-23 16:52:41" 
  }
]
GET /sapi/v1/capital/withdraw/history

Fetch withdraw history.

Weight(UID): 18000

Request Limit: 10 requests per second

This endpoint specifically uses per second UID rate limit, user's total second level UID rate limit is 180000/second. Response from the endpoint contains header key X-SAPI-USED-UID-WEIGHT-1S, which defines weight used by the current UID.
Parameters:

Name	Type	Mandatory	Description
coin	STRING	NO	
withdrawOrderId	STRING	NO	
status	INT	NO	0(0:Email Sent,1:Cancelled 2:Awaiting Approval 3:Rejected 4:Processing 5:Failure 6:Completed)
offset	INT	NO	
limit	INT	NO	Default: 1000, Max: 1000
startTime	LONG	NO	Default: 90 days from current timestamp
endTime	LONG	NO	Default: present timestamp
recvWindow	LONG	NO	
timestamp	LONG	YES	
network may not be in the response for old withdraw.
Please notice the default startTime and endTime to make sure that time interval is within 0-90 days.
If both startTime and endTimeare sent, time between startTimeand endTimemust be less than 90 days.
If withdrawOrderId is sent, time between startTime and endTime must be less than 7 days.
If withdrawOrderId is sent, startTime and endTime are not sent, will return last 7 days records by default.
Deposit Address (supporting network) (USER_DATA)
Response:

{
    "address": "1HPn8Rx2y6nNSfagQBKy27GB99Vbzg89wv",
    "coin": "BTC",
    "tag": "",
    "url": "https://btc.com/1HPn8Rx2y6nNSfagQBKy27GB99Vbzg89wv"
}
GET /sapi/v1/capital/deposit/address

Fetch deposit address with network.

Weight(IP): 10

Parameters:

Name	Type	Mandatory	Description
coin	STRING	YES	
network	STRING	NO	
amount	DECIMAL	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
If network is not send, return with default network of the coin.
You can get network and isDefault in networkList in the response of Get /sapi/v1/capital/config/getall (HMAC SHA256).
amount needs to be sent if using LIGHTNING network
Account Status (USER_DATA)
Response:

{
    "data": "Normal"
}
GET /sapi/v1/account/status

Fetch account status detail.

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
Account API Trading Status (USER_DATA)
Response:

{
    "data": {          // API trading status detail
            "isLocked": false,   // API trading function is locked or not
            "plannedRecoverTime": 0,  // If API trading function is locked, this is the planned recover time
            "triggerCondition": { 
                    "GCR": 150,  // Number of GTC orders
                    "IFER": 150, // Number of FOK/IOC orders
                    "UFR": 300   // Number of orders
            },
            "updateTime": 1547630471725   
    }
}
GET /sapi/v1/account/apiTradingStatus

Fetch account api trading status detail.

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
DustLog(USER_DATA)
Response

{
        "total": 8,   //Total counts of exchange
        "userAssetDribblets": [
            {
                "operateTime": 1615985535000,
                "totalTransferedAmount": "0.00132256",   // Total transfered BNB amount for this exchange.
                "totalServiceChargeAmount": "0.00002699",    //Total service charge amount for this exchange.
                "transId": 45178372831,
                "userAssetDribbletDetails": [           //Details of  this exchange.
                    {
                        "transId": 4359321,
                        "serviceChargeAmount": "0.000009",
                        "amount": "0.0009",
                        "operateTime": 1615985535000,
                        "transferedAmount": "0.000441",
                        "fromAsset": "USDT"
                    },
                    {
                        "transId": 4359321,
                        "serviceChargeAmount": "0.00001799",
                        "amount": "0.0009",
                        "operateTime": 1615985535000,
                        "transferedAmount": "0.00088156",
                        "fromAsset": "ETH"
                    }
                ]
            },
            {
                "operateTime":1616203180000,
                "totalTransferedAmount": "0.00058795",
                "totalServiceChargeAmount": "0.000012",
                "transId": 4357015,
                "userAssetDribbletDetails": [       
                    {
                        "transId": 4357015,
                        "serviceChargeAmount": "0.00001",
                        "amount": "0.001",
                        "operateTime": 1616203180000,
                        "transferedAmount": "0.00049",
                        "fromAsset": "USDT"
                    },
                    {
                        "transId": 4357015,
                        "serviceChargeAmount": "0.000002",         
                        "amount": "0.0001",
                        "operateTime": 1616203180000,
                        "transferedAmount": "0.00009795",
                        "fromAsset": "ETH"
                    }
                ]
            }
        ]
    }
}
GET /sapi/v1/asset/dribblet

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
accountType	STRING	NO	SPOTor MARGIN,default SPOT
startTime	LONG	NO	
endTime	LONG	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
Only return last 100 records
Only return records after 2020/12/01
Get Assets That Can Be Converted Into BNB (USER_DATA)
Response

{
    "details": [
        {
            "asset": "ADA",         
            "assetFullName": "ADA", 
            "amountFree": "6.21",   //Convertible amount
            "toBTC": "0.00016848",  //BTC amount
            "toBNB": "0.01777302",  //BNB amount（Not deducted commission fee）
            "toBNBOffExchange": "0.01741756", //BNB amount（Deducted commission fee）
            "exchange": "0.00035546" //Commission fee
        }
    ],
    "totalTransferBtc": "0.00016848",
    "totalTransferBNB": "0.01777302",
    "dribbletPercentage": "0.02"     //Commission fee
}  
POST /sapi/v1/asset/dust-btc

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
accountType	STRING	NO	SPOTor MARGIN,default SPOT
recvWindow	LONG	NO	
timestamp	LONG	YES	
Dust Transfer (USER_DATA)
Response:

{
    "totalServiceCharge":"0.02102542",
    "totalTransfered":"1.05127099",
    "transferResult":[
        {
            "amount":"0.03000000",
            "fromAsset":"ETH",
            "operateTime":1563368549307,
            "serviceChargeAmount":"0.00500000",
            "tranId":2970932918,
            "transferedAmount":"0.25000000"
        },
        {
            "amount":"0.09000000",
            "fromAsset":"LTC",
            "operateTime":1563368549404,
            "serviceChargeAmount":"0.01548000",
            "tranId":2970932918,
            "transferedAmount":"0.77400000"
        },
        {
            "amount":"248.61878453",
            "fromAsset":"TRX",
            "operateTime":1563368549489,
            "serviceChargeAmount":"0.00054542",
            "tranId":2970932918,
            "transferedAmount":"0.02727099"
        }
    ]
}
POST /sapi/v1/asset/dust

Convert dust assets to BNB.

Weight(UID): 10

Parameters:

Name	Type	Mandatory	Description
asset	ARRAY	YES	The asset being converted. For example: asset=BTC,USDT
accountType	STRING	NO	SPOTor MARGIN,default SPOT
recvWindow	LONG	NO	
timestamp	LONG	YES	
You need to openEnable Spot & Margin Trading permission for the API Key which requests this endpoint.
Asset Dividend Record (USER_DATA)
Response:

{
    "rows":[
        {
            "id":1637366104,
            "amount":"10.00000000",
            "asset":"BHFT",
            "divTime":1563189166000,
            "enInfo":"BHFT distribution",
            "tranId":2968885920
        },
        {
            "id":1631750237,
            "amount":"10.00000000",
            "asset":"BHFT",
            "divTime":1563189165000,
            "enInfo":"BHFT distribution",
            "tranId":2968885920
        }
    ],
    "total":2
}
GET /sapi/v1/asset/assetDividend

Query asset dividend record.

Weight(IP): 10

Parameters:

Name	Type	Mandatory	Description
asset	STRING	NO	
startTime	LONG	NO	
endTime	LONG	NO	
limit	INT	NO	Default 20, max 500
recvWindow	LONG	NO	
timestamp	LONG	YES	
There cannot be more than 180 days between parameter startTime and endTime.
Asset Detail (USER_DATA)
Response:

{
        "CTR": {
            "minWithdrawAmount": "70.00000000", //min withdraw amount
            "depositStatus": false,//deposit status (false if ALL of networks' are false)
            "withdrawFee": 35, // withdraw fee
            "withdrawStatus": true, //withdraw status (false if ALL of networks' are false)
            "depositTip": "Delisted, Deposit Suspended" //reason
        },
        "SKY": {
            "minWithdrawAmount": "0.02000000",
            "depositStatus": true,
            "withdrawFee": 0.01,
            "withdrawStatus": true
        }   
}
GET /sapi/v1/asset/assetDetail

Fetch details of assets supported on Binance.

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
asset	STRING	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
Please get network and other deposit or withdraw details from GET /sapi/v1/capital/config/getall.
Trade Fee (USER_DATA)
Response:

[
    {
        "symbol": "ADABNB",
        "makerCommission": "0.001",
        "takerCommission": "0.001"
    },
    {
        "symbol": "BNBBTC",
        "makerCommission": "0.001",
        "takerCommission": "0.001"
    }
]
GET /sapi/v1/asset/tradeFee

Fetch trade fee

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
symbol	STRING	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
User Universal Transfer (USER_DATA)
Response:

{
    "tranId":13526853623
}

POST /sapi/v1/asset/transfer

You need to enable Permits Universal Transfer option for the API Key which requests this endpoint.

Weight(UID): 900

Parameters:

Name	Type	Mandatory	Description
type	ENUM	YES	
asset	STRING	YES	
amount	DECIMAL	YES	
fromSymbol	STRING	NO	
toSymbol	STRING	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
fromSymbol must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
toSymbol must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN

ENUM of transfer types:

MAIN_UMFUTURE Spot account transfer to USDⓈ-M Futures account
MAIN_CMFUTURE Spot account transfer to COIN-M Futures account
MAIN_MARGIN Spot account transfer to Margin（cross）account
UMFUTURE_MAIN USDⓈ-M Futures account transfer to Spot account
UMFUTURE_MARGIN USDⓈ-M Futures account transfer to Margin（cross）account
CMFUTURE_MAIN COIN-M Futures account transfer to Spot account
CMFUTURE_MARGIN COIN-M Futures account transfer to Margin(cross) account
MARGIN_MAIN Margin（cross）account transfer to Spot account
MARGIN_UMFUTURE Margin（cross）account transfer to USDⓈ-M Futures
MARGIN_CMFUTURE Margin（cross）account transfer to COIN-M Futures
ISOLATEDMARGIN_MARGIN Isolated margin account transfer to Margin(cross) account
MARGIN_ISOLATEDMARGIN Margin(cross) account transfer to Isolated margin account
ISOLATEDMARGIN_ISOLATEDMARGIN Isolated margin account transfer to Isolated margin account
MAIN_FUNDING Spot account transfer to Funding account
FUNDING_MAIN Funding account transfer to Spot account
FUNDING_UMFUTURE Funding account transfer to UMFUTURE account
UMFUTURE_FUNDING UMFUTURE account transfer to Funding account
MARGIN_FUNDING MARGIN account transfer to Funding account
FUNDING_MARGIN Funding account transfer to Margin account
FUNDING_CMFUTURE Funding account transfer to CMFUTURE account
CMFUTURE_FUNDING CMFUTURE account transfer to Funding account
MAIN_OPTION Spot account transfer to Options account
OPTION_MAIN Options account transfer to Spot account
UMFUTURE_OPTION USDⓈ-M Futures account transfer to Options account
OPTION_UMFUTURE Options account transfer to USDⓈ-M Futures account
MARGIN_OPTION Margin（cross）account transfer to Options account
OPTION_MARGIN Options account transfer to Margin（cross）account
FUNDING_OPTION Funding account transfer to Options account
OPTION_FUNDING Options account transfer to Funding account
MAIN_PORTFOLIO_MARGIN Spot account transfer to Portfolio Margin account
PORTFOLIO_MARGIN_MAIN Portfolio Margin account transfer to Spot account
MAIN_ISOLATED_MARGIN Spot account transfer to Isolated margin account
ISOLATED_MARGIN_MAIN Isolated margin account transfer to Spot account
Query User Universal Transfer History (USER_DATA)
Response:

{
    "total":2,
    "rows":[
        {
            "asset":"USDT",
            "amount":"1",
            "type":"MAIN_UMFUTURE",
            "status": "CONFIRMED", // status: CONFIRMED / FAILED / PENDING
            "tranId": 11415955596,
            "timestamp":1544433328000
        },
        {
            "asset":"USDT",
            "amount":"2",
            "type":"MAIN_UMFUTURE",
            "status": "CONFIRMED",
            "tranId": 11366865406,
            "timestamp":1544433328000
        }
    ]
}
GET /sapi/v1/asset/transfer

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
type	ENUM	YES	
startTime	LONG	NO	
endTime	LONG	NO	
current	INT	NO	Default 1
size	INT	NO	Default 10, Max 100
fromSymbol	STRING	NO	
toSymbol	STRING	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
fromSymbol must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
toSymbol must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
Support query within the last 6 months only
If startTimeand endTime not sent, return records of the last 7 days by default
Funding Wallet (USER_DATA)
Response

[
    {
        "asset": "USDT",
        "free": "1",    // avalible balance
        "locked": "0",  // locked asset
        "freeze": "0",  // freeze asset
        "withdrawing": "0",  
        "btcValuation": "0.00000091"  
    }
]
POST /sapi/v1/asset/get-funding-asset

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
asset	STRING	NO	
needBtcValuation	STRING	NO	true or false
recvWindow	LONG	NO	
timestamp	LONG	YES	
Currently supports querying the following business assets：Binance Pay, Binance Card, Binance Gift Card, Stock Token

User Asset (USER_DATA)
Response

[
  {
    "asset": "AVAX",
    "free": "1",
    "locked": "0",
    "freeze": "0",
    "withdrawing": "0",
    "ipoable": "0",
    "btcValuation": "0"
  },
  {
    "asset": "BCH",
    "free": "0.9",
    "locked": "0",
    "freeze": "0",
    "withdrawing": "0",
    "ipoable": "0",
    "btcValuation": "0"
  },
  {
    "asset": "BNB",
    "free": "887.47061626",
    "locked": "0",
    "freeze": "10.52",
    "withdrawing": "0.1",
    "ipoable": "0",
    "btcValuation": "0"
  },
  {
    "asset": "BUSD",
    "free": "9999.7",
    "locked": "0",
    "freeze": "0",
    "withdrawing": "0",
    "ipoable": "0",
    "btcValuation": "0"
  },
  {
    "asset": "SHIB",
    "free": "532.32",
    "locked": "0",
    "freeze": "0",
    "withdrawing": "0",
    "ipoable": "0",
    "btcValuation": "0"
  },
  {
    "asset": "USDT",
    "free": "50300000001.44911105",
    "locked": "0",
    "freeze": "0",
    "withdrawing": "0",
    "ipoable": "0",
    "btcValuation": "0"
  },
  {
    "asset": "WRZ",
    "free": "1",
    "locked": "0",
    "freeze": "0",
    "withdrawing": "0",
    "ipoable": "0",
    "btcValuation": "0"
  }
]
POST /sapi/v3/asset/getUserAsset

Get user assets, just for positive data.

Weight(IP): 5

Parameters:

Name	Type	Mandatory	Description
asset	STRING	NO	If asset is blank, then query all positive assets user have.
needBtcValuation	BOOLEAN	NO	Whether need btc valuation or not.
recvWindow	LONG	NO	
timestamp	LONG	YES	
If asset is set, then return this asset, otherwise return all assets positive.
If needBtcValuation is set, then return btcValudation.
BUSD Convert (TRADE)
Response

{
  "tranId": 118263407119,
  "status": "S"
}
POST /sapi/v1/asset/convert-transfer

Convert transfer, convert between BUSD and stablecoins.

Weight(UID): 5

Parameters:

Name	Type	Mandatory	Description
clientTranId	STRING	YES	The unique user-defined transaction id, min length 20
asset	STRING	YES	The current asset
amount	BigDecimal	YES	The amount must be positive number
targetAsset	String	YES	Target asset you want to convert
accountType	String	NO	Only MAIN and CARD, default MAIN
If the clientTranId has been used before, will not do the convert transfer, the original transfer will be returned.
BUSD Convert History (USER_DATA)
Response

{
  "total":3,
  "rows":
  [
    {
      "tranId":118263615991,
      "type":244,
      "time":1664442078000,
      "deductedAsset":"BUSD",
      "deductedAmount":"1",
      "targetAsset":"USDC",
      "targetAmount":"1",
      "status":"S",
      "accountType":"MAIN"
    },{
      "tranId":118263598801,
      "type":244,
      "time":1664442061000,
      "deductedAsset":"BUSD",
      "deductedAmount":"1",
      "targetAsset":"USDC",
      "targetAmount":"1",
      "status":"S",
      "accountType":"MAIN"
    },{
      "tranId":118263407119,
      "type":244,
      "time":1664441820000,
      "deductedAsset":"BUSD",
      "deductedAmount":"1",
      "targetAsset":"USDC",
      "targetAmount":"1",
      "status":"S",
      "accountType":"MAIN"
    }
  ]
}
GET /sapi/v1/asset/convert-transfer/queryByPage

Weight(UID): 5

Parameters:

Name	Type	Mandatory	Description
tranId	LONG	NO	The transaction id
clientTranId	STRING	NO	The user-defined transaction id
asset	STRING	NO	If it is blank, we will match deducted asset and target asset.
startTime	LONG	YES	inclusive, unit: ms
endTime	LONG	YES	exclusive, unit: ms
accountType	STRING	NO	MAIN: main account. CARD: funding account. If it is blank, we will query spot and card wallet, otherwise, we just query the corresponding wallet
current	INTEGER	NO	current page, default 1, the min value is 1
size	INTEGER	NO	page size, default 10, the max value is 100
ENUM of types:
244 convert via sapi call
11 auto convert when deposit
32 auto convert when withdraw
34 in case withdraw failed
254 busd auto convert job
Get Cloud-Mining payment and refund history (USER_DATA)
Response

{
  "total":5,
  "rows":[
    {"createTime":1667880112000,"tranId":121230610120,"type":248,"asset":"USDT","amount":"25.0068","status":"S"},
    {"createTime":1666776366000,"tranId":119991507468,"type":249,"asset":"USDT","amount":"0.027","status":"S"},
    {"createTime":1666764505000,"tranId":119977966327,"type":248,"asset":"USDT","amount":"0.027","status":"S"},
    {"createTime":1666758189000,"tranId":119973601721,"type":248,"asset":"USDT","amount":"0.018","status":"S"},
    {"createTime":1666757278000,"tranId":119973028551,"type":248,"asset":"USDT","amount":"0.018","status":"S"}
  ]
}
GET /sapi/v1/asset/ledger-transfer/cloud-mining/queryByPage

The query of Cloud-Mining payment and refund history

Weight(UID): 600

Parameters:

Name	Type	Mandatory	Description
tranId	LONG	NO	The transaction id
clientTranId	STRING	NO	The unique flag
asset	STRING	NO	If it is blank, we will query all assets
startTime	LONG	YES	inclusive, unit: ms
endTime	LONG	YES	exclusive, unit: ms
current	INTEGER	NO	current page, default 1, the min value is 1
size	INTEGER	NO	page size, default 10, the max value is 100
Just return the SUCCESS records of payment and refund.
For response, type = 248 means payment, type = 249 means refund, status =S means SUCCESS.
Get API Key Permission (USER_DATA)
Response

{
  "ipRestrict":false, 
  "createTime":1698645219000,
  "enableInternalTransfer":false,  // This option authorizes this key to transfer funds between your master account and your sub account instantly
  "enableFutures":false,   //  The Futures API cannot be used if the API key was created before the Futures account was opened, or if you have enabled portfolio margin.
  "enablePortfolioMarginTrading":true,  //  API Key created before your activate portfolio margin does not support portfolio margin API service
  "enableVanillaOptions":false,  //  Authorizes this key to Vanilla options trading
  "permitsUniversalTransfer":false, // Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization
  "enableReading":true, 
  "enableSpotAndMarginTrading":false, // Spot and margin trading
  "enableWithdrawals":false, // This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
  "enableMargin":false  //  This option can be adjusted after the Cross Margin account transfer is completed
}
GET /sapi/v1/account/apiRestrictions

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
Query auto-converting stable coins (USER_DATA)
Response:

{
  "convertEnabled": true,
  "coins": [
    "USDC",
    "USDP",
    "TUSD"
  ],
  "exchangeRates": {
    "USDC": "1",
    "TUSD": "1",
    "USDP": "1"
  }
}
GET /sapi/v1/capital/contract/convertible-coins

Get a user's auto-conversion settings in deposit/withdrawal

Weight(UID): 600

Parameters: None

Switch on/off BUSD and stable coins conversion (USER_DATA)
Response: Returns code 200 on success without body.

POST /sapi/v1/capital/contract/convertible-coins

User can use it to turn on or turn off the BUSD auto-conversion from/to a specific stable coin.

Weight(UID): 600

Parameters:

Name	Type	Mandatory	Description
coin	STRING	YES	Must be USDC, USDP or TUSD
enable	BOOLEAN	YES	true: turn on the auto-conversion. false: turn off the auto-conversion
Params need to be in the POST body
One click arrival deposit apply (for expired address deposit) (USER_DATA)
Response:

{
    "code": "000000",
    "message": "success",
    "data":true,
    "success": true
}
POST /sapi/v1/capital/deposit/credit-apply

Apply deposit credit for expired address (One click arrival)

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
depositId	LONG	NO	Deposit record Id, priority use
txId	STRING	NO	Deposit txId, used when depositId is not specified
subAccountId	LONG	NO	Sub-accountId of Cloud user
subUserId	LONG	NO	Sub-userId of parent user
Params need to be in the POST body
Fetch deposit address list with network(USER_DATA)
Response:

[
  {
    "coin": "ETH",
    "address": "0xD316E95Fd9E8E237Cb11f8200Babbc5D8D177BA4",
    "tag":"",
    "isDefault": 0
  }, 
  {
    "coin": "ETH",
    "address": "0xD316E95Fd9E8E237Cb11f8200Babbc5D8D177BA4",
    "tag":"",
    "isDefault": 0
  }, 
  {
    "coin": "ETH",
    "address": "0x00003ada75e7da97ba0db2fcde72131f712455e2",
    "tag":"",
    "isDefault": 1  //'isDefault' is 1 means the address is default, same as shown in the app.
  }
]
GET /sapi/v1/capital/deposit/address/list

Fetch deposit address list with network.

Weight(IP): 10

Parameters:

Name	Type	Mandatory	Description
coin	STRING	YES	coin refers to the parent network address format that the address is using
network	STRING	NO	
timestamp	LONG	YES	
If network is not send, return with default network of the coin.
You can get network and isDefault in networkList in the response of Get /sapi/v1/capital/config/getall.
Query User Wallet Balance (USER_DATA)
Response:

[
  {
    "activate": true,
    "balance": "0",
    "walletName": "Spot"
  }, 
  {
    "activate": true,
    "balance": "0",
    "walletName": "Funding"
  }, 
  {
    "activate": true,
    "balance": "0",
    "walletName": "Cross Margin"
  }, 
  {
    "activate": true,
    "balance": "0",
    "walletName": "Isolated Margin"
  }, 
  {
    "activate": true,
    "balance": "0.71842752",
    "walletName": "USDⓈ-M Futures"
  }, 
  {
    "activate": true,
    "balance": "0",
    "walletName": "COIN-M Futures"
  }, 
  {
    "activate": true,
    "balance": "0",
    "walletName": "Earn"
  }, 
  {
    "activate": false,
    "balance": "0",
    "walletName": "Options"
  }
]
GET /sapi/v1/asset/wallet/balance

Query User Wallet Balance

Weight(IP): 60

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
You need to open Permits Universal Transfer permission for the API Key which requests this endpoint.
Query User Delegation History(For Master Account)(USER_DATA)
Response:

{
    "total": 3316,
    "rows": [
      {
        "clientTranId": "293915932290879488",
        "transferType": "Undelegate",
        "asset": "ETH",
        "amount": "1",
        "time": 1695205406000
      }, 
      {
        "clientTranId": "293915892281413632",
        "transferType": "Delegate",
        "asset": "ETH",
        "amount": "1",
        "time": 1695205396000
      }
    ]
}
GET /sapi/v1/asset/custody/transfer-history

Query User Delegation History

Weight(IP): 60

Parameters:

Name	Type	Mandatory	Description
email	STRING	YES	
startTime	LONG	YES	
endTime	LONG	YES	
type	ENUM	NO	Delegate/Undelegate
asset	STRING	NO	
current	INTEGER	NO	default 1
size	INTEGER	NO	default 10, max 100
recvWindow	LONG	NO	
timestamp	LONG	YES	
You need to open Enable Spot & Margin Trading permission for the API Key which requests this endpoint
Get symbols delist schedule for spot (MARKET_DATA)
GET /sapi/v1/spot/delist-schedule

Get symbols delist schedule for spot

Response:

[
  {
    "delistTime": 1686161202000,
    "symbols": [
      "ADAUSDT",
      "BNBUSDT"
    ]
  },
  {
    "delistTime": 1686222232000,
    "symbols": [
      "ETHUSDT"
    ]
  }
]
Weight(IP): 100

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
Fetch withdraw address list (USER_DATA)
GET /sapi/v1/capital/withdraw/address/list

Fetch withdraw address list

Response:

[
  {
    "address": "string",
    "addressTag": "string",
    "coin": "string",
    "name": "string",        //is a user-defined name
    "network": "string",
    "origin": "string",      //if originType=='others', the address source manually filled in by the user
    "originType": "string",  //Address source type
    "whiteStatus": true      //Is it whitelisted
  }
]
Weight(IP): 10

Account info (USER_DATA)
GET /sapi/v1/account/info

Fetch account info detail.

Response:

{
  "vipLevel": 0,
  "isMarginEnabled": true,     // true or false for margin
  "isFutureEnabled": true      // true or false for futures.
}
Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
recvWindow	LONG	NO	
timestamp	LONG	YES	
Sub-Account Endpoints
The endpoints documented in this section are for Corporate Accounts.
To become a corporate account, please refer to this document: Corporate Account Application
Create a Virtual Sub-account(For Master Account)
Response:

{
    "email":"addsdd_virtual@aasaixwqnoemail.com"
}
POST /sapi/v1/sub-account/virtualSubAccount

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
subAccountString	STRING	YES	Please input a string. We will create a virtual email using that string for you to register
recvWindow	LONG	NO	
timestamp	LONG	YES	
This request will generate a virtual sub account under your master account.
You need to enable "trade" option for the API Key which requests this endpoint.
Query Sub-account List (For Master Account)
Response:

{
    "subAccounts":[
        {
            "email":"testsub@gmail.com",
            "isFreeze":false,
            "createTime":1544433328000,
            "isManagedSubAccount": false,
            "isAssetManagementSubAccount": false
        },
        {
            "email":"virtual@oxebmvfonoemail.com",
            "isFreeze":false,
            "createTime":1544433328000,
            "isManagedSubAccount": false,
            "isAssetManagementSubAccount": false
        }
    ]
}
GET /sapi/v1/sub-account/list

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
email	STRING	NO	Sub-account email
isFreeze	STRING	NO	true or false
page	INT	NO	Default value: 1
limit	INT	NO	Default value: 1, Max value: 200
recvWindow	LONG	NO	
timestamp	LONG	YES	
Query Sub-account Spot Asset Transfer History (For Master Account)
Response:

[
    {
        "from":"aaa@test.com",
        "to":"bbb@test.com",
        "asset":"BTC",
        "qty":"10",
        "status": "SUCCESS",
        "tranId": 6489943656,
        "time":1544433328000
    },
    {
        "from":"bbb@test.com",
        "to":"ccc@test.com",
        "asset":"ETH",
        "qty":"2",
        "status": "SUCCESS",
        "tranId": 6489938713,
        "time":1544433328000
    }
]
GET /sapi/v1/sub-account/sub/transfer/history

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
fromEmail	STRING	NO	
toEmail	STRING	NO	
startTime	LONG	NO	
endTime	LONG	NO	
page	INT	NO	Default value: 1
limit	INT	NO	Default value: 500
recvWindow	LONG	NO	
timestamp	LONG	YES	
fromEmail and toEmail cannot be sent at the same time.
Return fromEmail equal master account email by default.
Query Sub-account Futures Asset Transfer History (For Master Account)
Response

{
    "success":true,
    "futuresType": 2,
    "transfers":[
        {
            "from":"aaa@test.com",
            "to":"bbb@test.com",
            "asset":"BTC",
            "qty":"1",
            "tranId":11897001102,
            "time":1544433328000
        },
        {
            "from":"bbb@test.com",
            "to":"ccc@test.com",
            "asset":"ETH",
            "qty":"2",
            "tranId":11631474902,
            "time":1544433328000
        }
    ]
}
GET /sapi/v1/sub-account/futures/internalTransfer

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
email	STRING	YES	Sub-account email
futuresType	LONG	YES	1:USDT-margined Futures，2: Coin-margined Futures
startTime	LONG	NO	Default return the history with in 100 days
endTime	LONG	NO	Default return the history with in 100 days
page	INT	NO	Default value: 1
limit	INT	NO	Default value: 50, Max value: 500
recvWindow	LONG	NO	
timestamp	LONG	YES	
Sub-account Futures Asset Transfer (For Master Account)
Response

{
    "success":true,
    "txnId":"2934662589"
}

POST /sapi/v1/sub-account/futures/internalTransfer

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
fromEmail	STRING	YES	Sender email
toEmail	STRING	YES	Recipient email
futuresType	LONG	YES	1:USDT-margined Futures，2: Coin-margined Futures
asset	STRING	YES	
amount	DECIMAL	YES	
recvWindow	LONG	NO	
timestamp	LONG	YES	
Master account can transfer max 2000 times a minute
There must be sufficient margin balance in futures wallet to execute transferring.
Query Sub-account Assets (For Master Account)
Response:

{
    "balances":[
        {
            "asset":"ADA",
            "free":10000,
            "locked":0
        },
        {
            "asset":"BNB",
            "free":10003,
            "locked":0
        },
        {
            "asset":"BTC",
            "free":11467.6399,
            "locked":0
        },
        {
            "asset":"ETH",
            "free":10004.995,
            "locked":0
        },
        {
            "asset":"USDT",
            "free":11652.14213,
            "locked":0
        }
    ]
}
GET /sapi/v3/sub-account/assets

Fetch sub-account assets

Weight(UID): 60

Parameters:

Name	Type	Mandatory	Description
email	STRING	YES	Sub account email
recvWindow	LONG	NO	
timestamp	LONG	YES	
Query Sub-account Spot Assets Summary (For Master Account)
Response:

{
    "totalCount":2,
    "masterAccountTotalAsset": "0.23231201",
    "spotSubUserAssetBtcVoList":[
        {
            "email":"sub123@test.com",
            "totalAsset":"9999.00000000"
        },
        {
            "email":"test456@test.com",
            "totalAsset":"0.00000000"
        }
    ]
}
Get BTC valued asset summary of subaccounts.

GET /sapi/v1/sub-account/spotSummary

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
email	STRING	NO	Sub account email
page	LONG	NO	default 1
size	LONG	NO	default 10, max 20
recvWindow	LONG	NO	
timestamp	LONG	YES	
Get Sub-account Deposit Address (For Master Account)
Response:

{
    "address":"TDunhSa7jkTNuKrusUTU1MUHtqXoBPKETV",
    "coin":"USDT",
    "tag":"",
    "url":"https://tronscan.org/#/address/TDunhSa7jkTNuKrusUTU1MUHtqXoBPKETV"
}
GET /sapi/v1/capital/deposit/subAddress

Fetch sub-account deposit address

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
email	STRING	YES	Sub account email
coin	STRING	YES	
network	STRING	NO	
amount	DECIMAL	NO	
recvWindow	LONG	NO	
timestamp	LONG	YES	
amount needs to be sent if using LIGHTNING network
Get Sub-account Deposit History (For Master Account)
Response:

[
    {
        "id": "769800519366885376",
        "amount": "0.001",
        "coin": "BNB",
        "network": "BNB",
        "status": 0,
        "address": "bnb136ns6lfw4zs5hg4n85vdthaad7hq5m4gtkgf23",
        "addressTag": "101764890",
        "txId": "98A3EA560C6B3336D348B6C83F0F95ECE4F1F5919E94BD006E5BF3BF264FACFC",
        "insertTime": 1661493146000,
        "transferType": 0,
        "confirmTimes": "1/1",
        "unlockConfirm": 0,
        "walletType": 0
    },
    {
        "id": "769754833590042625",
        "amount":"0.50000000",
        "coin":"IOTA",
        "network":"IOTA",
        "status":1,
        "address":"SIZ9VLMHWATXKV99LH99CIGFJFUMLEHGWVZVNNZXRJJVWBPHYWPPBOSDORZ9EQSHCZAMPVAPGFYQAUUV9DROOXJLNW",
        "addressTag":"",
        "txId":"ESBFVQUTPIWQNJSPXFNHNYHSQNTGKRVKPRABQWTAXCDWOAKDKYWPTVG9BGXNVNKTLEJGESAVXIKIZ9999",
        "insertTime":1599620082000,
        "transferType":0,
        "confirmTimes": "1/1",
        "unlockConfirm": 0,
        "walletType": 0
    }
]
GET /sapi/v1/capital/deposit/subHisrec

Fetch sub-account deposit history

Weight(IP): 1

Parameters:

Name	Type	Mandatory	Description
email	STRING	YES	Sub account email
coin	STRING	NO	
status	INT	NO	0(0:pending,6: credited but cannot withdraw,7:Wrong Deposit,8:Waiting User confirm,1:success)
startTime	LONG	NO	
endTime	LONG	NO	
limit	INT	NO	
offset	INT	NO	default:0
recvWindow	LONG	NO	
timestamp	LONG	YES	
txId	STRING	NO	
