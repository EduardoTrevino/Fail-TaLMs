{
  "tool_name": "mediawiki",
  "tool_description": "API to access and interact with Wikipedia content and revisions.",
  "title": "MediaWiki API",
  "pricing": "FREE",
  "score": {
    "avgServiceLevel": 95,
    "avgLatency": 200,
    "avgSuccessRate": 99,
    "popularityScore": 9.8,
    "__typename": "Score"
  },
  "home_url": "https://www.mediawiki.org/wiki/API:Main_page",
  "host": "en.wikipedia.org",
  "api_list": [
    {
      "name": "Parse",
      "url": "https://en.wikipedia.org/w/api.php",
      "description": "Get the contents of a page in HTML format.",
      "method": "GET",
      "required_parameters": [
        {
          "name": "page",
          "type": "STRING",
          "description": "Title of the page to parse.",
          "default": ""
        },
        {
          "name": "format",
          "type": "STRING",
          "description": "Output format.",
          "default": "json"
        }
      ],
      "optional_parameters": [
        {
          "name": "prop",
          "type": "STRING",
          "description": "Which pieces of information to get (e.g., text, categories).",
          "default": "text"
        }
      ],
      "code": "import requests\n\nurl = \"https://en.wikipedia.org/w/api.php\"\nquerystring = {\"action\": \"parse\", \"page\": page, \"prop\": prop, \"format\": format}\n\nheaders = {\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"en.wikipedia.org\"}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
      "statuscode": 200,
      "body": {
        "parse": {
          "title": "str",
          "pageid": "int",
          "text": {
            "*": "str"
          }
        }
      },
      "headers": {},
      "schema": {
        "type": "object",
        "properties": {
          "parse": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "pageid": {
                "type": "integer"
              },
              "text": {
                "type": "object",
                "properties": {
                  "*": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Query",
      "url": "https://en.wikipedia.org/w/api.php",
      "description": "Fetch data from and about MediaWiki.",
      "method": "GET",
      "required_parameters": [
        {
          "name": "titles",
          "type": "STRING",
          "description": "Titles of the pages to query.",
          "default": ""
        },
        {
          "name": "format",
          "type": "STRING",
          "description": "Output format.",
          "default": "json"
        }
      ],
      "optional_parameters": [
        {
          "name": "prop",
          "type": "STRING",
          "description": "Which pieces of information to get (e.g., revisions, categories).",
          "default": "revisions|categories"
        }
      ],
      "code": "import requests\n\nurl = \"https://en.wikipedia.org/w/api.php\"\nquerystring = {\"action\": \"query\", \"titles\": titles, \"prop\": prop, \"format\": format}\n\nheaders = {\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"en.wikipedia.org\"}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
      "statuscode": 200,
      "body": {
        "query": {
          "pages": {
            "pageid": {
              "pageid": "int",
              "title": "str",
              "revisions": [
                {
                  "revid": "int",
                  "parentid": "int",
                  "user": "str",
                  "timestamp": "str",
                  "comment": "str",
                  "size": "int"
                }
              ],
              "categories": [
                {
                  "ns": "int",
                  "title": "str"
                }
              ]
            }
          }
        }
      },
      "headers": {},
      "schema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "object",
            "properties": {
              "pages": {
                "type": "object",
                "properties": {
                  "pageid": {
                    "type": "object",
                    "properties": {
                      "pageid": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "revisions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "revid": {
                              "type": "integer"
                            },
                            "parentid": {
                              "type": "integer"
                            },
                            "user": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "size": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ns": {
                              "type": "integer"
                            },
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}
